Mathematica 8.0 for Linux x86 (64-bit)
Copyright 1988-2011 Wolfram Research, Inc.

In[1]:= 
In[2]:= 
In[3]:= 
In[3]:= Loading FeynCalc from /home/rolfm/HighEnergyPhysics
FeynCalc 8.0.2 Type ?FeynCalc for help or visit http://www.feyncalc.org/
$PrePrint is set to FeynCalcForm. Use FI and FC to change the display format.
Loading FeynArts, see www.feynarts.de for documentation
FeynArts 3.4 patched for use with FeynCalc

In[4]:= 
In[5]:= 
In[5]:= 
In[6]:= symms
76
collecting in solvesymms 0
collecting in solvesymms 0terms
time for collect in solvesymms = 0.
contracting
il = 1
il = 2
il = 3
il = 4
il = 5
il = 6
il = 7
il = 8
il = 9
il = 10
il = 11
il = 12
il = 13
il = 14
il = 15
il = 16
il = 17
il = 18
il = 19
il = 20
il = 21
il = 22
il = 23
il = 24
il = 25
il = 26
il = 27
il = 28
il = 29
il = 30
il = 31
il = 32
il = 33
il = 34
il = 35
il = 36
il = 37
il = 38
il = 39
il = 40
il = 41
il = 42
il = 43
il = 44
il = 45
il = 46
il = 47
il = 48
il = 49
il = 50
il = 51
il = 52
il = 53
il = 54
il = 55
il = 56
il = 57
il = 58
il = 59
il = 60
il = 61
il = 62
il = 63
il = 64
il = 65
il = 66
il = 67
il = 68
il = 69
il = 70
il = 71
il = 72
il = 73
il = 74
il = 75
il = 76
Length of eqli = 76
solving 76
Solve3 | 
 Launching kernels...
PAREVAL = {{3, (If[$VeryVerbose > 1, Print[ Collect with Factor ]]; 
      Collect[#1, {cC1, cC2, cC3, cC4, cC5, cC6, cC7, cC8, cC9, cC10, cC11, 
        cC12, cC13, cC14, cC15, cC16, cC17, cC18, cC19, cC20, cC21, cC22, 
        cC23, cC24, cC25, cC26, cC27, cC28, cC29, cC30, cC31, cC32, cC33, 
        cC34, cC35, cC36, cC37, cC38, cC39, cC40, cC41, cC42, cC43, cC44, 
        cC45, cC46, cC47, cC48, cC49, cC50, cC51, cC52, cC53, cC54, cC55, 
        cC56, cC57, cC58, cC59, cC60, cC61, cC62, cC63, cC64, cC65, cC66, 
        cC67, cC68, cC69, cC70, cC71, cC72, cC73, cC74, cC75, cC76}, Factor])\
     & }, {3, (If[$VeryVerbose > 1, Print[ Collect with Factor ]]; 
      Collect[#1, {cC1, cC2, cC3, cC4, cC5, cC6, cC7, cC8, cC9, cC10, cC11, 
        cC12, cC13, cC14, cC15, cC16, cC17, cC18, cC19, cC20, cC21, cC22, 
        cC23, cC24, cC25, cC26, cC27, cC28, cC29, cC30, cC31, cC32, cC33, 
        cC34, cC35, cC36, cC37, cC38, cC39, cC40, cC41, cC42, cC43, cC44, 
        cC45, cC46, cC47, cC48, cC49, cC50, cC51, cC52, cC53, cC54, cC55, 
        cC56, cC57, cC58, cC59, cC60, cC61, cC62, cC63, cC64, cC65, cC66, 
        cC67, cC68, cC69, cC70, cC71, cC72, cC73, cC74, cC75, cC76}, Factor])\
     & }, {3, (If[$VeryVerbose > 1, Print[ Collect with Factor ]]; 
      Collect[#1, {cC1, cC2, cC3, cC4, cC5, cC6, cC7, cC8, cC9, cC10, cC11, 
        cC12, cC13, cC14, cC15, cC16, cC17, cC18, cC19, cC20, cC21, cC22, 
        cC23, cC24, cC25, cC26, cC27, cC28, cC29, cC30, cC31, cC32, cC33, 
        cC34, cC35, cC36, cC37, cC38, cC39, cC40, cC41, cC42, cC43, cC44, 
        cC45, cC46, cC47, cC48, cC49, cC50, cC51, cC52, cC53, cC54, cC55, 
        cC56, cC57, cC58, cC59, cC60, cC61, cC62, cC63, cC64, cC65, cC66, 
        cC67, cC68, cC69, cC70, cC71, cC72, cC73, cC74, cC75, cC76}, Factor])\
     & }, {3, (If[$VeryVerbose > 1, Print[ Collect with Factor ]]; 
      Collect[#1, {cC1, cC2, cC3, cC4, cC5, cC6, cC7, cC8, cC9, cC10, cC11, 
        cC12, cC13, cC14, cC15, cC16, cC17, cC18, cC19, cC20, cC21, cC22, 
        cC23, cC24, cC25, cC26, cC27, cC28, cC29, cC30, cC31, cC32, cC33, 
        cC34, cC35, cC36, cC37, cC38, cC39, cC40, cC41, cC42, cC43, cC44, 
        cC45, cC46, cC47, cC48, cC49, cC50, cC51, cC52, cC53, cC54, cC55, 
        cC56, cC57, cC58, cC59, cC60, cC61, cC62, cC63, cC64, cC65, cC66, 
        cC67, cC68, cC69, cC70, cC71, cC72, cC73, cC74, cC75, cC76}, Factor])\
     & }}
solve3 i = 1    time used : 0 minutes
solving for cC1
Solve2 | 
 length 4.
#1solution = cC1 -> 
  -(cC2/X1) - cC3/X1 - (cC23*X11)/X1 - (cC24*X12)/X1 - (cC27*X12)/X1 - 
   (cC28*X14)/X1 - (cC13*X2)/X1 - (cC14*X3)/X1 - (cC17*X3)/X1 - 
   (cC29*X3)/X1 - (cC4*X3)/X2 - (cC5*X3)/(X1*X2) - (cC6*X3)/(X1*X2) - 
   (cC39*X11*X3)/(X1*X2) - (cC40*X12*X3)/(X1*X2) - (cC43*X12*X3)/(X1*X2) - 
   (cC44*X14*X3)/(X1*X2) - (cC30*X3^2)/(X1*X2) - (cC33*X3^2)/(X1*X2) - 
   (cC15*X4)/X1 - (cC21*X4)/X1 - (cC45*X4)/X1 - (cC7*X4)/X2 - 
   (cC8*X4)/(X1*X2) - (cC9*X4)/(X1*X2) - (cC55*X11*X4)/(X1*X2) - 
   (cC56*X12*X4)/(X1*X2) - (cC59*X12*X4)/(X1*X2) - (cC60*X14*X4)/(X1*X2) - 
   (cC31*X3*X4)/(X1*X2) - (cC37*X3*X4)/(X1*X2) - (cC46*X3*X4)/(X1*X2) - 
   (cC49*X3*X4)/(X1*X2) - (cC47*X4^2)/(X1*X2) - (cC53*X4^2)/(X1*X2) - 
   (cC16*X5)/X1 - (cC25*X5)/X1 - (cC61*X5)/X1 - (cC10*X5)/X2 - 
   (cC11*X5)/(X1*X2) - (cC12*X5)/(X1*X2) - (cC71*X11*X5)/(X1*X2) - 
   (cC72*X12*X5)/(X1*X2) - (cC75*X12*X5)/(X1*X2) - (cC76*X14*X5)/(X1*X2) - 
   (cC32*X3*X5)/(X1*X2) - (cC41*X3*X5)/(X1*X2) - (cC62*X3*X5)/(X1*X2) - 
   (cC65*X3*X5)/(X1*X2) - (cC48*X4*X5)/(X1*X2) - (cC57*X4*X5)/(X1*X2) - 
   (cC63*X4*X5)/(X1*X2) - (cC69*X4*X5)/(X1*X2) - (cC64*X5^2)/(X1*X2) - 
   (cC73*X5^2)/(X1*X2) + (X16*X6)/(X1*X2) - (cC18*X7)/X1 - 
   (cC34*X3*X7)/(X1*X2) - (cC50*X4*X7)/(X1*X2) - (cC66*X5*X7)/(X1*X2) - 
   (cC19*X8)/X1 - (cC22*X8)/X1 - (cC35*X3*X8)/(X1*X2) - 
   (cC38*X3*X8)/(X1*X2) - (cC51*X4*X8)/(X1*X2) - (cC54*X4*X8)/(X1*X2) - 
   (cC67*X5*X8)/(X1*X2) - (cC70*X5*X8)/(X1*X2) - (cC20*X9)/X1 - 
   (cC26*X9)/X1 - (cC36*X3*X9)/(X1*X2) - (cC42*X3*X9)/(X1*X2) - 
   (cC52*X4*X9)/(X1*X2) - (cC58*X4*X9)/(X1*X2) - (cC68*X5*X9)/(X1*X2) - 
   (cC74*X5*X9)/(X1*X2)
UPDATING 34254
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 98525
solve3 i = 2    time used : 0 minutes
solving for cC2
length 6.
#1solution = cC2 -> 
  -(cC3/(1 + X1)) - (cC13*X2)/(1 + X1) - (cC14*X3)/(1 + X1) - 
   (cC17*X3)/(1 + X1) - (cC29*X3)/(1 + X1) - (cC5*X3)/X2 - 
   (cC6*X3)/((1 + X1)*X2) - (cC33*X3^2)/((1 + X1)*X2) - (cC15*X4)/(1 + X1) - 
   (cC21*X4)/(1 + X1) - (cC45*X4)/(1 + X1) - (cC8*X4)/X2 - 
   (cC9*X4)/((1 + X1)*X2) - (cC55*X11*X4)/((1 + X1)*X2) - 
   (cC56*X12*X4)/((1 + X1)*X2) - (cC37*X3*X4)/((1 + X1)*X2) - 
   (cC49*X3*X4)/((1 + X1)*X2) - (cC53*X4^2)/((1 + X1)*X2) - 
   (cC47*(X1*X11*X2 - X4^2))/((-1 + X1)*(1 + X1)*X2) - 
   (cC23*(-(X11*X2) + X1*X4^2))/((-1 + X1)*(1 + X1)*X2) - 
   (cC16*X5)/(1 + X1) - (cC25*X5)/(1 + X1) - (cC61*X5)/(1 + X1) - 
   (cC11*X5)/X2 - (cC12*X5)/((1 + X1)*X2) - (cC75*X12*X5)/((1 + X1)*X2) - 
   (cC76*X14*X5)/((1 + X1)*X2) - (cC41*X3*X5)/((1 + X1)*X2) - 
   (cC65*X3*X5)/((1 + X1)*X2) - (cC57*X4*X5)/((1 + X1)*X2) - 
   (cC69*X4*X5)/((1 + X1)*X2) - (cC73*X5^2)/((1 + X1)*X2) - 
   (cC71*(X1*X12*X4 - X11*X5))/((-1 + X1)*(1 + X1)*X2) - 
   (cC59*(-(X12*X4) + X1*X11*X5))/((-1 + X1)*(1 + X1)*X2) - 
   (cC72*(X1*X14*X4 - X12*X5))/((-1 + X1)*(1 + X1)*X2) - 
   (cC60*(-(X14*X4) + X1*X12*X5))/((-1 + X1)*(1 + X1)*X2) - 
   (cC48*(X1*X12*X2 - X4*X5))/((-1 + X1)*(1 + X1)*X2) - 
   (cC63*(X1*X12*X2 - X4*X5))/((-1 + X1)*(1 + X1)*X2) - 
   (cC24*(-(X12*X2) + X1*X4*X5))/((-1 + X1)*(1 + X1)*X2) - 
   (cC27*(-(X12*X2) + X1*X4*X5))/((-1 + X1)*(1 + X1)*X2) - 
   (cC64*(X1*X14*X2 - X5^2))/((-1 + X1)*(1 + X1)*X2) - 
   (cC28*(-(X14*X2) + X1*X5^2))/((-1 + X1)*(1 + X1)*X2) + 
   (X16*X6)/((1 + X1)*X2) - (cC34*X3*X7)/((1 + X1)*X2) - 
   (cC18*(X1*X3^2 - X2*X7))/((-1 + X1)*(1 + X1)*X2) - 
   (cC30*(-X3^2 + X1*X2*X7))/((-1 + X1)*(1 + X1)*X2) - 
   (cC35*X3*X8)/((1 + X1)*X2) - (cC54*X4*X8)/((1 + X1)*X2) - 
   (cC19*(X1*X3*X4 - X2*X8))/((-1 + X1)*(1 + X1)*X2) - 
   (cC22*(X1*X3*X4 - X2*X8))/((-1 + X1)*(1 + X1)*X2) - 
   (cC31*(-(X3*X4) + X1*X2*X8))/((-1 + X1)*(1 + X1)*X2) - 
   (cC46*(-(X3*X4) + X1*X2*X8))/((-1 + X1)*(1 + X1)*X2) - 
   (cC38*(X1*X4*X7 - X3*X8))/((-1 + X1)*(1 + X1)*X2) - 
   (cC50*(-(X4*X7) + X1*X3*X8))/((-1 + X1)*(1 + X1)*X2) - 
   (cC51*(X1*X11*X3 - X4*X8))/((-1 + X1)*(1 + X1)*X2) - 
   (cC39*(-(X11*X3) + X1*X4*X8))/((-1 + X1)*(1 + X1)*X2) - 
   (cC67*(X1*X12*X3 - X5*X8))/((-1 + X1)*(1 + X1)*X2) - 
   (cC43*(-(X12*X3) + X1*X5*X8))/((-1 + X1)*(1 + X1)*X2) - 
   (cC36*X3*X9)/((1 + X1)*X2) - (cC74*X5*X9)/((1 + X1)*X2) - 
   (cC20*(X1*X3*X5 - X2*X9))/((-1 + X1)*(1 + X1)*X2) - 
   (cC26*(X1*X3*X5 - X2*X9))/((-1 + X1)*(1 + X1)*X2) - 
   (cC32*(-(X3*X5) + X1*X2*X9))/((-1 + X1)*(1 + X1)*X2) - 
   (cC62*(-(X3*X5) + X1*X2*X9))/((-1 + X1)*(1 + X1)*X2) - 
   (cC42*(X1*X5*X7 - X3*X9))/((-1 + X1)*(1 + X1)*X2) - 
   (cC66*(-(X5*X7) + X1*X3*X9))/((-1 + X1)*(1 + X1)*X2) - 
   (cC52*(X1*X12*X3 - X4*X9))/((-1 + X1)*(1 + X1)*X2) - 
   (cC58*(X1*X5*X8 - X4*X9))/((-1 + X1)*(1 + X1)*X2) - 
   (cC40*(-(X12*X3) + X1*X4*X9))/((-1 + X1)*(1 + X1)*X2) - 
   (cC70*(-(X5*X8) + X1*X4*X9))/((-1 + X1)*(1 + X1)*X2) - 
   (cC68*(X1*X14*X3 - X5*X9))/((-1 + X1)*(1 + X1)*X2) - 
   (cC44*(-(X14*X3) + X1*X5*X9))/((-1 + X1)*(1 + X1)*X2)
 Collect with Factor 
UPDATING 97565
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 173587
solve3 i = 3    time used : 0 minutes
solving for cC3
length 6.
#1solution = cC3 -> 
  -((cC13*X2)/(2 + X1)) - (cC14*X3)/(2 + X1) - (cC17*X3)/(2 + X1) - 
   (cC29*X3)/(2 + X1) - (cC6*X3)/X2 - (cC15*X4)/(2 + X1) - 
   (cC21*X4)/(2 + X1) - (cC45*X4)/(2 + X1) - (cC9*X4)/X2 - 
   (cC55*X11*X4)/((2 + X1)*X2) - 
   (cC53*(X11*X2 + X1*X11*X2 - 2*X4^2))/((-1 + X1)*(2 + X1)*X2) - 
   (cC23*(-(X11*X2) + X1*X4^2))/((-1 + X1)*(2 + X1)*X2) - 
   (cC47*(-(X11*X2) + X1*X4^2))/((-1 + X1)*(2 + X1)*X2) - 
   (cC16*X5)/(2 + X1) - (cC25*X5)/(2 + X1) - (cC61*X5)/(2 + X1) - 
   (cC12*X5)/X2 - (cC76*X14*X5)/((2 + X1)*X2) - 
   (cC59*(X1*X12*X4 - X11*X5))/((-1 + X1)*(2 + X1)*X2) - 
   (cC71*(X1*X12*X4 - X11*X5))/((-1 + X1)*(2 + X1)*X2) - 
   (cC56*(-2*X12*X4 + X11*X5 + X1*X11*X5))/((-1 + X1)*(2 + X1)*X2) - 
   (cC75*(X14*X4 + X1*X14*X4 - 2*X12*X5))/((-1 + X1)*(2 + X1)*X2) - 
   (cC60*(-(X14*X4) + X1*X12*X5))/((-1 + X1)*(2 + X1)*X2) - 
   (cC72*(-(X14*X4) + X1*X12*X5))/((-1 + X1)*(2 + X1)*X2) - 
   (cC57*(X12*X2 + X1*X12*X2 - 2*X4*X5))/((-1 + X1)*(2 + X1)*X2) - 
   (cC69*(X12*X2 + X1*X12*X2 - 2*X4*X5))/((-1 + X1)*(2 + X1)*X2) - 
   (cC24*(-(X12*X2) + X1*X4*X5))/((-1 + X1)*(2 + X1)*X2) - 
   (cC27*(-(X12*X2) + X1*X4*X5))/((-1 + X1)*(2 + X1)*X2) - 
   (cC48*(-(X12*X2) + X1*X4*X5))/((-1 + X1)*(2 + X1)*X2) - 
   (cC63*(-(X12*X2) + X1*X4*X5))/((-1 + X1)*(2 + X1)*X2) - 
   (cC73*(X14*X2 + X1*X14*X2 - 2*X5^2))/((-1 + X1)*(2 + X1)*X2) - 
   (cC28*(-(X14*X2) + X1*X5^2))/((-1 + X1)*(2 + X1)*X2) - 
   (cC64*(-(X14*X2) + X1*X5^2))/((-1 + X1)*(2 + X1)*X2) + 
   (X16*X6)/((2 + X1)*X2) - (cC34*X3*X7)/((2 + X1)*X2) - 
   (cC18*(X1*X3^2 - X2*X7))/((-1 + X1)*(2 + X1)*X2) - 
   (cC30*(X1*X3^2 - X2*X7))/((-1 + X1)*(2 + X1)*X2) - 
   (cC33*(-2*X3^2 + X2*X7 + X1*X2*X7))/((-1 + X1)*(2 + X1)*X2) - 
   (cC19*(X1*X3*X4 - X2*X8))/((-1 + X1)*(2 + X1)*X2) - 
   (cC22*(X1*X3*X4 - X2*X8))/((-1 + X1)*(2 + X1)*X2) - 
   (cC31*(X1*X3*X4 - X2*X8))/((-1 + X1)*(2 + X1)*X2) - 
   (cC46*(X1*X3*X4 - X2*X8))/((-1 + X1)*(2 + X1)*X2) - 
   (cC37*(-2*X3*X4 + X2*X8 + X1*X2*X8))/((-1 + X1)*(2 + X1)*X2) - 
   (cC49*(-2*X3*X4 + X2*X8 + X1*X2*X8))/((-1 + X1)*(2 + X1)*X2) - 
   (cC35*(X4*X7 + X1*X4*X7 - 2*X3*X8))/((-1 + X1)*(2 + X1)*X2) - 
   (cC38*(-(X4*X7) + X1*X3*X8))/((-1 + X1)*(2 + X1)*X2) - 
   (cC50*(-(X4*X7) + X1*X3*X8))/((-1 + X1)*(2 + X1)*X2) - 
   (cC54*(X11*X3 + X1*X11*X3 - 2*X4*X8))/((-1 + X1)*(2 + X1)*X2) - 
   (cC39*(-(X11*X3) + X1*X4*X8))/((-1 + X1)*(2 + X1)*X2) - 
   (cC51*(-(X11*X3) + X1*X4*X8))/((-1 + X1)*(2 + X1)*X2) - 
   (cC20*(X1*X3*X5 - X2*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC26*(X1*X3*X5 - X2*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC32*(X1*X3*X5 - X2*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC62*(X1*X3*X5 - X2*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC41*(-2*X3*X5 + X2*X9 + X1*X2*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC65*(-2*X3*X5 + X2*X9 + X1*X2*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC36*(X5*X7 + X1*X5*X7 - 2*X3*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC42*(-(X5*X7) + X1*X3*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC66*(-(X5*X7) + X1*X3*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC58*(X12*X3 + X1*X12*X3 - X5*X8 - X4*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC70*(X12*X3 + X1*X12*X3 - X5*X8 - X4*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC40*(-(X12*X3) + X5*X8 + X1*X5*X8 - X4*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC52*(-(X12*X3) + X5*X8 + X1*X5*X8 - X4*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC43*(-(X12*X3) - X5*X8 + X4*X9 + X1*X4*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC67*(-(X12*X3) - X5*X8 + X4*X9 + X1*X4*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC74*(X14*X3 + X1*X14*X3 - 2*X5*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC44*(-(X14*X3) + X1*X5*X9))/((-1 + X1)*(2 + X1)*X2) - 
   (cC68*(-(X14*X3) + X1*X5*X9))/((-1 + X1)*(2 + X1)*X2)
 Collect with Factor 
 Collect with Factor 
UPDATING 172382
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 231218
solve3 i = 4    time used : 0 minutes
solving for cC4
length 5.
#1solution = cC4 -> 
  -(cC5/X1) - cC6/X1 - (cC39*X11)/X1 - (cC40*X12)/X1 - (cC43*X12)/X1 - 
   (cC44*X14)/X1 - (cC29*X2)/X1 - (cC30*X3)/X1 - (cC33*X3)/X1 - 
   (cC31*X4)/X1 - (cC37*X4)/X1 - (cC32*X5)/X1 - (cC41*X5)/X1 - (cC34*X7)/X1 - 
   (X16*(X10*X2 - X3*X6))/(X1*(X3^2 - X2*X7)) - (cC35*X8)/X1 - (cC38*X8)/X1 - 
   (cC7*(X3*X4 - X2*X8))/(X3^2 - X2*X7) - 
   (cC8*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC9*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC55*X11*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC56*X12*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC59*X12*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC60*X14*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC46*X3*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC49*X3*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC47*X4*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC53*X4*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC48*X5*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC57*X5*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC50*X7*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC51*X8*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) - 
   (cC54*X8*(X3*X4 - X2*X8))/(X1*(X3^2 - X2*X7)) + 
   (cC45*X2*(-(X3*X4) + X2*X8))/(X1*(X3^2 - X2*X7)) - (cC36*X9)/X1 - 
   (cC42*X9)/X1 - (cC52*(X3*X4 - X2*X8)*X9)/(X1*(X3^2 - X2*X7)) - 
   (cC58*(X3*X4 - X2*X8)*X9)/(X1*(X3^2 - X2*X7)) - 
   (cC10*(X3*X5 - X2*X9))/(X3^2 - X2*X7) - 
   (cC11*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC12*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC71*X11*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC72*X12*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC75*X12*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC76*X14*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC62*X3*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC65*X3*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC63*X4*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC69*X4*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC64*X5*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC73*X5*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC66*X7*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC67*X8*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC70*X8*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC68*X9*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) - 
   (cC74*X9*(X3*X5 - X2*X9))/(X1*(X3^2 - X2*X7)) + 
   (cC61*X2*(-(X3*X5) + X2*X9))/(X1*(X3^2 - X2*X7))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 230352
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 468279
solve3 i = 5    time used : -1 minutes
solving for cC5
length 7.
#1solution = cC5 -> 
  -(cC6/(1 + X1)) + (cC29*X2)/((-1 + X1)*(1 + X1)) - 
   (cC17*X1*X2)/((-1 + X1)*(1 + X1)) - (cC33*X3)/(1 + X1) + 
   (cC30*X3)/((-1 + X1)*(1 + X1)) - (cC18*X1*X3)/((-1 + X1)*(1 + X1)) + 
   (cC31*X4)/((-1 + X1)*(1 + X1)) - (cC19*X1*X4)/((-1 + X1)*(1 + X1)) + 
   (cC32*X5)/((-1 + X1)*(1 + X1)) - (cC20*X1*X5)/((-1 + X1)*(1 + X1)) - 
   (cC34*X7)/(1 + X1) - (X16*(X10*X2 - X3*X6))/((1 + X1)*(X3^2 - X2*X7)) - 
   (cC35*X8)/(1 + X1) - (cC8*(X3*X4 - X2*X8))/(X3^2 - X2*X7) - 
   (cC9*(X3*X4 - X2*X8))/((1 + X1)*(X3^2 - X2*X7)) - 
   (cC55*X11*(X3*X4 - X2*X8))/((1 + X1)*(X3^2 - X2*X7)) - 
   (cC56*X12*(X3*X4 - X2*X8))/((1 + X1)*(X3^2 - X2*X7)) + 
   (cC46*X3*(X3*X4 - X2*X8))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC22*X1*X3*(X3*X4 - X2*X8))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC53*X4*(X3*X4 - X2*X8))/((1 + X1)*(X3^2 - X2*X7)) + 
   (cC47*X4*(X3*X4 - X2*X8))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC23*X1*X4*(X3*X4 - X2*X8))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) + 
   (cC48*X5*(X3*X4 - X2*X8))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC24*X1*X5*(X3*X4 - X2*X8))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC54*X8*(X3*X4 - X2*X8))/((1 + X1)*(X3^2 - X2*X7)) - 
   (cC45*X2*(-(X3*X4) + X2*X8))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) + 
   (cC21*X1*X2*(-(X3*X4) + X2*X8))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC49*(-(X3^2*X4) + X1*X3^2*X4 - X1*X2*X4*X7 + X2*X3*X8))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC37*(-(X3^2*X4) + X1*X3^2*X4 + X2*X4*X7 - X1*X2*X3*X8))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC38*(X1*X3*X4*X7 - X3^2*X8 + X2*X7*X8 - X1*X2*X7*X8))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC50*(-(X3*X4*X7) + X1*X3^2*X8 + X2*X7*X8 - X1*X2*X7*X8))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC51*(X1*X11*X3^2 - X1*X11*X2*X7 - X3*X4*X8 + X2*X8^2))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC39*(-(X11*X3^2) + X11*X2*X7 + X1*X3*X4*X8 - X1*X2*X8^2))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - (cC36*X9)/(1 + X1) - 
   (cC11*(X3*X5 - X2*X9))/(X3^2 - X2*X7) - 
   (cC12*(X3*X5 - X2*X9))/((1 + X1)*(X3^2 - X2*X7)) - 
   (cC75*X12*(X3*X5 - X2*X9))/((1 + X1)*(X3^2 - X2*X7)) - 
   (cC76*X14*(X3*X5 - X2*X9))/((1 + X1)*(X3^2 - X2*X7)) + 
   (cC62*X3*(X3*X5 - X2*X9))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC26*X1*X3*(X3*X5 - X2*X9))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) + 
   (cC63*X4*(X3*X5 - X2*X9))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC27*X1*X4*(X3*X5 - X2*X9))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC73*X5*(X3*X5 - X2*X9))/((1 + X1)*(X3^2 - X2*X7)) + 
   (cC64*X5*(X3*X5 - X2*X9))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC28*X1*X5*(X3*X5 - X2*X9))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC74*X9*(X3*X5 - X2*X9))/((1 + X1)*(X3^2 - X2*X7)) - 
   (cC61*X2*(-(X3*X5) + X2*X9))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) + 
   (cC25*X1*X2*(-(X3*X5) + X2*X9))/((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC71*(X1*X12*X3*X4 - X11*X3*X5 - X1*X12*X2*X8 + X11*X2*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC59*(-(X12*X3*X4) + X1*X11*X3*X5 + X12*X2*X8 - X1*X11*X2*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC72*(X1*X14*X3*X4 - X12*X3*X5 - X1*X14*X2*X8 + X12*X2*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC60*(-(X14*X3*X4) + X1*X12*X3*X5 + X14*X2*X8 - X1*X12*X2*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC65*(-(X3^2*X5) + X1*X3^2*X5 - X1*X2*X5*X7 + X2*X3*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC41*(-(X3^2*X5) + X1*X3^2*X5 + X2*X5*X7 - X1*X2*X3*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC69*(-(X3*X4*X5) + X1*X3*X4*X5 - X1*X2*X5*X8 + X2*X4*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC57*(-(X3*X4*X5) + X1*X3*X4*X5 + X2*X5*X8 - X1*X2*X4*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC42*(X1*X3*X5*X7 - X3^2*X9 + X2*X7*X9 - X1*X2*X7*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC66*(-(X3*X5*X7) + X1*X3^2*X9 + X2*X7*X9 - X1*X2*X7*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC67*(X1*X12*X3^2 - X1*X12*X2*X7 - X3*X5*X8 + X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC52*(X1*X12*X3^2 - X1*X12*X2*X7 - X3*X4*X9 + X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC43*(-(X12*X3^2) + X12*X2*X7 + X1*X3*X5*X8 - X1*X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC40*(-(X12*X3^2) + X12*X2*X7 + X1*X3*X4*X9 - X1*X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC58*(X1*X3*X5*X8 - X3*X4*X9 + X2*X8*X9 - X1*X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC70*(-(X3*X5*X8) + X1*X3*X4*X9 + X2*X8*X9 - X1*X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC68*(X1*X14*X3^2 - X1*X14*X2*X7 - X3*X5*X9 + X2*X9^2))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7)) - 
   (cC44*(-(X14*X3^2) + X14*X2*X7 + X1*X3*X5*X9 - X1*X2*X9^2))/
    ((-1 + X1)*(1 + X1)*(X3^2 - X2*X7))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 466762
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 863805
solve3 i = 6    time used : -1 minutes
solving for cC6
length 7.
#1solution = cC6 -> 
  (cC17*X2)/((-1 + X1)*(2 + X1)) + (cC29*X2)/((-1 + X1)*(2 + X1)) - 
   (cC14*(1 + X1)*X2)/((-1 + X1)*(2 + X1)) + 
   (2*cC33*X3)/((-1 + X1)*(2 + X1)) - (cC18*X1*X3)/((-1 + X1)*(2 + X1)) - 
   (cC30*X1*X3)/((-1 + X1)*(2 + X1)) - (cC34*X7)/(2 + X1) - 
   (X16*(X10*X2 - X3*X6))/((2 + X1)*(X3^2 - X2*X7)) - 
   (cC9*(X3*X4 - X2*X8))/(X3^2 - X2*X7) - 
   (cC55*X11*(X3*X4 - X2*X8))/((2 + X1)*(X3^2 - X2*X7)) + 
   (2*cC53*X4*(X3*X4 - X2*X8))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC23*X1*X4*(X3*X4 - X2*X8))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC47*X1*X4*(X3*X4 - X2*X8))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC21*X2*(-(X3*X4) + X2*X8))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC45*X2*(-(X3*X4) + X2*X8))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) + 
   (cC15*(1 + X1)*X2*(-(X3*X4) + X2*X8))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) + 
   (cC37*(2*X3^2*X4 - X2*X4*X7 - X2*X3*X8))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) + 
   (cC49*(2*X3^2*X4 - X2*X4*X7 - X2*X3*X8))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC22*(X1*X3^2*X4 - X2*X4*X7 - X1*X2*X4*X7 + X2*X3*X8))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC46*(X1*X3^2*X4 - X2*X4*X7 - X1*X2*X4*X7 + X2*X3*X8))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC19*(X1*X3^2*X4 + X2*X4*X7 - X2*X3*X8 - X1*X2*X3*X8))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC31*(X1*X3^2*X4 + X2*X4*X7 - X2*X3*X8 - X1*X2*X3*X8))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC35*(X3*X4*X7 + X1*X3*X4*X7 - 2*X3^2*X8 + X2*X7*X8 - X1*X2*X7*X8))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC38*(-(X3*X4*X7) + X1*X3^2*X8 + X2*X7*X8 - X1*X2*X7*X8))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC50*(-(X3*X4*X7) + X1*X3^2*X8 + X2*X7*X8 - X1*X2*X7*X8))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC54*(X11*X3^2 + X1*X11*X3^2 - X11*X2*X7 - X1*X11*X2*X7 - 2*X3*X4*X8 + 
        2*X2*X8^2))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC39*(-(X11*X3^2) + X11*X2*X7 + X1*X3*X4*X8 - X1*X2*X8^2))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC51*(-(X11*X3^2) + X11*X2*X7 + X1*X3*X4*X8 - X1*X2*X8^2))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC12*(X3*X5 - X2*X9))/(X3^2 - X2*X7) - 
   (cC76*X14*(X3*X5 - X2*X9))/((2 + X1)*(X3^2 - X2*X7)) + 
   (2*cC73*X5*(X3*X5 - X2*X9))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC28*X1*X5*(X3*X5 - X2*X9))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC64*X1*X5*(X3*X5 - X2*X9))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC25*X2*(-(X3*X5) + X2*X9))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC61*X2*(-(X3*X5) + X2*X9))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) + 
   (cC16*(1 + X1)*X2*(-(X3*X5) + X2*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC59*(X1*X12*X3*X4 - X11*X3*X5 - X1*X12*X2*X8 + X11*X2*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC71*(X1*X12*X3*X4 - X11*X3*X5 - X1*X12*X2*X8 + X11*X2*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC56*(-2*X12*X3*X4 + X11*X3*X5 + X1*X11*X3*X5 + 2*X12*X2*X8 - X11*X2*X9 - 
        X1*X11*X2*X9))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC75*(X14*X3*X4 + X1*X14*X3*X4 - 2*X12*X3*X5 - X14*X2*X8 - X1*X14*X2*X8 + 
        2*X12*X2*X9))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC60*(-(X14*X3*X4) + X1*X12*X3*X5 + X14*X2*X8 - X1*X12*X2*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC72*(-(X14*X3*X4) + X1*X12*X3*X5 + X14*X2*X8 - X1*X12*X2*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) + 
   (cC41*(2*X3^2*X5 - X2*X5*X7 - X2*X3*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) + 
   (cC65*(2*X3^2*X5 - X2*X5*X7 - X2*X3*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC26*(X1*X3^2*X5 - X2*X5*X7 - X1*X2*X5*X7 + X2*X3*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC62*(X1*X3^2*X5 - X2*X5*X7 - X1*X2*X5*X7 + X2*X3*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC20*(X1*X3^2*X5 + X2*X5*X7 - X2*X3*X9 - X1*X2*X3*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC32*(X1*X3^2*X5 + X2*X5*X7 - X2*X3*X9 - X1*X2*X3*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) + 
   (cC57*(2*X3*X4*X5 - X2*X5*X8 - X2*X4*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) + 
   (cC69*(2*X3*X4*X5 - X2*X5*X8 - X2*X4*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC27*(X1*X3*X4*X5 - X2*X5*X8 - X1*X2*X5*X8 + X2*X4*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC63*(X1*X3*X4*X5 - X2*X5*X8 - X1*X2*X5*X8 + X2*X4*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC24*(X1*X3*X4*X5 + X2*X5*X8 - X2*X4*X9 - X1*X2*X4*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC48*(X1*X3*X4*X5 + X2*X5*X8 - X2*X4*X9 - X1*X2*X4*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC36*(X3*X5*X7 + X1*X3*X5*X7 - 2*X3^2*X9 + X2*X7*X9 - X1*X2*X7*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC42*(-(X3*X5*X7) + X1*X3^2*X9 + X2*X7*X9 - X1*X2*X7*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC66*(-(X3*X5*X7) + X1*X3^2*X9 + X2*X7*X9 - X1*X2*X7*X9))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC58*(X12*X3^2 + X1*X12*X3^2 - X12*X2*X7 - X1*X12*X2*X7 - X3*X5*X8 - 
        X3*X4*X9 + 2*X2*X8*X9))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC70*(X12*X3^2 + X1*X12*X3^2 - X12*X2*X7 - X1*X12*X2*X7 - X3*X5*X8 - 
        X3*X4*X9 + 2*X2*X8*X9))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC40*(-(X12*X3^2) + X12*X2*X7 + X3*X5*X8 + X1*X3*X5*X8 - X3*X4*X9 - 
        X1*X2*X8*X9))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC52*(-(X12*X3^2) + X12*X2*X7 + X3*X5*X8 + X1*X3*X5*X8 - X3*X4*X9 - 
        X1*X2*X8*X9))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC43*(-(X12*X3^2) + X12*X2*X7 - X3*X5*X8 + X3*X4*X9 + X1*X3*X4*X9 - 
        X1*X2*X8*X9))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC67*(-(X12*X3^2) + X12*X2*X7 - X3*X5*X8 + X3*X4*X9 + X1*X3*X4*X9 - 
        X1*X2*X8*X9))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC74*(X14*X3^2 + X1*X14*X3^2 - X14*X2*X7 - X1*X14*X2*X7 - 2*X3*X5*X9 + 
        2*X2*X9^2))/((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC44*(-(X14*X3^2) + X14*X2*X7 + X1*X3*X5*X9 - X1*X2*X9^2))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7)) - 
   (cC68*(-(X14*X3^2) + X14*X2*X7 + X1*X3*X5*X9 - X1*X2*X9^2))/
    ((-1 + X1)*(2 + X1)*(X3^2 - X2*X7))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 861872
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 519821
solve3 i = 7    time used : -2 minutes
solving for cC7
length 5.
#1solution = cC7 -> 
  -(cC8/X1) - cC9/X1 - (cC55*X11)/X1 - (cC56*X12)/X1 - (cC59*X12)/X1 - 
   (cC60*X14)/X1 - (cC45*X2)/X1 - (cC46*X3)/X1 - (cC49*X3)/X1 - 
   (cC47*X4)/X1 - (cC53*X4)/X1 - (cC48*X5)/X1 - (cC57*X5)/X1 - (cC50*X7)/X1 - 
   (cC51*X8)/X1 - (cC54*X8)/X1 + 
   (X16*(X13*X3^2 - X10*X3*X4 - X13*X2*X7 + X4*X6*X7 + X10*X2*X8 - X3*X6*X8))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC52*X9)/X1 - (cC58*X9)/X1 + 
   (cC61*X2*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) + 
   (cC63*X4*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) + 
   (cC69*X4*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) + 
   (cC64*X5*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) + 
   (cC73*X5*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) + 
   (cC66*X7*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) + 
   (cC67*X8*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) + 
   (cC70*X8*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC10*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    (X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2) - 
   (cC11*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC12*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC71*X11*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC72*X12*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC75*X12*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC76*X14*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC62*X3*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC65*X3*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC68*X9*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC74*X9*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    (X1*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 518202
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 934454
solve3 i = 8    time used : -2 minutes
solving for cC8
length 7.
#1solution = cC8 -> 
  -(cC9/(1 + X1)) - (cC55*X11)/(1 + X1) - (cC56*X12)/(1 + X1) + 
   (cC45*X2)/((-1 + X1)*(1 + X1)) - (cC21*X1*X2)/((-1 + X1)*(1 + X1)) + 
   (cC46*X3)/((-1 + X1)*(1 + X1)) + (cC49*X3)/((-1 + X1)*(1 + X1)) - 
   (cC22*X1*X3)/((-1 + X1)*(1 + X1)) - (cC37*X1*X3)/((-1 + X1)*(1 + X1)) - 
   (cC53*X4)/(1 + X1) + (cC47*X4)/((-1 + X1)*(1 + X1)) - 
   (cC23*X1*X4)/((-1 + X1)*(1 + X1)) + (cC48*X5)/((-1 + X1)*(1 + X1)) - 
   (cC24*X1*X5)/((-1 + X1)*(1 + X1)) + (cC50*X7)/((-1 + X1)*(1 + X1)) - 
   (cC38*X1*X7)/((-1 + X1)*(1 + X1)) - (cC54*X8)/(1 + X1) + 
   (cC51*X8)/((-1 + X1)*(1 + X1)) - (cC39*X1*X8)/((-1 + X1)*(1 + X1)) + 
   (X16*(X13*X3^2 - X10*X3*X4 - X13*X2*X7 + X4*X6*X7 + X10*X2*X8 - X3*X6*X8))/
    ((1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) + 
   (cC52*X9)/((-1 + X1)*(1 + X1)) - (cC40*X1*X9)/((-1 + X1)*(1 + X1)) - 
   (cC61*X2*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC25*X1*X2*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC63*X4*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC27*X1*X4*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC73*X5*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC64*X5*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC28*X1*X5*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC66*X7*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC42*X1*X7*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC67*X8*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC43*X1*X8*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC11*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - 
        X3*X4*X9 + X2*X8*X9))/
    (X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2) - 
   (cC12*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    ((1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC75*X12*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    ((1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC76*X14*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    ((1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) + 
   (cC62*X3*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC65*X3*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - 
        X3*X4*X9 + X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC26*X1*X3*
      (X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC41*X1*X3*
      (X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC74*X9*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - 
        X3*X4*X9 + X2*X8*X9))/
    ((1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) + 
   (cC68*X9*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC44*X1*X9*
      (X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC71*(-(X11*X12*X3^2) + X1*X11*X12*X3^2 + 
        X11*X12*X2*X7 - X1*X11*X12*X2*X7 + X1*X12*X4^2*X7 - X11*X4*X5*X7 - 
        2*X1*X12*X3*X4*X8 + X11*X3*X5*X8 + X1*X12*X2*X8^2 + X11*X3*X4*X9 - 
        X11*X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC59*(-(X11*X12*X3^2) + X1*X11*X12*X3^2 + 
        X11*X12*X2*X7 - X1*X11*X12*X2*X7 - X12*X4^2*X7 + X1*X11*X4*X5*X7 + 
        2*X12*X3*X4*X8 - X1*X11*X3*X5*X8 - X12*X2*X8^2 - X1*X11*X3*X4*X9 + 
        X1*X11*X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC72*(-(X12^2*X3^2) + X1*X11*X14*X3^2 + X12^2*X2*X7 - 
        X1*X11*X14*X2*X7 + X1*X14*X4^2*X7 - X12*X4*X5*X7 - 
        2*X1*X14*X3*X4*X8 + X12*X3*X5*X8 + X1*X14*X2*X8^2 + X12*X3*X4*X9 - 
        X12*X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC60*(X1*X12^2*X3^2 - X11*X14*X3^2 - X1*X12^2*X2*X7 + 
        X11*X14*X2*X7 - X14*X4^2*X7 + X1*X12*X4*X5*X7 + 2*X14*X3*X4*X8 - 
        X1*X12*X3*X5*X8 - X14*X2*X8^2 - X1*X12*X3*X4*X9 + X1*X12*X2*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC69*(-(X12*X3^2*X4) + X1*X11*X3^2*X5 + X12*X2*X4*X7 - 
        X1*X11*X2*X5*X7 - X4^2*X5*X7 + X1*X4^2*X5*X7 + X3*X4*X5*X8 - 
        2*X1*X3*X4*X5*X8 + X1*X2*X5*X8^2 + X3*X4^2*X9 - X2*X4*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC57*(X1*X12*X3^2*X4 - X11*X3^2*X5 - X1*X12*X2*X4*X7 + 
        X11*X2*X5*X7 - X4^2*X5*X7 + X1*X4^2*X5*X7 + 2*X3*X4*X5*X8 - 
        X1*X3*X4*X5*X8 - X2*X5*X8^2 - X1*X3*X4^2*X9 + X1*X2*X4*X8*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC70*(-(X12*X3^2*X8) + X12*X2*X7*X8 - X4*X5*X7*X8 + 
        X3*X5*X8^2 + X1*X11*X3^2*X9 - X1*X11*X2*X7*X9 + X1*X4^2*X7*X9 + 
        X3*X4*X8*X9 - 2*X1*X3*X4*X8*X9 - X2*X8^2*X9 + X1*X2*X8^2*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC58*(X1*X12*X3^2*X8 - X1*X12*X2*X7*X8 + 
        X1*X4*X5*X7*X8 - X1*X3*X5*X8^2 - X11*X3^2*X9 + X11*X2*X7*X9 - 
        X4^2*X7*X9 + 2*X3*X4*X8*X9 - X1*X3*X4*X8*X9 - X2*X8^2*X9 + 
        X1*X2*X8^2*X9))/
    ((-1 + X1)*(1 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 931750
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 1850121
solve3 i = 9    time used : -3 minutes
solving for cC9
length 7.
#1solution = cC9 -> 
  -((cC55*X11)/(2 + X1)) + (cC21*X2)/((-1 + X1)*(2 + X1)) + 
   (cC45*X2)/((-1 + X1)*(2 + X1)) - (cC15*(1 + X1)*X2)/((-1 + X1)*(2 + X1)) + 
   (cC22*X3)/((-1 + X1)*(2 + X1)) + (cC37*X3)/((-1 + X1)*(2 + X1)) + 
   (cC46*X3)/((-1 + X1)*(2 + X1)) + (cC49*X3)/((-1 + X1)*(2 + X1)) - 
   (cC19*(1 + X1)*X3)/((-1 + X1)*(2 + X1)) - 
   (cC31*(1 + X1)*X3)/((-1 + X1)*(2 + X1)) + 
   (2*cC53*X4)/((-1 + X1)*(2 + X1)) - (cC23*X1*X4)/((-1 + X1)*(2 + X1)) - 
   (cC47*X1*X4)/((-1 + X1)*(2 + X1)) + (cC38*X7)/((-1 + X1)*(2 + X1)) + 
   (cC50*X7)/((-1 + X1)*(2 + X1)) - (cC35*(1 + X1)*X7)/((-1 + X1)*(2 + X1)) + 
   (2*cC54*X8)/((-1 + X1)*(2 + X1)) - (cC39*X1*X8)/((-1 + X1)*(2 + X1)) - 
   (cC51*X1*X8)/((-1 + X1)*(2 + X1)) + 
   (X16*(X13*X3^2 - X10*X3*X4 - X13*X2*X7 + X4*X6*X7 + X10*X2*X8 - X3*X6*X8))/
    ((2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC25*X2*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC61*X2*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC16*(1 + X1)*X2*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (2*cC73*X5*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + 
        X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC28*X1*X5*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC64*X1*X5*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC42*X7*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC66*X7*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC36*(1 + X1)*X7*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC12*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - 
        X3*X4*X9 + X2*X8*X9))/
    (X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2) - 
   (cC76*X14*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    ((2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) + 
   (cC26*X3*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + 
        X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC41*X3*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - 
        X3*X4*X9 + X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC62*X3*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - 
        X3*X4*X9 + X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC65*X3*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - 
        X3*X4*X9 + X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC20*(1 + X1)*X3*
      (X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC32*(1 + X1)*X3*
      (X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (2*cC74*X9*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - 
        X3*X4*X9 + X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC44*X1*X9*
      (X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC68*X1*X9*
      (X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC59*(-(X11*X12*X3^2) + X1*X11*X12*X3^2 + 
        X11*X12*X2*X7 - X1*X11*X12*X2*X7 + X1*X12*X4^2*X7 - X11*X4*X5*X7 - 
        2*X1*X12*X3*X4*X8 + X11*X3*X5*X8 + X1*X12*X2*X8^2 + X11*X3*X4*X9 - 
        X11*X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC71*(-(X11*X12*X3^2) + X1*X11*X12*X3^2 + 
        X11*X12*X2*X7 - X1*X11*X12*X2*X7 + X1*X12*X4^2*X7 - X11*X4*X5*X7 - 
        2*X1*X12*X3*X4*X8 + X11*X3*X5*X8 + X1*X12*X2*X8^2 + X11*X3*X4*X9 - 
        X11*X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC56*(-(X11*X12*X3^2) + X1*X11*X12*X3^2 + 
        X11*X12*X2*X7 - X1*X11*X12*X2*X7 - 2*X12*X4^2*X7 + X11*X4*X5*X7 + 
        X1*X11*X4*X5*X7 + 4*X12*X3*X4*X8 - X11*X3*X5*X8 - X1*X11*X3*X5*X8 - 
        2*X12*X2*X8^2 - X11*X3*X4*X9 - X1*X11*X3*X4*X9 + X11*X2*X8*X9 + 
        X1*X11*X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC75*(-2*X12^2*X3^2 + X11*X14*X3^2 + X1*X11*X14*X3^2 + 
        2*X12^2*X2*X7 - X11*X14*X2*X7 - X1*X11*X14*X2*X7 + X14*X4^2*X7 + 
        X1*X14*X4^2*X7 - 2*X12*X4*X5*X7 - 2*X14*X3*X4*X8 - 
        2*X1*X14*X3*X4*X8 + 2*X12*X3*X5*X8 + X14*X2*X8^2 + X1*X14*X2*X8^2 + 
        2*X12*X3*X4*X9 - 2*X12*X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC60*(X1*X12^2*X3^2 - X11*X14*X3^2 - X1*X12^2*X2*X7 + 
        X11*X14*X2*X7 - X14*X4^2*X7 + X1*X12*X4*X5*X7 + 2*X14*X3*X4*X8 - 
        X1*X12*X3*X5*X8 - X14*X2*X8^2 - X1*X12*X3*X4*X9 + X1*X12*X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC72*(X1*X12^2*X3^2 - X11*X14*X3^2 - X1*X12^2*X2*X7 + 
        X11*X14*X2*X7 - X14*X4^2*X7 + X1*X12*X4*X5*X7 + 2*X14*X3*X4*X8 - 
        X1*X12*X3*X5*X8 - X14*X2*X8^2 - X1*X12*X3*X4*X9 + X1*X12*X2*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC27*(-(X12*X3^2*X4) + X11*X3^2*X5 + X1*X11*X3^2*X5 + 
        X12*X2*X4*X7 - X11*X2*X5*X7 - X1*X11*X2*X5*X7 + X1*X4^2*X5*X7 - 
        X3*X4*X5*X8 - 2*X1*X3*X4*X5*X8 + X2*X5*X8^2 + X1*X2*X5*X8^2 + 
        X3*X4^2*X9 - X2*X4*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC63*(-(X12*X3^2*X4) + X11*X3^2*X5 + X1*X11*X3^2*X5 + 
        X12*X2*X4*X7 - X11*X2*X5*X7 - X1*X11*X2*X5*X7 + X1*X4^2*X5*X7 - 
        X3*X4*X5*X8 - 2*X1*X3*X4*X5*X8 + X2*X5*X8^2 + X1*X2*X5*X8^2 + 
        X3*X4^2*X9 - X2*X4*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC57*(X12*X3^2*X4 + X11*X3^2*X5 - X12*X2*X4*X7 - 
        X11*X2*X5*X7 + 2*X4^2*X5*X7 - 3*X3*X4*X5*X8 + X2*X5*X8^2 - 
        X3*X4^2*X9 + X2*X4*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC69*(X12*X3^2*X4 + X11*X3^2*X5 - X12*X2*X4*X7 - 
        X11*X2*X5*X7 + 2*X4^2*X5*X7 - 3*X3*X4*X5*X8 + X2*X5*X8^2 - 
        X3*X4^2*X9 + X2*X4*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC24*(X12*X3^2*X4 + X1*X12*X3^2*X4 - X11*X3^2*X5 - 
        X12*X2*X4*X7 - X1*X12*X2*X4*X7 + X11*X2*X5*X7 + X1*X4^2*X5*X7 + 
        X3*X4*X5*X8 - X1*X3*X4*X5*X8 - X2*X5*X8^2 - X3*X4^2*X9 - 
        X1*X3*X4^2*X9 + X2*X4*X8*X9 + X1*X2*X4*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC48*(X12*X3^2*X4 + X1*X12*X3^2*X4 - X11*X3^2*X5 - 
        X12*X2*X4*X7 - X1*X12*X2*X4*X7 + X11*X2*X5*X7 + X1*X4^2*X5*X7 + 
        X3*X4*X5*X8 - X1*X3*X4*X5*X8 - X2*X5*X8^2 - X3*X4^2*X9 - 
        X1*X3*X4^2*X9 + X2*X4*X8*X9 + X1*X2*X4*X8*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC58*(X12*X3^2*X8 - X12*X2*X7*X8 + X4*X5*X7*X8 - 
        X3*X5*X8^2 + X11*X3^2*X9 - X11*X2*X7*X9 + X4^2*X7*X9 - 
        3*X3*X4*X8*X9 + 2*X2*X8^2*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) + (cC70*(X12*X3^2*X8 - X12*X2*X7*X8 + X4*X5*X7*X8 - 
        X3*X5*X8^2 + X11*X3^2*X9 - X11*X2*X7*X9 + X4^2*X7*X9 - 
        3*X3*X4*X8*X9 + 2*X2*X8^2*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC43*(-(X12*X3^2*X8) + X12*X2*X7*X8 - X4*X5*X7*X8 + 
        X3*X5*X8^2 + X11*X3^2*X9 + X1*X11*X3^2*X9 - X11*X2*X7*X9 - 
        X1*X11*X2*X7*X9 + X4^2*X7*X9 + X1*X4^2*X7*X9 - X3*X4*X8*X9 - 
        2*X1*X3*X4*X8*X9 + X1*X2*X8^2*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC67*(-(X12*X3^2*X8) + X12*X2*X7*X8 - X4*X5*X7*X8 + 
        X3*X5*X8^2 + X11*X3^2*X9 + X1*X11*X3^2*X9 - X11*X2*X7*X9 - 
        X1*X11*X2*X7*X9 + X4^2*X7*X9 + X1*X4^2*X7*X9 - X3*X4*X8*X9 - 
        2*X1*X3*X4*X8*X9 + X1*X2*X8^2*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC40*(X12*X3^2*X8 + X1*X12*X3^2*X8 - X12*X2*X7*X8 - 
        X1*X12*X2*X7*X8 + X4*X5*X7*X8 + X1*X4*X5*X7*X8 - X3*X5*X8^2 - 
        X1*X3*X5*X8^2 - X11*X3^2*X9 + X11*X2*X7*X9 - X4^2*X7*X9 + 
        X3*X4*X8*X9 - X1*X3*X4*X8*X9 + X1*X2*X8^2*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2)) - (cC52*(X12*X3^2*X8 + X1*X12*X3^2*X8 - X12*X2*X7*X8 - 
        X1*X12*X2*X7*X8 + X4*X5*X7*X8 + X1*X4*X5*X7*X8 - X3*X5*X8^2 - 
        X1*X3*X5*X8^2 - X11*X3^2*X9 + X11*X2*X7*X9 - X4^2*X7*X9 + 
        X3*X4*X8*X9 - X1*X3*X4*X8*X9 + X1*X2*X8^2*X9))/
    ((-1 + X1)*(2 + X1)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + 
        X2*X8^2))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 1846487
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 696179
solve3 i = 10    time used : -4 minutes
solving for cC10
length 5.
#1solution = cC10 -> 
  -(cC11/X1) - cC12/X1 - (cC71*X11)/X1 - (cC72*X12)/X1 - (cC75*X12)/X1 - 
   (cC76*X14)/X1 - (cC61*X2)/X1 - (cC62*X3)/X1 - (cC65*X3)/X1 - 
   (cC63*X4)/X1 - (cC69*X4)/X1 - (cC64*X5)/X1 - (cC73*X5)/X1 - (cC66*X7)/X1 - 
   (cC67*X8)/X1 - (cC70*X8)/X1 - (cC68*X9)/X1 - (cC74*X9)/X1 + 
   (X16*(X12*X13*X3^2 - X11*X15*X3^2 - X10*X12*X3*X4 + X10*X11*X3*X5 - 
        X12*X13*X2*X7 + X11*X15*X2*X7 - X15*X4^2*X7 + X13*X4*X5*X7 + 
        X12*X4*X6*X7 - X11*X5*X6*X7 + X10*X12*X2*X8 + 2*X15*X3*X4*X8 - 
        X13*X3*X5*X8 - X10*X4*X5*X8 - X12*X3*X6*X8 - X15*X2*X8^2 + 
        X5*X6*X8^2 - X10*X11*X2*X9 - X13*X3*X4*X9 + X10*X4^2*X9 + 
        X11*X3*X6*X9 + X13*X2*X8*X9 - X4*X6*X8*X9))/
    (X1*(X12^2*X3^2 - X11*X14*X3^2 - X12^2*X2*X7 + X11*X14*X2*X7 - 
        X14*X4^2*X7 + 2*X12*X4*X5*X7 - X11*X5^2*X7 + 2*X14*X3*X4*X8 - 
        2*X12*X3*X5*X8 - X14*X2*X8^2 + X5^2*X8^2 - 2*X12*X3*X4*X9 + 
        2*X11*X3*X5*X9 + 2*X12*X2*X8*X9 - 2*X4*X5*X8*X9 - X11*X2*X9^2 + 
        X4^2*X9^2))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 693328
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 740041
solve3 i = 11    time used : -4 minutes
solving for cC11
length 7.
#1solution = cC11 -> 
  -(cC12/(1 + X1)) + (cC71*X11)/((-1 + X1)*(1 + X1)) - 
   (cC59*X1*X11)/((-1 + X1)*(1 + X1)) - (cC75*X12)/(1 + X1) + 
   (cC72*X12)/((-1 + X1)*(1 + X1)) - (cC60*X1*X12)/((-1 + X1)*(1 + X1)) - 
   (cC76*X14)/(1 + X1) + (cC61*X2)/((-1 + X1)*(1 + X1)) - 
   (cC25*X1*X2)/((-1 + X1)*(1 + X1)) + (cC62*X3)/((-1 + X1)*(1 + X1)) + 
   (cC65*X3)/((-1 + X1)*(1 + X1)) - (cC26*X1*X3)/((-1 + X1)*(1 + X1)) - 
   (cC41*X1*X3)/((-1 + X1)*(1 + X1)) + (cC63*X4)/((-1 + X1)*(1 + X1)) + 
   (cC69*X4)/((-1 + X1)*(1 + X1)) - (cC27*X1*X4)/((-1 + X1)*(1 + X1)) - 
   (cC57*X1*X4)/((-1 + X1)*(1 + X1)) - (cC73*X5)/(1 + X1) + 
   (cC64*X5)/((-1 + X1)*(1 + X1)) - (cC28*X1*X5)/((-1 + X1)*(1 + X1)) + 
   (cC66*X7)/((-1 + X1)*(1 + X1)) - (cC42*X1*X7)/((-1 + X1)*(1 + X1)) + 
   (cC67*X8)/((-1 + X1)*(1 + X1)) + (cC70*X8)/((-1 + X1)*(1 + X1)) - 
   (cC43*X1*X8)/((-1 + X1)*(1 + X1)) - (cC58*X1*X8)/((-1 + X1)*(1 + X1)) - 
   (cC74*X9)/(1 + X1) + (cC68*X9)/((-1 + X1)*(1 + X1)) - 
   (cC44*X1*X9)/((-1 + X1)*(1 + X1)) + 
   (X16*(X12*X13*X3^2 - X11*X15*X3^2 - X10*X12*X3*X4 + X10*X11*X3*X5 - 
        X12*X13*X2*X7 + X11*X15*X2*X7 - X15*X4^2*X7 + X13*X4*X5*X7 + 
        X12*X4*X6*X7 - X11*X5*X6*X7 + X10*X12*X2*X8 + 2*X15*X3*X4*X8 - 
        X13*X3*X5*X8 - X10*X4*X5*X8 - X12*X3*X6*X8 - X15*X2*X8^2 + 
        X5*X6*X8^2 - X10*X11*X2*X9 - X13*X3*X4*X9 + X10*X4^2*X9 + 
        X11*X3*X6*X9 + X13*X2*X8*X9 - X4*X6*X8*X9))/
    ((1 + X1)*(X12^2*X3^2 - X11*X14*X3^2 - X12^2*X2*X7 + X11*X14*X2*X7 - 
        X14*X4^2*X7 + 2*X12*X4*X5*X7 - X11*X5^2*X7 + 2*X14*X3*X4*X8 - 
        2*X12*X3*X5*X8 - X14*X2*X8^2 + X5^2*X8^2 - 2*X12*X3*X4*X9 + 
        2*X11*X3*X5*X9 + 2*X12*X2*X8*X9 - 2*X4*X5*X8*X9 - X11*X2*X9^2 + 
        X4^2*X9^2))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 735559
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 832692
solve3 i = 12    time used : -5 minutes
solving for cC12
length 7.
#1solution = cC12 -> 
  (cC59*X11)/((-1 + X1)*(2 + X1)) + (cC71*X11)/((-1 + X1)*(2 + X1)) - 
   (cC56*(1 + X1)*X11)/((-1 + X1)*(2 + X1)) + 
   (2*cC75*X12)/((-1 + X1)*(2 + X1)) - (cC60*X1*X12)/((-1 + X1)*(2 + X1)) - 
   (cC72*X1*X12)/((-1 + X1)*(2 + X1)) - (cC76*X14)/(2 + X1) + 
   (cC25*X2)/((-1 + X1)*(2 + X1)) + (cC61*X2)/((-1 + X1)*(2 + X1)) - 
   (cC16*(1 + X1)*X2)/((-1 + X1)*(2 + X1)) + (cC26*X3)/((-1 + X1)*(2 + X1)) + 
   (cC41*X3)/((-1 + X1)*(2 + X1)) + (cC62*X3)/((-1 + X1)*(2 + X1)) + 
   (cC65*X3)/((-1 + X1)*(2 + X1)) - (cC20*(1 + X1)*X3)/((-1 + X1)*(2 + X1)) - 
   (cC32*(1 + X1)*X3)/((-1 + X1)*(2 + X1)) + (cC27*X4)/((-1 + X1)*(2 + X1)) + 
   (cC57*X4)/((-1 + X1)*(2 + X1)) + (cC63*X4)/((-1 + X1)*(2 + X1)) + 
   (cC69*X4)/((-1 + X1)*(2 + X1)) - (cC24*(1 + X1)*X4)/((-1 + X1)*(2 + X1)) - 
   (cC48*(1 + X1)*X4)/((-1 + X1)*(2 + X1)) + 
   (2*cC73*X5)/((-1 + X1)*(2 + X1)) - (cC28*X1*X5)/((-1 + X1)*(2 + X1)) - 
   (cC64*X1*X5)/((-1 + X1)*(2 + X1)) + (cC42*X7)/((-1 + X1)*(2 + X1)) + 
   (cC66*X7)/((-1 + X1)*(2 + X1)) - (cC36*(1 + X1)*X7)/((-1 + X1)*(2 + X1)) + 
   (cC43*X8)/((-1 + X1)*(2 + X1)) + (cC58*X8)/((-1 + X1)*(2 + X1)) + 
   (cC67*X8)/((-1 + X1)*(2 + X1)) + (cC70*X8)/((-1 + X1)*(2 + X1)) - 
   (cC40*(1 + X1)*X8)/((-1 + X1)*(2 + X1)) - 
   (cC52*(1 + X1)*X8)/((-1 + X1)*(2 + X1)) + 
   (2*cC74*X9)/((-1 + X1)*(2 + X1)) - (cC44*X1*X9)/((-1 + X1)*(2 + X1)) - 
   (cC68*X1*X9)/((-1 + X1)*(2 + X1)) + 
   (X16*(X12*X13*X3^2 - X11*X15*X3^2 - X10*X12*X3*X4 + X10*X11*X3*X5 - 
        X12*X13*X2*X7 + X11*X15*X2*X7 - X15*X4^2*X7 + X13*X4*X5*X7 + 
        X12*X4*X6*X7 - X11*X5*X6*X7 + X10*X12*X2*X8 + 2*X15*X3*X4*X8 - 
        X13*X3*X5*X8 - X10*X4*X5*X8 - X12*X3*X6*X8 - X15*X2*X8^2 + 
        X5*X6*X8^2 - X10*X11*X2*X9 - X13*X3*X4*X9 + X10*X4^2*X9 + 
        X11*X3*X6*X9 + X13*X2*X8*X9 - X4*X6*X8*X9))/
    ((2 + X1)*(X12^2*X3^2 - X11*X14*X3^2 - X12^2*X2*X7 + X11*X14*X2*X7 - 
        X14*X4^2*X7 + 2*X12*X4*X5*X7 - X11*X5^2*X7 + 2*X14*X3*X4*X8 - 
        2*X12*X3*X5*X8 - X14*X2*X8^2 + X5^2*X8^2 - 2*X12*X3*X4*X9 + 
        2*X11*X3*X5*X9 + 2*X12*X2*X8*X9 - 2*X4*X5*X8*X9 - X11*X2*X9^2 + 
        X4^2*X9^2))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 826993
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 193181
solve3 i = 13    time used : -5 minutes
solving for cC13
length 5.
#1solution = cC13 -> 
  -((cC14*X3)/X2) - (cC17*X3)/X2 - (cC29*X3)/X2 - (cC15*X4)/X2 - 
   (cC21*X4)/X2 - (cC45*X4)/X2 - 
   (cC23*(-(X11*X2) + X1*X4^2))/((-1 + X1)*X2^2) - 
   (cC47*(-(X11*X2) + X1*X4^2))/((-1 + X1)*X2^2) - 
   (cC53*(-(X11*X2) + X1*X4^2))/((-1 + X1)*X2^2) - 
   (cC55*X4*(-3*X11*X2 + 2*X4^2 + X1*X4^2))/((-1 + X1)*X2^3) - (cC16*X5)/X2 - 
   (cC25*X5)/X2 - (cC61*X5)/X2 - 
   (cC24*(-(X12*X2) + X1*X4*X5))/((-1 + X1)*X2^2) - 
   (cC27*(-(X12*X2) + X1*X4*X5))/((-1 + X1)*X2^2) - 
   (cC48*(-(X12*X2) + X1*X4*X5))/((-1 + X1)*X2^2) - 
   (cC57*(-(X12*X2) + X1*X4*X5))/((-1 + X1)*X2^2) - 
   (cC63*(-(X12*X2) + X1*X4*X5))/((-1 + X1)*X2^2) - 
   (cC69*(-(X12*X2) + X1*X4*X5))/((-1 + X1)*X2^2) - 
   (cC56*(-2*X12*X2*X4 - X11*X2*X5 + 2*X4^2*X5 + X1*X4^2*X5))/
    ((-1 + X1)*X2^3) - (cC59*(-2*X12*X2*X4 - X11*X2*X5 + 2*X4^2*X5 + 
        X1*X4^2*X5))/((-1 + X1)*X2^3) - 
   (cC71*(-2*X12*X2*X4 - X11*X2*X5 + 2*X4^2*X5 + X1*X4^2*X5))/
    ((-1 + X1)*X2^3) - (cC28*(-(X14*X2) + X1*X5^2))/((-1 + X1)*X2^2) - 
   (cC64*(-(X14*X2) + X1*X5^2))/((-1 + X1)*X2^2) - 
   (cC73*(-(X14*X2) + X1*X5^2))/((-1 + X1)*X2^2) - 
   (cC76*X5*(-3*X14*X2 + 2*X5^2 + X1*X5^2))/((-1 + X1)*X2^3) - 
   (cC60*(-(X14*X2*X4) - 2*X12*X2*X5 + 2*X4*X5^2 + X1*X4*X5^2))/
    ((-1 + X1)*X2^3) - (cC72*(-(X14*X2*X4) - 2*X12*X2*X5 + 2*X4*X5^2 + 
        X1*X4*X5^2))/((-1 + X1)*X2^3) - 
   (cC75*(-(X14*X2*X4) - 2*X12*X2*X5 + 2*X4*X5^2 + X1*X4*X5^2))/
    ((-1 + X1)*X2^3) + (X6*(-3*X16*X2 + 2*X6^2 + X1*X6^2))/((-1 + X1)*X2^3) - 
   (cC34*X3*(2*X3^2 + X1*X3^2 - 3*X2*X7))/((-1 + X1)*X2^3) - 
   (cC18*(X1*X3^2 - X2*X7))/((-1 + X1)*X2^2) - 
   (cC30*(X1*X3^2 - X2*X7))/((-1 + X1)*X2^2) - 
   (cC33*(X1*X3^2 - X2*X7))/((-1 + X1)*X2^2) - 
   (cC19*(X1*X3*X4 - X2*X8))/((-1 + X1)*X2^2) - 
   (cC22*(X1*X3*X4 - X2*X8))/((-1 + X1)*X2^2) - 
   (cC31*(X1*X3*X4 - X2*X8))/((-1 + X1)*X2^2) - 
   (cC37*(X1*X3*X4 - X2*X8))/((-1 + X1)*X2^2) - 
   (cC46*(X1*X3*X4 - X2*X8))/((-1 + X1)*X2^2) - 
   (cC49*(X1*X3*X4 - X2*X8))/((-1 + X1)*X2^2) - 
   (cC35*(2*X3^2*X4 + X1*X3^2*X4 - X2*X4*X7 - 2*X2*X3*X8))/((-1 + X1)*X2^3) - 
   (cC38*(2*X3^2*X4 + X1*X3^2*X4 - X2*X4*X7 - 2*X2*X3*X8))/((-1 + X1)*X2^3) - 
   (cC50*(2*X3^2*X4 + X1*X3^2*X4 - X2*X4*X7 - 2*X2*X3*X8))/((-1 + X1)*X2^3) - 
   (cC39*(-(X11*X2*X3) + 2*X3*X4^2 + X1*X3*X4^2 - 2*X2*X4*X8))/
    ((-1 + X1)*X2^3) - (cC51*(-(X11*X2*X3) + 2*X3*X4^2 + X1*X3*X4^2 - 
        2*X2*X4*X8))/((-1 + X1)*X2^3) - 
   (cC54*(-(X11*X2*X3) + 2*X3*X4^2 + X1*X3*X4^2 - 2*X2*X4*X8))/
    ((-1 + X1)*X2^3) - (cC20*(X1*X3*X5 - X2*X9))/((-1 + X1)*X2^2) - 
   (cC26*(X1*X3*X5 - X2*X9))/((-1 + X1)*X2^2) - 
   (cC32*(X1*X3*X5 - X2*X9))/((-1 + X1)*X2^2) - 
   (cC41*(X1*X3*X5 - X2*X9))/((-1 + X1)*X2^2) - 
   (cC62*(X1*X3*X5 - X2*X9))/((-1 + X1)*X2^2) - 
   (cC65*(X1*X3*X5 - X2*X9))/((-1 + X1)*X2^2) - 
   (cC36*(2*X3^2*X5 + X1*X3^2*X5 - X2*X5*X7 - 2*X2*X3*X9))/((-1 + X1)*X2^3) - 
   (cC42*(2*X3^2*X5 + X1*X3^2*X5 - X2*X5*X7 - 2*X2*X3*X9))/((-1 + X1)*X2^3) - 
   (cC66*(2*X3^2*X5 + X1*X3^2*X5 - X2*X5*X7 - 2*X2*X3*X9))/((-1 + X1)*X2^3) - 
   (cC40*(-(X12*X2*X3) + 2*X3*X4*X5 + X1*X3*X4*X5 - X2*X5*X8 - X2*X4*X9))/
    ((-1 + X1)*X2^3) - (cC43*(-(X12*X2*X3) + 2*X3*X4*X5 + X1*X3*X4*X5 - 
        X2*X5*X8 - X2*X4*X9))/((-1 + X1)*X2^3) - 
   (cC52*(-(X12*X2*X3) + 2*X3*X4*X5 + X1*X3*X4*X5 - X2*X5*X8 - X2*X4*X9))/
    ((-1 + X1)*X2^3) - (cC58*(-(X12*X2*X3) + 2*X3*X4*X5 + X1*X3*X4*X5 - 
        X2*X5*X8 - X2*X4*X9))/((-1 + X1)*X2^3) - 
   (cC67*(-(X12*X2*X3) + 2*X3*X4*X5 + X1*X3*X4*X5 - X2*X5*X8 - X2*X4*X9))/
    ((-1 + X1)*X2^3) - (cC70*(-(X12*X2*X3) + 2*X3*X4*X5 + X1*X3*X4*X5 - 
        X2*X5*X8 - X2*X4*X9))/((-1 + X1)*X2^3) - 
   (cC44*(-(X14*X2*X3) + 2*X3*X5^2 + X1*X3*X5^2 - 2*X2*X5*X9))/
    ((-1 + X1)*X2^3) - (cC68*(-(X14*X2*X3) + 2*X3*X5^2 + X1*X3*X5^2 - 
        2*X2*X5*X9))/((-1 + X1)*X2^3) - 
   (cC74*(-(X14*X2*X3) + 2*X3*X5^2 + X1*X3*X5^2 - 2*X2*X5*X9))/
    ((-1 + X1)*X2^3)
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 191680
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 425413
solve3 i = 14    time used : -5 minutes
solving for cC14
length 7.
#1solution = cC14 -> 
  -(cC17/(-3 + X1^2)) - cC29/(-3 + X1^2) - (2*cC33*X3)/((-3 + X1^2)*X2) - 
   (cC18*(-2 + X1^2)*X3)/((-3 + X1^2)*X2) - 
   (cC30*(-2 + X1^2)*X3)/((-3 + X1^2)*X2) - 
   (cC34*(-1 + X1)*(2*X3^2 + X1*X3^2 - X2*X7))/((-3 + X1^2)*X2^2) + 
   ((-1 + X1)*(X10*X2 - X3*X6)*(-(X16*X2) + 2*X6^2 + X1*X6^2))/
    ((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC15*(X3*X4 - X2*X8))/(X3^2 - X2*X7) - 
   (cC21*(X3*X4 - X2*X8))/((-3 + X1^2)*(X3^2 - X2*X7)) - 
   (cC45*(X3*X4 - X2*X8))/((-3 + X1^2)*(X3^2 - X2*X7)) - 
   (2*cC53*X4*(-(X3*X4) + X2*X8))/((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC23*(-2 + X1^2)*X4*(-(X3*X4) + X2*X8))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC47*(-2 + X1^2)*X4*(-(X3*X4) + X2*X8))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC55*(-1 + X1)*(-(X11*X2) + 2*X4^2 + X1*X4^2)*(-(X3*X4) + X2*X8))/
    ((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC37*(-2*X3^2*X4 + X2*X4*X7 + X2*X3*X8))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC49*(-2*X3^2*X4 + X2*X4*X7 + X2*X3*X8))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC22*(2*X3^2*X4 - X1^2*X3^2*X4 - 3*X2*X4*X7 + X1^2*X2*X4*X7 + X2*X3*X8))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC46*(2*X3^2*X4 - X1^2*X3^2*X4 - 3*X2*X4*X7 + X1^2*X2*X4*X7 + X2*X3*X8))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC19*(2*X3^2*X4 - X1^2*X3^2*X4 + X2*X4*X7 - 3*X2*X3*X8 + X1^2*X2*X3*X8))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC31*(2*X3^2*X4 - X1^2*X3^2*X4 + X2*X4*X7 - 3*X2*X3*X8 + X1^2*X2*X3*X8))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC38*(2*X3^3*X4 - X1*X3^3*X4 - X1^2*X3^3*X4 - 3*X2*X3*X4*X7 + 
        X1*X2*X3*X4*X7 + X1^2*X2*X3*X4*X7 + X1*X2*X3^2*X8 + X2^2*X7*X8 - 
        X1*X2^2*X7*X8))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC50*(2*X3^3*X4 - X1*X3^3*X4 - X1^2*X3^3*X4 - 3*X2*X3*X4*X7 + 
        X1*X2*X3*X4*X7 + X1^2*X2*X3*X4*X7 + X1*X2*X3^2*X8 + X2^2*X7*X8 - 
        X1*X2^2*X7*X8))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC35*(2*X3^3*X4 - X1*X3^3*X4 - X1^2*X3^3*X4 + X2*X3*X4*X7 + 
        X1*X2*X3*X4*X7 - 4*X2*X3^2*X8 + X1*X2*X3^2*X8 + X1^2*X2*X3^2*X8 + 
        X2^2*X7*X8 - X1*X2^2*X7*X8))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC54*(X11*X2*X3^2 + X1*X11*X2*X3^2 + 2*X3^2*X4^2 - X1*X3^2*X4^2 - 
        X1^2*X3^2*X4^2 - X11*X2^2*X7 - X1*X11*X2^2*X7 - 2*X2*X4^2*X7 + 
        X1*X2*X4^2*X7 + X1^2*X2*X4^2*X7 - 2*X2*X3*X4*X8 + 2*X2^2*X8^2))/
    ((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC39*(-(X11*X2*X3^2) + 2*X3^2*X4^2 - X1*X3^2*X4^2 - X1^2*X3^2*X4^2 + 
        X11*X2^2*X7 - 2*X2*X3*X4*X8 + 2*X1*X2*X3*X4*X8 + X1^2*X2*X3*X4*X8 - 
        X1*X2^2*X8^2))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC51*(-(X11*X2*X3^2) + 2*X3^2*X4^2 - X1*X3^2*X4^2 - X1^2*X3^2*X4^2 + 
        X11*X2^2*X7 - 2*X2*X3*X4*X8 + 2*X1*X2*X3*X4*X8 + X1^2*X2*X3*X4*X8 - 
        X1*X2^2*X8^2))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC16*(X3*X5 - X2*X9))/(X3^2 - X2*X7) - 
   (cC25*(X3*X5 - X2*X9))/((-3 + X1^2)*(X3^2 - X2*X7)) - 
   (cC61*(X3*X5 - X2*X9))/((-3 + X1^2)*(X3^2 - X2*X7)) - 
   (2*cC73*X5*(-(X3*X5) + X2*X9))/((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC28*(-2 + X1^2)*X5*(-(X3*X5) + X2*X9))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC64*(-2 + X1^2)*X5*(-(X3*X5) + X2*X9))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC76*(-1 + X1)*(-(X14*X2) + 2*X5^2 + X1*X5^2)*(-(X3*X5) + X2*X9))/
    ((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC59*(X1*X12*X2*X3*X4 - X11*X2*X3*X5 + 2*X3*X4^2*X5 - X1*X3*X4^2*X5 - 
        X1^2*X3*X4^2*X5 - X1*X12*X2^2*X8 - 2*X2*X4*X5*X8 + X1*X2*X4*X5*X8 + 
        X1^2*X2*X4*X5*X8 + X11*X2^2*X9))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC71*(X1*X12*X2*X3*X4 - X11*X2*X3*X5 + 2*X3*X4^2*X5 - X1*X3*X4^2*X5 - 
        X1^2*X3*X4^2*X5 - X1*X12*X2^2*X8 - 2*X2*X4*X5*X8 + X1*X2*X4*X5*X8 + 
        X1^2*X2*X4*X5*X8 + X11*X2^2*X9))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC75*(X14*X2*X3*X4 + X1*X14*X2*X3*X4 - 2*X12*X2*X3*X5 + 2*X3*X4*X5^2 - 
        X1*X3*X4*X5^2 - X1^2*X3*X4*X5^2 - X14*X2^2*X8 - X1*X14*X2^2*X8 - 
        2*X2*X5^2*X8 + X1*X2*X5^2*X8 + X1^2*X2*X5^2*X8 + 2*X12*X2^2*X9))/
    ((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC41*(-2*X3^2*X5 + X2*X5*X7 + X2*X3*X9))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC65*(-2*X3^2*X5 + X2*X5*X7 + X2*X3*X9))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC26*(2*X3^2*X5 - X1^2*X3^2*X5 - 3*X2*X5*X7 + X1^2*X2*X5*X7 + X2*X3*X9))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC62*(2*X3^2*X5 - X1^2*X3^2*X5 - 3*X2*X5*X7 + X1^2*X2*X5*X7 + X2*X3*X9))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC20*(2*X3^2*X5 - X1^2*X3^2*X5 + X2*X5*X7 - 3*X2*X3*X9 + X1^2*X2*X3*X9))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC32*(2*X3^2*X5 - X1^2*X3^2*X5 + X2*X5*X7 - 3*X2*X3*X9 + X1^2*X2*X3*X9))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC57*(-2*X3*X4*X5 + X2*X5*X8 + X2*X4*X9))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC69*(-2*X3*X4*X5 + X2*X5*X8 + X2*X4*X9))/
    ((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC27*(2*X3*X4*X5 - X1^2*X3*X4*X5 - 3*X2*X5*X8 + X1^2*X2*X5*X8 + 
        X2*X4*X9))/((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC63*(2*X3*X4*X5 - X1^2*X3*X4*X5 - 3*X2*X5*X8 + X1^2*X2*X5*X8 + 
        X2*X4*X9))/((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC24*(2*X3*X4*X5 - X1^2*X3*X4*X5 + X2*X5*X8 - 3*X2*X4*X9 + 
        X1^2*X2*X4*X9))/((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC48*(2*X3*X4*X5 - X1^2*X3*X4*X5 + X2*X5*X8 - 3*X2*X4*X9 + 
        X1^2*X2*X4*X9))/((-3 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC56*(-2*X12*X2*X3*X4 + X11*X2*X3*X5 + X1*X11*X2*X3*X5 + 2*X3*X4^2*X5 - 
        X1*X3*X4^2*X5 - X1^2*X3*X4^2*X5 + 2*X12*X2^2*X8 - X11*X2^2*X9 - 
        X1*X11*X2^2*X9 - 2*X2*X4^2*X9 + X1*X2*X4^2*X9 + X1^2*X2*X4^2*X9))/
    ((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC60*(-(X14*X2*X3*X4) + X1*X12*X2*X3*X5 + 2*X3*X4*X5^2 - X1*X3*X4*X5^2 - 
        X1^2*X3*X4*X5^2 + X14*X2^2*X8 - X1*X12*X2^2*X9 - 2*X2*X4*X5*X9 + 
        X1*X2*X4*X5*X9 + X1^2*X2*X4*X5*X9))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7))
     - (cC72*(-(X14*X2*X3*X4) + X1*X12*X2*X3*X5 + 2*X3*X4*X5^2 - 
        X1*X3*X4*X5^2 - X1^2*X3*X4*X5^2 + X14*X2^2*X8 - X1*X12*X2^2*X9 - 
        2*X2*X4*X5*X9 + X1*X2*X4*X5*X9 + X1^2*X2*X4*X5*X9))/
    ((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC42*(2*X3^3*X5 - X1*X3^3*X5 - X1^2*X3^3*X5 - 3*X2*X3*X5*X7 + 
        X1*X2*X3*X5*X7 + X1^2*X2*X3*X5*X7 + X1*X2*X3^2*X9 + X2^2*X7*X9 - 
        X1*X2^2*X7*X9))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC66*(2*X3^3*X5 - X1*X3^3*X5 - X1^2*X3^3*X5 - 3*X2*X3*X5*X7 + 
        X1*X2*X3*X5*X7 + X1^2*X2*X3*X5*X7 + X1*X2*X3^2*X9 + X2^2*X7*X9 - 
        X1*X2^2*X7*X9))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC36*(2*X3^3*X5 - X1*X3^3*X5 - X1^2*X3^3*X5 + X2*X3*X5*X7 + 
        X1*X2*X3*X5*X7 - 4*X2*X3^2*X9 + X1*X2*X3^2*X9 + X1^2*X2*X3^2*X9 + 
        X2^2*X7*X9 - X1*X2^2*X7*X9))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC58*(X12*X2*X3^2 + X1*X12*X2*X3^2 + 2*X3^2*X4*X5 - X1*X3^2*X4*X5 - 
        X1^2*X3^2*X4*X5 - X12*X2^2*X7 - X1*X12*X2^2*X7 - 2*X2*X4*X5*X7 + 
        X1*X2*X4*X5*X7 + X1^2*X2*X4*X5*X7 - X2*X3*X5*X8 - X2*X3*X4*X9 + 
        2*X2^2*X8*X9))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC70*(X12*X2*X3^2 + X1*X12*X2*X3^2 + 2*X3^2*X4*X5 - X1*X3^2*X4*X5 - 
        X1^2*X3^2*X4*X5 - X12*X2^2*X7 - X1*X12*X2^2*X7 - 2*X2*X4*X5*X7 + 
        X1*X2*X4*X5*X7 + X1^2*X2*X4*X5*X7 - X2*X3*X5*X8 - X2*X3*X4*X9 + 
        2*X2^2*X8*X9))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC43*(-(X12*X2*X3^2) + 2*X3^2*X4*X5 - X1*X3^2*X4*X5 - X1^2*X3^2*X4*X5 + 
        X12*X2^2*X7 - 3*X2*X3*X5*X8 + X1*X2*X3*X5*X8 + X1^2*X2*X3*X5*X8 + 
        X2*X3*X4*X9 + X1*X2*X3*X4*X9 - X1*X2^2*X8*X9))/
    ((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC67*(-(X12*X2*X3^2) + 2*X3^2*X4*X5 - X1*X3^2*X4*X5 - X1^2*X3^2*X4*X5 + 
        X12*X2^2*X7 - 3*X2*X3*X5*X8 + X1*X2*X3*X5*X8 + X1^2*X2*X3*X5*X8 + 
        X2*X3*X4*X9 + X1*X2*X3*X4*X9 - X1*X2^2*X8*X9))/
    ((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC40*(-(X12*X2*X3^2) + 2*X3^2*X4*X5 - X1*X3^2*X4*X5 - X1^2*X3^2*X4*X5 + 
        X12*X2^2*X7 + X2*X3*X5*X8 + X1*X2*X3*X5*X8 - 3*X2*X3*X4*X9 + 
        X1*X2*X3*X4*X9 + X1^2*X2*X3*X4*X9 - X1*X2^2*X8*X9))/
    ((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC52*(-(X12*X2*X3^2) + 2*X3^2*X4*X5 - X1*X3^2*X4*X5 - X1^2*X3^2*X4*X5 + 
        X12*X2^2*X7 + X2*X3*X5*X8 + X1*X2*X3*X5*X8 - 3*X2*X3*X4*X9 + 
        X1*X2*X3*X4*X9 + X1^2*X2*X3*X4*X9 - X1*X2^2*X8*X9))/
    ((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC74*(X14*X2*X3^2 + X1*X14*X2*X3^2 + 2*X3^2*X5^2 - X1*X3^2*X5^2 - 
        X1^2*X3^2*X5^2 - X14*X2^2*X7 - X1*X14*X2^2*X7 - 2*X2*X5^2*X7 + 
        X1*X2*X5^2*X7 + X1^2*X2*X5^2*X7 - 2*X2*X3*X5*X9 + 2*X2^2*X9^2))/
    ((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC44*(-(X14*X2*X3^2) + 2*X3^2*X5^2 - X1*X3^2*X5^2 - X1^2*X3^2*X5^2 + 
        X14*X2^2*X7 - 2*X2*X3*X5*X9 + 2*X1*X2*X3*X5*X9 + X1^2*X2*X3*X5*X9 - 
        X1*X2^2*X9^2))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC68*(-(X14*X2*X3^2) + 2*X3^2*X5^2 - X1*X3^2*X5^2 - X1^2*X3^2*X5^2 + 
        X14*X2^2*X7 - 2*X2*X3*X5*X9 + 2*X1*X2*X3*X5*X9 + X1^2*X2*X3*X5*X9 - 
        X1*X2^2*X9^2))/((-3 + X1^2)*X2^2*(-X3^2 + X2*X7))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 421915
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 2132553
solve3 i = 15    time used : -6 minutes
solving for cC15
length 8.
#1solution = cC15 -> 
  -(cC21/(-3 + X1^2)) - cC45/(-3 + X1^2) - (cC19*X3)/X2 - (cC31*X3)/X2 - 
   (cC22*X3)/((-3 + X1^2)*X2) - (cC37*X3)/((-3 + X1^2)*X2) - 
   (cC46*X3)/((-3 + X1^2)*X2) - (cC49*X3)/((-3 + X1^2)*X2) - 
   (2*cC53*X4)/((-3 + X1^2)*X2) - (cC23*(-2 + X1^2)*X4)/((-3 + X1^2)*X2) - 
   (cC47*(-2 + X1^2)*X4)/((-3 + X1^2)*X2) - 
   (cC55*(-1 + X1)*(-(X11*X2) + 2*X4^2 + X1*X4^2))/((-3 + X1^2)*X2^2) - 
   (cC38*X7)/((-3 + X1^2)*X2) - (cC50*X7)/((-3 + X1^2)*X2) - 
   (cC35*(-2*X3^2 + X1*X3^2 + X1^2*X3^2 - X2*X7 - X1*X2*X7))/
    ((-3 + X1^2)*X2^2) - (2*cC54*X8)/((-3 + X1^2)*X2) - 
   (cC39*(-2*X3*X4 + X1*X3*X4 + X1^2*X3*X4 - X1*X2*X8))/((-3 + X1^2)*X2^2) - 
   (cC51*(-2*X3*X4 + X1*X3*X4 + X1^2*X3*X4 - X1*X2*X8))/((-3 + X1^2)*X2^2) + 
   ((-1 + X1)*(-(X16*X2) + 2*X6^2 + X1*X6^2)*
      (-(X13*X3^2) + X10*X3*X4 + X13*X2*X7 - X4*X6*X7 - X10*X2*X8 + X3*X6*X8))
     /((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC20*X3*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    (X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC32*X3*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    (X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC26*X3*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC41*X3*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC62*X3*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC65*X3*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (2*cC73*X5*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + 
        X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC28*(-2 + X1^2)*X5*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC64*(-2 + X1^2)*X5*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC76*(-1 + X1)*(-(X14*X2) + 2*X5^2 + X1*X5^2)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC42*X7*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC66*X7*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC36*(-2*X3^2 + X1*X3^2 + X1^2*X3^2 - X2*X7 - X1*X2*X7)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (2*cC74*X9*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + 
        X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC44*(-2*X3*X5 + X1*X3*X5 + X1^2*X3*X5 - X1*X2*X9)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC68*(-2*X3*X5 + X1*X3*X5 + X1^2*X3*X5 - X1*X2*X9)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC16*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - 
        X3*X4*X9 + X2*X8*X9))/
    (X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2) - 
   (cC25*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    ((-3 + X1^2)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC61*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    ((-3 + X1^2)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC59*(-(X11*X12*X2*X3^2) + X1*X11*X12*X2*X3^2 + 2*X11*X3^2*X4*X5 - 
        X1*X11*X3^2*X4*X5 - X1^2*X11*X3^2*X4*X5 + X11*X12*X2^2*X7 - 
        X1*X11*X12*X2^2*X7 + X1*X12*X2*X4^2*X7 - 3*X11*X2*X4*X5*X7 + 
        X1*X11*X2*X4*X5*X7 + X1^2*X11*X2*X4*X5*X7 + 2*X4^3*X5*X7 - 
        X1*X4^3*X5*X7 - X1^2*X4^3*X5*X7 - 2*X1*X12*X2*X3*X4*X8 + 
        X11*X2*X3*X5*X8 - 4*X3*X4^2*X5*X8 + 2*X1*X3*X4^2*X5*X8 + 
        2*X1^2*X3*X4^2*X5*X8 + X1*X12*X2^2*X8^2 + 2*X2*X4*X5*X8^2 - 
        X1*X2*X4*X5*X8^2 - X1^2*X2*X4*X5*X8^2 + X11*X2*X3*X4*X9 - 
        X11*X2^2*X8*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC71*(-(X11*X12*X2*X3^2) + X1*X11*X12*X2*X3^2 + 
        2*X11*X3^2*X4*X5 - X1*X11*X3^2*X4*X5 - X1^2*X11*X3^2*X4*X5 + 
        X11*X12*X2^2*X7 - X1*X11*X12*X2^2*X7 + X1*X12*X2*X4^2*X7 - 
        3*X11*X2*X4*X5*X7 + X1*X11*X2*X4*X5*X7 + X1^2*X11*X2*X4*X5*X7 + 
        2*X4^3*X5*X7 - X1*X4^3*X5*X7 - X1^2*X4^3*X5*X7 - 
        2*X1*X12*X2*X3*X4*X8 + X11*X2*X3*X5*X8 - 4*X3*X4^2*X5*X8 + 
        2*X1*X3*X4^2*X5*X8 + 2*X1^2*X3*X4^2*X5*X8 + X1*X12*X2^2*X8^2 + 
        2*X2*X4*X5*X8^2 - X1*X2*X4*X5*X8^2 - X1^2*X2*X4*X5*X8^2 + 
        X11*X2*X3*X4*X9 - X11*X2^2*X8*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC75*(-2*X12^2*X2*X3^2 + X11*X14*X2*X3^2 + 
        X1*X11*X14*X2*X3^2 + 2*X11*X3^2*X5^2 - X1*X11*X3^2*X5^2 - 
        X1^2*X11*X3^2*X5^2 + 2*X12^2*X2^2*X7 - X11*X14*X2^2*X7 - 
        X1*X11*X14*X2^2*X7 + X14*X2*X4^2*X7 + X1*X14*X2*X4^2*X7 - 
        2*X12*X2*X4*X5*X7 - 2*X11*X2*X5^2*X7 + X1*X11*X2*X5^2*X7 + 
        X1^2*X11*X2*X5^2*X7 + 2*X4^2*X5^2*X7 - X1*X4^2*X5^2*X7 - 
        X1^2*X4^2*X5^2*X7 - 2*X14*X2*X3*X4*X8 - 2*X1*X14*X2*X3*X4*X8 + 
        2*X12*X2*X3*X5*X8 - 4*X3*X4*X5^2*X8 + 2*X1*X3*X4*X5^2*X8 + 
        2*X1^2*X3*X4*X5^2*X8 + X14*X2^2*X8^2 + X1*X14*X2^2*X8^2 + 
        2*X2*X5^2*X8^2 - X1*X2*X5^2*X8^2 - X1^2*X2*X5^2*X8^2 + 
        2*X12*X2*X3*X4*X9 - 2*X12*X2^2*X8*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC57*(-(X12*X3^2*X4) - X11*X3^2*X5 + X12*X2*X4*X7 + 
        X11*X2*X5*X7 - 2*X4^2*X5*X7 + 3*X3*X4*X5*X8 - X2*X5*X8^2 + 
        X3*X4^2*X9 - X2*X4*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC69*(-(X12*X3^2*X4) - X11*X3^2*X5 + X12*X2*X4*X7 + 
        X11*X2*X5*X7 - 2*X4^2*X5*X7 + 3*X3*X4*X5*X8 - X2*X5*X8^2 + 
        X3*X4^2*X9 - X2*X4*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC27*(-(X12*X3^2*X4) + 3*X11*X3^2*X5 - 
        X1^2*X11*X3^2*X5 + X12*X2*X4*X7 - 3*X11*X2*X5*X7 + 
        X1^2*X11*X2*X5*X7 + 2*X4^2*X5*X7 - X1^2*X4^2*X5*X7 - 5*X3*X4*X5*X8 + 
        2*X1^2*X3*X4*X5*X8 + 3*X2*X5*X8^2 - X1^2*X2*X5*X8^2 + X3*X4^2*X9 - 
        X2*X4*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC63*(-(X12*X3^2*X4) + 3*X11*X3^2*X5 - 
        X1^2*X11*X3^2*X5 + X12*X2*X4*X7 - 3*X11*X2*X5*X7 + 
        X1^2*X11*X2*X5*X7 + 2*X4^2*X5*X7 - X1^2*X4^2*X5*X7 - 5*X3*X4*X5*X8 + 
        2*X1^2*X3*X4*X5*X8 + 3*X2*X5*X8^2 - X1^2*X2*X5*X8^2 + X3*X4^2*X9 - 
        X2*X4*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC24*(3*X12*X3^2*X4 - X1^2*X12*X3^2*X4 - X11*X3^2*X5 - 
        3*X12*X2*X4*X7 + X1^2*X12*X2*X4*X7 + X11*X2*X5*X7 + 2*X4^2*X5*X7 - 
        X1^2*X4^2*X5*X7 - X3*X4*X5*X8 + X1^2*X3*X4*X5*X8 - X2*X5*X8^2 - 
        3*X3*X4^2*X9 + X1^2*X3*X4^2*X9 + 3*X2*X4*X8*X9 - X1^2*X2*X4*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC48*(3*X12*X3^2*X4 - X1^2*X12*X3^2*X4 - X11*X3^2*X5 - 
        3*X12*X2*X4*X7 + X1^2*X12*X2*X4*X7 + X11*X2*X5*X7 + 2*X4^2*X5*X7 - 
        X1^2*X4^2*X5*X7 - X3*X4*X5*X8 + X1^2*X3*X4*X5*X8 - X2*X5*X8^2 - 
        3*X3*X4^2*X9 + X1^2*X3*X4^2*X9 + 3*X2*X4*X8*X9 - X1^2*X2*X4*X8*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC56*(-(X11*X12*X2*X3^2) + X1*X11*X12*X2*X3^2 + 
        2*X12*X3^2*X4^2 - X1*X12*X3^2*X4^2 - X1^2*X12*X3^2*X4^2 + 
        X11*X12*X2^2*X7 - X1*X11*X12*X2^2*X7 - 4*X12*X2*X4^2*X7 + 
        X1*X12*X2*X4^2*X7 + X1^2*X12*X2*X4^2*X7 + X11*X2*X4*X5*X7 + 
        X1*X11*X2*X4*X5*X7 + 2*X4^3*X5*X7 - X1*X4^3*X5*X7 - X1^2*X4^3*X5*X7 + 
        4*X12*X2*X3*X4*X8 - X11*X2*X3*X5*X8 - X1*X11*X2*X3*X5*X8 - 
        2*X3*X4^2*X5*X8 + X1*X3*X4^2*X5*X8 + X1^2*X3*X4^2*X5*X8 - 
        2*X12*X2^2*X8^2 - X11*X2*X3*X4*X9 - X1*X11*X2*X3*X4*X9 - 
        2*X3*X4^3*X9 + X1*X3*X4^3*X9 + X1^2*X3*X4^3*X9 + X11*X2^2*X8*X9 + 
        X1*X11*X2^2*X8*X9 + 2*X2*X4^2*X8*X9 - X1*X2*X4^2*X8*X9 - 
        X1^2*X2*X4^2*X8*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC60*(X1*X12^2*X2*X3^2 - X11*X14*X2*X3^2 + 
        2*X12*X3^2*X4*X5 - X1*X12*X3^2*X4*X5 - X1^2*X12*X3^2*X4*X5 - 
        X1*X12^2*X2^2*X7 + X11*X14*X2^2*X7 - X14*X2*X4^2*X7 - 
        2*X12*X2*X4*X5*X7 + 2*X1*X12*X2*X4*X5*X7 + X1^2*X12*X2*X4*X5*X7 + 
        2*X4^2*X5^2*X7 - X1*X4^2*X5^2*X7 - X1^2*X4^2*X5^2*X7 + 
        2*X14*X2*X3*X4*X8 - X1*X12*X2*X3*X5*X8 - 2*X3*X4*X5^2*X8 + 
        X1*X3*X4*X5^2*X8 + X1^2*X3*X4*X5^2*X8 - X14*X2^2*X8^2 - 
        X1*X12*X2*X3*X4*X9 - 2*X3*X4^2*X5*X9 + X1*X3*X4^2*X5*X9 + 
        X1^2*X3*X4^2*X5*X9 + X1*X12*X2^2*X8*X9 + 2*X2*X4*X5*X8*X9 - 
        X1*X2*X4*X5*X8*X9 - X1^2*X2*X4*X5*X8*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC72*(X1*X12^2*X2*X3^2 - X11*X14*X2*X3^2 + 
        2*X12*X3^2*X4*X5 - X1*X12*X3^2*X4*X5 - X1^2*X12*X3^2*X4*X5 - 
        X1*X12^2*X2^2*X7 + X11*X14*X2^2*X7 - X14*X2*X4^2*X7 - 
        2*X12*X2*X4*X5*X7 + 2*X1*X12*X2*X4*X5*X7 + X1^2*X12*X2*X4*X5*X7 + 
        2*X4^2*X5^2*X7 - X1*X4^2*X5^2*X7 - X1^2*X4^2*X5^2*X7 + 
        2*X14*X2*X3*X4*X8 - X1*X12*X2*X3*X5*X8 - 2*X3*X4*X5^2*X8 + 
        X1*X3*X4*X5^2*X8 + X1^2*X3*X4*X5^2*X8 - X14*X2^2*X8^2 - 
        X1*X12*X2*X3*X4*X9 - 2*X3*X4^2*X5*X9 + X1*X3*X4^2*X5*X9 + 
        X1^2*X3*X4^2*X5*X9 + X1*X12*X2^2*X8*X9 + 2*X2*X4*X5*X8*X9 - 
        X1*X2*X4*X5*X8*X9 - X1^2*X2*X4*X5*X8*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC58*(-(X12*X3^2*X8) + X12*X2*X7*X8 - X4*X5*X7*X8 + 
        X3*X5*X8^2 - X11*X3^2*X9 + X11*X2*X7*X9 - X4^2*X7*X9 + 
        3*X3*X4*X8*X9 - 2*X2*X8^2*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC70*(-(X12*X3^2*X8) + X12*X2*X7*X8 - X4*X5*X7*X8 + 
        X3*X5*X8^2 - X11*X3^2*X9 + X11*X2*X7*X9 - X4^2*X7*X9 + 
        3*X3*X4*X8*X9 - 2*X2*X8^2*X9))/
    ((-3 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC43*(2*X11*X3^3*X5 - X1*X11*X3^3*X5 - 
        X1^2*X11*X3^3*X5 - 2*X11*X2*X3*X5*X7 + X1*X11*X2*X3*X5*X7 + 
        X1^2*X11*X2*X3*X5*X7 + 2*X3*X4^2*X5*X7 - X1*X3*X4^2*X5*X7 - 
        X1^2*X3*X4^2*X5*X7 - X12*X2*X3^2*X8 - 4*X3^2*X4*X5*X8 + 
        2*X1*X3^2*X4*X5*X8 + 2*X1^2*X3^2*X4*X5*X8 + X12*X2^2*X7*X8 - 
        X2*X4*X5*X7*X8 + 3*X2*X3*X5*X8^2 - X1*X2*X3*X5*X8^2 - 
        X1^2*X2*X3*X5*X8^2 + X11*X2*X3^2*X9 + X1*X11*X2*X3^2*X9 - 
        X11*X2^2*X7*X9 - X1*X11*X2^2*X7*X9 + X2*X4^2*X7*X9 + 
        X1*X2*X4^2*X7*X9 - X2*X3*X4*X8*X9 - 2*X1*X2*X3*X4*X8*X9 + 
        X1*X2^2*X8^2*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC67*(2*X11*X3^3*X5 - X1*X11*X3^3*X5 - 
        X1^2*X11*X3^3*X5 - 2*X11*X2*X3*X5*X7 + X1*X11*X2*X3*X5*X7 + 
        X1^2*X11*X2*X3*X5*X7 + 2*X3*X4^2*X5*X7 - X1*X3*X4^2*X5*X7 - 
        X1^2*X3*X4^2*X5*X7 - X12*X2*X3^2*X8 - 4*X3^2*X4*X5*X8 + 
        2*X1*X3^2*X4*X5*X8 + 2*X1^2*X3^2*X4*X5*X8 + X12*X2^2*X7*X8 - 
        X2*X4*X5*X7*X8 + 3*X2*X3*X5*X8^2 - X1*X2*X3*X5*X8^2 - 
        X1^2*X2*X3*X5*X8^2 + X11*X2*X3^2*X9 + X1*X11*X2*X3^2*X9 - 
        X11*X2^2*X7*X9 - X1*X11*X2^2*X7*X9 + X2*X4^2*X7*X9 + 
        X1*X2*X4^2*X7*X9 - X2*X3*X4*X8*X9 - 2*X1*X2*X3*X4*X8*X9 + 
        X1*X2^2*X8^2*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC40*(2*X12*X3^3*X4 - X1*X12*X3^3*X4 - 
        X1^2*X12*X3^3*X4 - 2*X12*X2*X3*X4*X7 + X1*X12*X2*X3*X4*X7 + 
        X1^2*X12*X2*X3*X4*X7 + 2*X3*X4^2*X5*X7 - X1*X3*X4^2*X5*X7 - 
        X1^2*X3*X4^2*X5*X7 + X12*X2*X3^2*X8 + X1*X12*X2*X3^2*X8 - 
        2*X3^2*X4*X5*X8 + X1*X3^2*X4*X5*X8 + X1^2*X3^2*X4*X5*X8 - 
        X12*X2^2*X7*X8 - X1*X12*X2^2*X7*X8 + X2*X4*X5*X7*X8 + 
        X1*X2*X4*X5*X7*X8 - X2*X3*X5*X8^2 - X1*X2*X3*X5*X8^2 - 
        X11*X2*X3^2*X9 - 2*X3^2*X4^2*X9 + X1*X3^2*X4^2*X9 + 
        X1^2*X3^2*X4^2*X9 + X11*X2^2*X7*X9 - X2*X4^2*X7*X9 + 
        3*X2*X3*X4*X8*X9 - 2*X1*X2*X3*X4*X8*X9 - X1^2*X2*X3*X4*X8*X9 + 
        X1*X2^2*X8^2*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC52*(2*X12*X3^3*X4 - X1*X12*X3^3*X4 - 
        X1^2*X12*X3^3*X4 - 2*X12*X2*X3*X4*X7 + X1*X12*X2*X3*X4*X7 + 
        X1^2*X12*X2*X3*X4*X7 + 2*X3*X4^2*X5*X7 - X1*X3*X4^2*X5*X7 - 
        X1^2*X3*X4^2*X5*X7 + X12*X2*X3^2*X8 + X1*X12*X2*X3^2*X8 - 
        2*X3^2*X4*X5*X8 + X1*X3^2*X4*X5*X8 + X1^2*X3^2*X4*X5*X8 - 
        X12*X2^2*X7*X8 - X1*X12*X2^2*X7*X8 + X2*X4*X5*X7*X8 + 
        X1*X2*X4*X5*X7*X8 - X2*X3*X5*X8^2 - X1*X2*X3*X5*X8^2 - 
        X11*X2*X3^2*X9 - 2*X3^2*X4^2*X9 + X1*X3^2*X4^2*X9 + 
        X1^2*X3^2*X4^2*X9 + X11*X2^2*X7*X9 - X2*X4^2*X7*X9 + 
        3*X2*X3*X4*X8*X9 - 2*X1*X2*X3*X4*X8*X9 - X1^2*X2*X3*X4*X8*X9 + 
        X1*X2^2*X8^2*X9))/
    ((-3 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 2126750
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 3011212
solve3 i = 16    time used : -9 minutes
solving for cC16
length 8.
#1solution = cC16 -> 
  -(cC25/(-3 + X1^2)) - cC61/(-3 + X1^2) - (cC59*X11)/((-3 + X1^2)*X2) - 
   (cC71*X11)/((-3 + X1^2)*X2) - (2*cC75*X12)/((-3 + X1^2)*X2) - 
   (cC20*X3)/X2 - (cC32*X3)/X2 - (cC26*X3)/((-3 + X1^2)*X2) - 
   (cC41*X3)/((-3 + X1^2)*X2) - (cC62*X3)/((-3 + X1^2)*X2) - 
   (cC65*X3)/((-3 + X1^2)*X2) - (cC24*X4)/X2 - (cC48*X4)/X2 - 
   (cC27*X4)/((-3 + X1^2)*X2) - (cC57*X4)/((-3 + X1^2)*X2) - 
   (cC63*X4)/((-3 + X1^2)*X2) - (cC69*X4)/((-3 + X1^2)*X2) - 
   (cC56*(-(X11*X2) - X1*X11*X2 - 2*X4^2 + X1*X4^2 + X1^2*X4^2))/
    ((-3 + X1^2)*X2^2) - (2*cC73*X5)/((-3 + X1^2)*X2) - 
   (cC28*(-2 + X1^2)*X5)/((-3 + X1^2)*X2) - 
   (cC64*(-2 + X1^2)*X5)/((-3 + X1^2)*X2) - 
   (cC60*(-(X1*X12*X2) - 2*X4*X5 + X1*X4*X5 + X1^2*X4*X5))/
    ((-3 + X1^2)*X2^2) - (cC72*(-(X1*X12*X2) - 2*X4*X5 + X1*X4*X5 + 
        X1^2*X4*X5))/((-3 + X1^2)*X2^2) - 
   (cC76*(-1 + X1)*(-(X14*X2) + 2*X5^2 + X1*X5^2))/((-3 + X1^2)*X2^2) - 
   (cC42*X7)/((-3 + X1^2)*X2) - (cC66*X7)/((-3 + X1^2)*X2) - 
   (cC36*(-2*X3^2 + X1*X3^2 + X1^2*X3^2 - X2*X7 - X1*X2*X7))/
    ((-3 + X1^2)*X2^2) - (cC43*X8)/((-3 + X1^2)*X2) - 
   (cC58*X8)/((-3 + X1^2)*X2) - (cC67*X8)/((-3 + X1^2)*X2) - 
   (cC70*X8)/((-3 + X1^2)*X2) - 
   (cC40*(-2*X3*X4 + X1*X3*X4 + X1^2*X3*X4 - X2*X8 - X1*X2*X8))/
    ((-3 + X1^2)*X2^2) - (cC52*(-2*X3*X4 + X1*X3*X4 + X1^2*X3*X4 - X2*X8 - 
        X1*X2*X8))/((-3 + X1^2)*X2^2) - (2*cC74*X9)/((-3 + X1^2)*X2) - 
   (cC44*(-2*X3*X5 + X1*X3*X5 + X1^2*X3*X5 - X1*X2*X9))/((-3 + X1^2)*X2^2) - 
   (cC68*(-2*X3*X5 + X1*X3*X5 + X1^2*X3*X5 - X1*X2*X9))/((-3 + X1^2)*X2^2) + 
   ((-1 + X1)*(-(X16*X2) + 2*X6^2 + X1*X6^2)*
      (-(X12*X13*X3^2) + X11*X15*X3^2 + X10*X12*X3*X4 - X10*X11*X3*X5 + 
        X12*X13*X2*X7 - X11*X15*X2*X7 + X15*X4^2*X7 - X13*X4*X5*X7 - 
        X12*X4*X6*X7 + X11*X5*X6*X7 - X10*X12*X2*X8 - 2*X15*X3*X4*X8 + 
        X13*X3*X5*X8 + X10*X4*X5*X8 + X12*X3*X6*X8 + X15*X2*X8^2 - 
        X5*X6*X8^2 + X10*X11*X2*X9 + X13*X3*X4*X9 - X10*X4^2*X9 - 
        X11*X3*X6*X9 - X13*X2*X8*X9 + X4*X6*X8*X9))/
    ((-3 + X1^2)*X2^2*(-(X12^2*X3^2) + X11*X14*X3^2 + X12^2*X2*X7 - 
        X11*X14*X2*X7 + X14*X4^2*X7 - 2*X12*X4*X5*X7 + X11*X5^2*X7 - 
        2*X14*X3*X4*X8 + 2*X12*X3*X5*X8 + X14*X2*X8^2 - X5^2*X8^2 + 
        2*X12*X3*X4*X9 - 2*X11*X3*X5*X9 - 2*X12*X2*X8*X9 + 2*X4*X5*X8*X9 + 
        X11*X2*X9^2 - X4^2*X9^2))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 3005093
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 605407
solve3 i = 17    time used : -11 minutes
solving for cC17
length 8.
#1solution = cC17 -> 
  -(cC29/(-2 + X1^2)) - (cC18*X3)/X2 - (cC30*X3)/((-2 + X1^2)*X2) - 
   (cC33*(-1 + X1)*(1 + X1)*X3)/((-2 + X1^2)*X2) - (cC19*X4)/X2 - 
   (cC31*X4)/((-2 + X1^2)*X2) - (cC20*X5)/X2 - (cC32*X5)/((-2 + X1^2)*X2) - 
   (cC34*(-1 + X1)*(2*X3^2 + X1*X3^2 - X2*X7))/((-2 + X1^2)*X2^2) + 
   ((-1 + X1)*(X10*X2 - X3*X6)*(-(X16*X2) + 2*X6^2 + X1*X6^2))/
    ((-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC21*(X3*X4 - X2*X8))/(X3^2 - X2*X7) - 
   (cC45*(X3*X4 - X2*X8))/((-2 + X1^2)*(X3^2 - X2*X7)) - 
   (cC35*(-1 + X1)*(2*X3*X4 + X1*X3*X4 - X2*X8))/((-2 + X1^2)*X2^2) - 
   (cC22*X3*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC46*X3*(-(X3*X4) + X2*X8))/((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC23*X4*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC47*X4*(-(X3*X4) + X2*X8))/((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC53*(-1 + X1)*(1 + X1)*X4*(-(X3*X4) + X2*X8))/
    ((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC55*(-1 + X1)*(-(X11*X2) + 2*X4^2 + X1*X4^2)*(-(X3*X4) + X2*X8))/
    ((-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC24*X5*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC48*X5*(-(X3*X4) + X2*X8))/((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC49*(X3^2*X4 - X1^2*X3^2*X4 - 2*X2*X4*X7 + X1^2*X2*X4*X7 + X2*X3*X8))/
    ((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC37*(X3^2*X4 - X1^2*X3^2*X4 + X2*X4*X7 - 2*X2*X3*X8 + X1^2*X2*X3*X8))/
    ((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC50*(2*X3^3*X4 - X1*X3^3*X4 - X1^2*X3^3*X4 - 3*X2*X3*X4*X7 + 
        X1*X2*X3*X4*X7 + X1^2*X2*X3*X4*X7 + X1*X2*X3^2*X8 + X2^2*X7*X8 - 
        X1*X2^2*X7*X8))/((-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC38*(2*X3^3*X4 - X1*X3^3*X4 - X1^2*X3^3*X4 + X1*X2*X3*X4*X7 - 
        3*X2*X3^2*X8 + X1*X2*X3^2*X8 + X1^2*X2*X3^2*X8 + X2^2*X7*X8 - 
        X1*X2^2*X7*X8))/((-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC39*(-(X11*X2*X3^2) + 2*X3^2*X4^2 - X1*X3^2*X4^2 - X1^2*X3^2*X4^2 + 
        X11*X2^2*X7 - 2*X2*X3*X4*X8 + 2*X1*X2*X3*X4*X8 + X1^2*X2*X3*X4*X8 - 
        X1*X2^2*X8^2))/((-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC54*(-1 + X1)*(-(X11*X2*X3^2) + 4*X3^2*X4^2 - X1^2*X3^2*X4^2 + 
        X11*X2^2*X7 - X2*X4^2*X7 - 4*X2*X3*X4*X8 + X1*X2*X3*X4*X8 + 
        X1^2*X2*X3*X4*X8 + X2^2*X8^2 - X1*X2^2*X8^2))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC51*(-(X11*X2*X3^2) - X1*X11*X2*X3^2 + X1^2*X11*X2*X3^2 - 4*X3^2*X4^2 + 
        4*X1*X3^2*X4^2 + X1^2*X3^2*X4^2 - X1^3*X3^2*X4^2 + X11*X2^2*X7 + 
        X1*X11*X2^2*X7 - X1^2*X11*X2^2*X7 + 3*X2*X4^2*X7 - 3*X1*X2*X4^2*X7 - 
        X1^2*X2*X4^2*X7 + X1^3*X2*X4^2*X7 + 4*X2*X3*X4*X8 - 
        3*X1*X2*X3*X4*X8 - 3*X2^2*X8^2 + 2*X1*X2^2*X8^2))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC25*(X3*X5 - X2*X9))/(X3^2 - X2*X7) - 
   (cC61*(X3*X5 - X2*X9))/((-2 + X1^2)*(X3^2 - X2*X7)) - 
   (cC36*(-1 + X1)*(2*X3*X5 + X1*X3*X5 - X2*X9))/((-2 + X1^2)*X2^2) - 
   (cC26*X3*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC62*X3*(-(X3*X5) + X2*X9))/((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC27*X4*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC63*X4*(-(X3*X5) + X2*X9))/((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC28*X5*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC64*X5*(-(X3*X5) + X2*X9))/((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC73*(-1 + X1)*(1 + X1)*X5*(-(X3*X5) + X2*X9))/
    ((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC76*(-1 + X1)*(-(X14*X2) + 2*X5^2 + X1*X5^2)*(-(X3*X5) + X2*X9))/
    ((-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC71*(X1*X12*X2*X3*X4 - X11*X2*X3*X5 + 2*X3*X4^2*X5 - X1*X3*X4^2*X5 - 
        X1^2*X3*X4^2*X5 - X1*X12*X2^2*X8 - 2*X2*X4*X5*X8 + X1*X2*X4*X5*X8 + 
        X1^2*X2*X4*X5*X8 + X11*X2^2*X9))/((-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC65*(X3^2*X5 - X1^2*X3^2*X5 - 2*X2*X5*X7 + X1^2*X2*X5*X7 + X2*X3*X9))/
    ((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC41*(X3^2*X5 - X1^2*X3^2*X5 + X2*X5*X7 - 2*X2*X3*X9 + X1^2*X2*X3*X9))/
    ((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC69*(X3*X4*X5 - X1^2*X3*X4*X5 - 2*X2*X5*X8 + X1^2*X2*X5*X8 + X2*X4*X9))/
    ((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC57*(X3*X4*X5 - X1^2*X3*X4*X5 + X2*X5*X8 - 2*X2*X4*X9 + X1^2*X2*X4*X9))/
    ((-2 + X1^2)*X2*(-X3^2 + X2*X7)) - 
   (cC56*(-1 + X1)*(-(X12*X2*X3*X4) + X1*X12*X2*X3*X4 - X11*X2*X3*X5 + 
        4*X3*X4^2*X5 - X1^2*X3*X4^2*X5 + X12*X2^2*X8 - X1*X12*X2^2*X8 - 
        3*X2*X4*X5*X8 + X1^2*X2*X4*X5*X8 + X11*X2^2*X9 - X2*X4^2*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC59*(3*X12*X2*X3*X4 - 2*X1*X12*X2*X3*X4 - X11*X2*X3*X5 - 
        X1*X11*X2*X3*X5 + X1^2*X11*X2*X3*X5 - 4*X3*X4^2*X5 + 
        4*X1*X3*X4^2*X5 + X1^2*X3*X4^2*X5 - X1^3*X3*X4^2*X5 - 3*X12*X2^2*X8 + 
        2*X1*X12*X2^2*X8 + X2*X4*X5*X8 - X1*X2*X4*X5*X8 + X11*X2^2*X9 + 
        X1*X11*X2^2*X9 - X1^2*X11*X2^2*X9 + 3*X2*X4^2*X9 - 3*X1*X2*X4^2*X9 - 
        X1^2*X2*X4^2*X9 + X1^3*X2*X4^2*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC72*(-(X14*X2*X3*X4) - X1*X14*X2*X3*X4 + X1^2*X14*X2*X3*X4 + 
        3*X12*X2*X3*X5 - 2*X1*X12*X2*X3*X5 - 4*X3*X4*X5^2 + 4*X1*X3*X4*X5^2 + 
        X1^2*X3*X4*X5^2 - X1^3*X3*X4*X5^2 + X14*X2^2*X8 + X1*X14*X2^2*X8 - 
        X1^2*X14*X2^2*X8 + 3*X2*X5^2*X8 - 3*X1*X2*X5^2*X8 - X1^2*X2*X5^2*X8 + 
        X1^3*X2*X5^2*X8 - 3*X12*X2^2*X9 + 2*X1*X12*X2^2*X9 + X2*X4*X5*X9 - 
        X1*X2*X4*X5*X9))/((-2 + X1)*(-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC75*(-1 + X1)*(-(X14*X2*X3*X4) - X12*X2*X3*X5 + X1*X12*X2*X3*X5 + 
        4*X3*X4*X5^2 - X1^2*X3*X4*X5^2 + X14*X2^2*X8 - X2*X5^2*X8 + 
        X12*X2^2*X9 - X1*X12*X2^2*X9 - 3*X2*X4*X5*X9 + X1^2*X2*X4*X5*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC60*(-(X14*X2*X3*X4) + X1*X12*X2*X3*X5 + 2*X3*X4*X5^2 - X1*X3*X4*X5^2 - 
        X1^2*X3*X4*X5^2 + X14*X2^2*X8 - X1*X12*X2^2*X9 - 2*X2*X4*X5*X9 + 
        X1*X2*X4*X5*X9 + X1^2*X2*X4*X5*X9))/((-2 + X1^2)*X2^2*(-X3^2 + X2*X7))
     - (cC66*(2*X3^3*X5 - X1*X3^3*X5 - X1^2*X3^3*X5 - 3*X2*X3*X5*X7 + 
        X1*X2*X3*X5*X7 + X1^2*X2*X3*X5*X7 + X1*X2*X3^2*X9 + X2^2*X7*X9 - 
        X1*X2^2*X7*X9))/((-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC42*(2*X3^3*X5 - X1*X3^3*X5 - X1^2*X3^3*X5 + X1*X2*X3*X5*X7 - 
        3*X2*X3^2*X9 + X1*X2*X3^2*X9 + X1^2*X2*X3^2*X9 + X2^2*X7*X9 - 
        X1*X2^2*X7*X9))/((-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC40*(-(X12*X2*X3^2) + 2*X3^2*X4*X5 - X1*X3^2*X4*X5 - X1^2*X3^2*X4*X5 + 
        X12*X2^2*X7 - 2*X2*X3*X5*X8 + X1*X2*X3*X5*X8 + X1^2*X2*X3*X5*X8 + 
        X1*X2*X3*X4*X9 - X1*X2^2*X8*X9))/((-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC43*(-(X12*X2*X3^2) + 2*X3^2*X4*X5 - X1*X3^2*X4*X5 - X1^2*X3^2*X4*X5 + 
        X12*X2^2*X7 + X1*X2*X3*X5*X8 - 2*X2*X3*X4*X9 + X1*X2*X3*X4*X9 + 
        X1^2*X2*X3*X4*X9 - X1*X2^2*X8*X9))/((-2 + X1^2)*X2^2*(-X3^2 + X2*X7))\
    - (cC52*(-(X12*X2*X3^2) - X1*X12*X2*X3^2 + X1^2*X12*X2*X3^2 - 
        4*X3^2*X4*X5 + 4*X1*X3^2*X4*X5 + X1^2*X3^2*X4*X5 - X1^3*X3^2*X4*X5 + 
        X12*X2^2*X7 + X1*X12*X2^2*X7 - X1^2*X12*X2^2*X7 + 3*X2*X4*X5*X7 - 
        3*X1*X2*X4*X5*X7 - X1^2*X2*X4*X5*X7 + X1^3*X2*X4*X5*X7 + 
        X2*X3*X5*X8 - X1*X2*X3*X5*X8 + 3*X2*X3*X4*X9 - 2*X1*X2*X3*X4*X9 - 
        3*X2^2*X8*X9 + 2*X1*X2^2*X8*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC67*(-(X12*X2*X3^2) - X1*X12*X2*X3^2 + X1^2*X12*X2*X3^2 - 4*X3^2*X4*X5 + 
        4*X1*X3^2*X4*X5 + X1^2*X3^2*X4*X5 - X1^3*X3^2*X4*X5 + X12*X2^2*X7 + 
        X1*X12*X2^2*X7 - X1^2*X12*X2^2*X7 + 3*X2*X4*X5*X7 - 
        3*X1*X2*X4*X5*X7 - X1^2*X2*X4*X5*X7 + X1^3*X2*X4*X5*X7 + 
        3*X2*X3*X5*X8 - 2*X1*X2*X3*X5*X8 + X2*X3*X4*X9 - X1*X2*X3*X4*X9 - 
        3*X2^2*X8*X9 + 2*X1*X2^2*X8*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC70*(X12*X2*X3^2 - X1*X12*X2*X3^2 - 4*X3^2*X4*X5 + 4*X1*X3^2*X4*X5 + 
        X1^2*X3^2*X4*X5 - X1^3*X3^2*X4*X5 - X12*X2^2*X7 + X1*X12*X2^2*X7 + 
        X2*X4*X5*X7 - X1*X2*X4*X5*X7 + 5*X2*X3*X5*X8 - 4*X1*X2*X3*X5*X8 - 
        X1^2*X2*X3*X5*X8 + X1^3*X2*X3*X5*X8 - X2*X3*X4*X9 - X1*X2*X3*X4*X9 + 
        X1^2*X2*X3*X4*X9 - X2^2*X8*X9 + 2*X1*X2^2*X8*X9 - X1^2*X2^2*X8*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC58*(X12*X2*X3^2 - X1*X12*X2*X3^2 - 4*X3^2*X4*X5 + 4*X1*X3^2*X4*X5 + 
        X1^2*X3^2*X4*X5 - X1^3*X3^2*X4*X5 - X12*X2^2*X7 + X1*X12*X2^2*X7 + 
        X2*X4*X5*X7 - X1*X2*X4*X5*X7 - X2*X3*X5*X8 - X1*X2*X3*X5*X8 + 
        X1^2*X2*X3*X5*X8 + 5*X2*X3*X4*X9 - 4*X1*X2*X3*X4*X9 - 
        X1^2*X2*X3*X4*X9 + X1^3*X2*X3*X4*X9 - X2^2*X8*X9 + 2*X1*X2^2*X8*X9 - 
        X1^2*X2^2*X8*X9))/((-2 + X1)*(-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC44*(-(X14*X2*X3^2) + 2*X3^2*X5^2 - X1*X3^2*X5^2 - X1^2*X3^2*X5^2 + 
        X14*X2^2*X7 - 2*X2*X3*X5*X9 + 2*X1*X2*X3*X5*X9 + X1^2*X2*X3*X5*X9 - 
        X1*X2^2*X9^2))/((-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC74*(-1 + X1)*(-(X14*X2*X3^2) + 4*X3^2*X5^2 - X1^2*X3^2*X5^2 + 
        X14*X2^2*X7 - X2*X5^2*X7 - 4*X2*X3*X5*X9 + X1*X2*X3*X5*X9 + 
        X1^2*X2*X3*X5*X9 + X2^2*X9^2 - X1*X2^2*X9^2))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*(-X3^2 + X2*X7)) - 
   (cC68*(-(X14*X2*X3^2) - X1*X14*X2*X3^2 + X1^2*X14*X2*X3^2 - 4*X3^2*X5^2 + 
        4*X1*X3^2*X5^2 + X1^2*X3^2*X5^2 - X1^3*X3^2*X5^2 + X14*X2^2*X7 + 
        X1*X14*X2^2*X7 - X1^2*X14*X2^2*X7 + 3*X2*X5^2*X7 - 3*X1*X2*X5^2*X7 - 
        X1^2*X2*X5^2*X7 + X1^3*X2*X5^2*X7 + 4*X2*X3*X5*X9 - 
        3*X1*X2*X3*X5*X9 - 3*X2^2*X9^2 + 2*X1*X2^2*X9^2))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*(-X3^2 + X2*X7))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 601497
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 2317947
solve3 i = 18    time used : -12 minutes
solving for cC18
length 6.
#1solution = cC18 -> 
  -((cC34*X3)/X2) - (cC50*X4)/X2 - (cC66*X5)/X2 + 
   (X6*(-(X10^2*X2^2) + X1*X10^2*X2^2 + X16*X2*X3^2 + 2*X10*X2*X3*X6 - 
        2*X1*X10*X2*X3*X6 - 2*X3^2*X6^2 + X1*X3^2*X6^2 - X16*X2^2*X7 + 
        X2*X6^2*X7))/((-2 + X1)*X2*(-X3^2 + X2*X7)^2) - 
   (cC19*(X3*X4 - X2*X8))/(X3^2 - X2*X7) - 
   (cC22*(X3*X4 - X2*X8))/(X3^2 - X2*X7) - 
   (cC35*X3*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC38*X3*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC51*X4*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC54*X4*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC67*X5*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC70*X5*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC23*(X11*X2*X3^2 - 2*X3^2*X4^2 + X1*X3^2*X4^2 - X11*X2^2*X7 + 
        X2*X4^2*X7 + 2*X2*X3*X4*X8 - 2*X1*X2*X3*X4*X8 - X2^2*X8^2 + 
        X1*X2^2*X8^2))/((-2 + X1)*(X3^2 - X2*X7)^2) - 
   (cC39*X3*(X11*X2*X3^2 - 2*X3^2*X4^2 + X1*X3^2*X4^2 - X11*X2^2*X7 + 
        X2*X4^2*X7 + 2*X2*X3*X4*X8 - 2*X1*X2*X3*X4*X8 - X2^2*X8^2 + 
        X1*X2^2*X8^2))/((-2 + X1)*X2*(-X3^2 + X2*X7)^2) - 
   (cC55*X4*(X11*X2*X3^2 - 2*X3^2*X4^2 + X1*X3^2*X4^2 - X11*X2^2*X7 + 
        X2*X4^2*X7 + 2*X2*X3*X4*X8 - 2*X1*X2*X3*X4*X8 - X2^2*X8^2 + 
        X1*X2^2*X8^2))/((-2 + X1)*X2*(-X3^2 + X2*X7)^2) - 
   (cC71*X5*(X11*X2*X3^2 - 2*X3^2*X4^2 + X1*X3^2*X4^2 - X11*X2^2*X7 + 
        X2*X4^2*X7 + 2*X2*X3*X4*X8 - 2*X1*X2*X3*X4*X8 - X2^2*X8^2 + 
        X1*X2^2*X8^2))/((-2 + X1)*X2*(-X3^2 + X2*X7)^2) - 
   (cC20*(X3*X5 - X2*X9))/(X3^2 - X2*X7) - 
   (cC26*(X3*X5 - X2*X9))/(X3^2 - X2*X7) - 
   (cC36*X3*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC42*X3*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC52*X4*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC58*X4*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC68*X5*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC74*X5*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC24*(X12*X2*X3^2 - 2*X3^2*X4*X5 + X1*X3^2*X4*X5 - X12*X2^2*X7 + 
        X2*X4*X5*X7 + X2*X3*X5*X8 - X1*X2*X3*X5*X8 + X2*X3*X4*X9 - 
        X1*X2*X3*X4*X9 - X2^2*X8*X9 + X1*X2^2*X8*X9))/
    ((-2 + X1)*(X3^2 - X2*X7)^2) - 
   (cC27*(X12*X2*X3^2 - 2*X3^2*X4*X5 + X1*X3^2*X4*X5 - X12*X2^2*X7 + 
        X2*X4*X5*X7 + X2*X3*X5*X8 - X1*X2*X3*X5*X8 + X2*X3*X4*X9 - 
        X1*X2*X3*X4*X9 - X2^2*X8*X9 + X1*X2^2*X8*X9))/
    ((-2 + X1)*(X3^2 - X2*X7)^2) - 
   (cC40*X3*(X12*X2*X3^2 - 2*X3^2*X4*X5 + X1*X3^2*X4*X5 - X12*X2^2*X7 + 
        X2*X4*X5*X7 + X2*X3*X5*X8 - X1*X2*X3*X5*X8 + X2*X3*X4*X9 - 
        X1*X2*X3*X4*X9 - X2^2*X8*X9 + X1*X2^2*X8*X9))/
    ((-2 + X1)*X2*(-X3^2 + X2*X7)^2) - 
   (cC43*X3*(X12*X2*X3^2 - 2*X3^2*X4*X5 + X1*X3^2*X4*X5 - X12*X2^2*X7 + 
        X2*X4*X5*X7 + X2*X3*X5*X8 - X1*X2*X3*X5*X8 + X2*X3*X4*X9 - 
        X1*X2*X3*X4*X9 - X2^2*X8*X9 + X1*X2^2*X8*X9))/
    ((-2 + X1)*X2*(-X3^2 + X2*X7)^2) - 
   (cC56*X4*(X12*X2*X3^2 - 2*X3^2*X4*X5 + X1*X3^2*X4*X5 - X12*X2^2*X7 + 
        X2*X4*X5*X7 + X2*X3*X5*X8 - X1*X2*X3*X5*X8 + X2*X3*X4*X9 - 
        X1*X2*X3*X4*X9 - X2^2*X8*X9 + X1*X2^2*X8*X9))/
    ((-2 + X1)*X2*(-X3^2 + X2*X7)^2) - 
   (cC59*X4*(X12*X2*X3^2 - 2*X3^2*X4*X5 + X1*X3^2*X4*X5 - X12*X2^2*X7 + 
        X2*X4*X5*X7 + X2*X3*X5*X8 - X1*X2*X3*X5*X8 + X2*X3*X4*X9 - 
        X1*X2*X3*X4*X9 - X2^2*X8*X9 + X1*X2^2*X8*X9))/
    ((-2 + X1)*X2*(-X3^2 + X2*X7)^2) - 
   (cC72*X5*(X12*X2*X3^2 - 2*X3^2*X4*X5 + X1*X3^2*X4*X5 - X12*X2^2*X7 + 
        X2*X4*X5*X7 + X2*X3*X5*X8 - X1*X2*X3*X5*X8 + X2*X3*X4*X9 - 
        X1*X2*X3*X4*X9 - X2^2*X8*X9 + X1*X2^2*X8*X9))/
    ((-2 + X1)*X2*(-X3^2 + X2*X7)^2) - 
   (cC75*X5*(X12*X2*X3^2 - 2*X3^2*X4*X5 + X1*X3^2*X4*X5 - X12*X2^2*X7 + 
        X2*X4*X5*X7 + X2*X3*X5*X8 - X1*X2*X3*X5*X8 + X2*X3*X4*X9 - 
        X1*X2*X3*X4*X9 - X2^2*X8*X9 + X1*X2^2*X8*X9))/
    ((-2 + X1)*X2*(-X3^2 + X2*X7)^2) - 
   (cC28*(X14*X2*X3^2 - 2*X3^2*X5^2 + X1*X3^2*X5^2 - X14*X2^2*X7 + 
        X2*X5^2*X7 + 2*X2*X3*X5*X9 - 2*X1*X2*X3*X5*X9 - X2^2*X9^2 + 
        X1*X2^2*X9^2))/((-2 + X1)*(X3^2 - X2*X7)^2) - 
   (cC44*X3*(X14*X2*X3^2 - 2*X3^2*X5^2 + X1*X3^2*X5^2 - X14*X2^2*X7 + 
        X2*X5^2*X7 + 2*X2*X3*X5*X9 - 2*X1*X2*X3*X5*X9 - X2^2*X9^2 + 
        X1*X2^2*X9^2))/((-2 + X1)*X2*(-X3^2 + X2*X7)^2) - 
   (cC60*X4*(X14*X2*X3^2 - 2*X3^2*X5^2 + X1*X3^2*X5^2 - X14*X2^2*X7 + 
        X2*X5^2*X7 + 2*X2*X3*X5*X9 - 2*X1*X2*X3*X5*X9 - X2^2*X9^2 + 
        X1*X2^2*X9^2))/((-2 + X1)*X2*(-X3^2 + X2*X7)^2) - 
   (cC76*X5*(X14*X2*X3^2 - 2*X3^2*X5^2 + X1*X3^2*X5^2 - X14*X2^2*X7 + 
        X2*X5^2*X7 + 2*X2*X3*X5*X9 - 2*X1*X2*X3*X5*X9 - X2^2*X9^2 + 
        X1*X2^2*X9^2))/((-2 + X1)*X2*(-X3^2 + X2*X7)^2)
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 2315984
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 2916023
solve3 i = 19    time used : -13 minutes
solving for cC19
length 2.
#1solution = cC19 -> 
  -((cC35*X3)/X2) - (cC51*X4)/X2 - (cC67*X5)/X2 - 
   (cC23*(X3*X4 - X2*X8))/(X3^2 - X2*X7) - 
   (cC39*X3*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC55*X4*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC71*X5*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (X6*(X10*X2 - X3*X6)*(X13*X3^2 - X10*X3*X4 - X13*X2*X7 + X4*X6*X7 + 
        X10*X2*X8 - X3*X6*X8))/
    (X2*(-X3^2 + X2*X7)*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC27*(X3*X5 - X2*X9))/(X3^2 - X2*X7) - 
   (cC43*X3*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC59*X4*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC75*X5*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC36*X3*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    (X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC52*X4*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    (X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC68*X5*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    (X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC40*X3*(-(X3*X4) + X2*X8)*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + 
        X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    (X2*(-X3^2 + X2*X7)*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC56*X4*(-(X3*X4) + X2*X8)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    (X2*(-X3^2 + X2*X7)*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC72*X5*(-(X3*X4) + X2*X8)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    (X2*(-X3^2 + X2*X7)*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC44*X3*(-(X3*X5) + X2*X9)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    (X2*(-X3^2 + X2*X7)*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC60*X4*(-(X3*X5) + X2*X9)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    (X2*(-X3^2 + X2*X7)*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC76*X5*(-(X3*X5) + X2*X9)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    (X2*(-X3^2 + X2*X7)*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC20*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - 
        X3*X4*X9 + X2*X8*X9))/
    (X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2) - 
   (cC24*(X3*X4 - X2*X8)*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - 
        X3*X4*X9 + X2*X8*X9))/
    ((X3^2 - X2*X7)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2))\
    - (cC28*(X3*X5 - X2*X9)*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - 
        X3*X4*X9 + X2*X8*X9))/
    ((X3^2 - X2*X7)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 2914853
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 4246900
solve3 i = 20    time used : -15 minutes
solving for cC20
length 4.
#1solution = cC20 -> 
  -((cC36*X3)/X2) - (cC52*X4)/X2 - (cC68*X5)/X2 - 
   (cC24*(X3*X4 - X2*X8))/(X3^2 - X2*X7) - 
   (cC40*X3*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC56*X4*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC72*X5*(-(X3*X4) + X2*X8))/(X2*(-X3^2 + X2*X7)) - 
   (cC28*(X3*X5 - X2*X9))/(X3^2 - X2*X7) - 
   (cC44*X3*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC60*X4*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (cC76*X5*(-(X3*X5) + X2*X9))/(X2*(-X3^2 + X2*X7)) - 
   (X6*(X10*X2 - X3*X6)*(X12*X13*X3^2 - X11*X15*X3^2 - X10*X12*X3*X4 + 
        X10*X11*X3*X5 - X12*X13*X2*X7 + X11*X15*X2*X7 - X15*X4^2*X7 + 
        X13*X4*X5*X7 + X12*X4*X6*X7 - X11*X5*X6*X7 + X10*X12*X2*X8 + 
        2*X15*X3*X4*X8 - X13*X3*X5*X8 - X10*X4*X5*X8 - X12*X3*X6*X8 - 
        X15*X2*X8^2 + X5*X6*X8^2 - X10*X11*X2*X9 - X13*X3*X4*X9 + 
        X10*X4^2*X9 + X11*X3*X6*X9 + X13*X2*X8*X9 - X4*X6*X8*X9))/
    (X2*(-X3^2 + X2*X7)*(-(X12^2*X3^2) + X11*X14*X3^2 + X12^2*X2*X7 - 
        X11*X14*X2*X7 + X14*X4^2*X7 - 2*X12*X4*X5*X7 + X11*X5^2*X7 - 
        2*X14*X3*X4*X8 + 2*X12*X3*X5*X8 + X14*X2*X8^2 - X5^2*X8^2 + 
        2*X12*X3*X4*X9 - 2*X11*X3*X5*X9 - 2*X12*X2*X8*X9 + 2*X4*X5*X8*X9 + 
        X11*X2*X9^2 - X4^2*X9^2))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 4244874
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
leafcount neq = 2780822
solve3 i = 21    time used : -16 minutes
solving for cC21
length 9.
#1solution = cC21 -> 
  -(cC45/(-2 + X1^2)) - (cC22*X3)/X2 - (cC37*X3)/X2 - 
   (cC46*X3)/((-2 + X1^2)*X2) - (cC49*X3)/((-2 + X1^2)*X2) - (cC23*X4)/X2 - 
   (cC47*X4)/((-2 + X1^2)*X2) - 
   (cC53*(-1 + X1)*(1 + X1)*X4)/((-2 + X1^2)*X2) - 
   (cC55*(-1 + X1)*(-(X11*X2) + 2*X4^2 + X1*X4^2))/((-2 + X1^2)*X2^2) - 
   (cC24*X5)/X2 - (cC48*X5)/((-2 + X1^2)*X2) - (cC50*X7)/((-2 + X1^2)*X2) - 
   (cC35*(-1 + X1)*(-X3^2 + X2*X7))/((-2 + X1)*(-2 + X1^2)*X2^2) - 
   (cC38*(3*X3^2 - 3*X1*X3^2 - X1^2*X3^2 + X1^3*X3^2 + X2*X7 + X1*X2*X7 - 
        X1^2*X2*X7))/((-2 + X1)*(-2 + X1^2)*X2^2) - 
   (cC39*(-2*X3*X4 + X1*X3*X4 + X1^2*X3*X4 - X1*X2*X8))/((-2 + X1^2)*X2^2) - 
   (cC54*(-1 + X1)*(-3*X3*X4 + X1^2*X3*X4 + X2*X8 - X1*X2*X8))/
    ((-2 + X1)*(-2 + X1^2)*X2^2) - 
   (cC51*(X3*X4 - X1*X3*X4 - 3*X2*X8 + 2*X1*X2*X8))/
    ((-2 + X1)*(-2 + X1^2)*X2^2) + 
   ((-1 + X1)*(-(X16*X2) + 2*X6^2 + X1*X6^2)*
      (-(X13*X3^2) + X10*X3*X4 + X13*X2*X7 - X4*X6*X7 - X10*X2*X8 + X3*X6*X8))
     /((-2 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC26*X3*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    (X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC41*X3*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    (X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC62*X3*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    ((-2 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC65*X3*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-2 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC27*X4*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    (X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC63*X4*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    ((-2 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC28*X5*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    (X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC64*X5*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - 
        X2*X8*X9))/
    ((-2 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC73*(-1 + X1)*(1 + X1)*X5*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-2 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC76*(-1 + X1)*(-(X14*X2) + 2*X5^2 + X1*X5^2)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-2 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC66*X7*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-2 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC36*(-1 + X1)*(-X3^2 + X2*X7)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC42*(3*X3^2 - 3*X1*X3^2 - X1^2*X3^2 + X1^3*X3^2 + X2*X7 + X1*X2*X7 - 
        X1^2*X2*X7)*(-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + 
        X3*X4*X9 - X2*X8*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC44*(-2*X3*X5 + X1*X3*X5 + X1^2*X3*X5 - X1*X2*X9)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-2 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC74*(-1 + X1)*
      (-3*X3*X5 + X1^2*X3*X5 + X2*X9 - X1*X2*X9)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC68*(X3*X5 - X1*X3*X5 - 3*X2*X9 + 2*X1*X2*X9)*
      (-(X12*X3^2) + X12*X2*X7 - X4*X5*X7 + X3*X5*X8 + X3*X4*X9 - X2*X8*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC25*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    (X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2) - 
   (cC61*(X12*X3^2 - X12*X2*X7 + X4*X5*X7 - X3*X5*X8 - X3*X4*X9 + X2*X8*X9))/
    ((-2 + X1^2)*(X11*X3^2 - X11*X2*X7 + X4^2*X7 - 2*X3*X4*X8 + X2*X8^2)) - 
   (cC71*(-(X11*X12*X2*X3^2) + X1*X11*X12*X2*X3^2 + 2*X11*X3^2*X4*X5 - 
        X1*X11*X3^2*X4*X5 - X1^2*X11*X3^2*X4*X5 + X11*X12*X2^2*X7 - 
        X1*X11*X12*X2^2*X7 + X1*X12*X2*X4^2*X7 - 3*X11*X2*X4*X5*X7 + 
        X1*X11*X2*X4*X5*X7 + X1^2*X11*X2*X4*X5*X7 + 2*X4^3*X5*X7 - 
        X1*X4^3*X5*X7 - X1^2*X4^3*X5*X7 - 2*X1*X12*X2*X3*X4*X8 + 
        X11*X2*X3*X5*X8 - 4*X3*X4^2*X5*X8 + 2*X1*X3*X4^2*X5*X8 + 
        2*X1^2*X3*X4^2*X5*X8 + X1*X12*X2^2*X8^2 + 2*X2*X4*X5*X8^2 - 
        X1*X2*X4*X5*X8^2 - X1^2*X2*X4*X5*X8^2 + X11*X2*X3*X4*X9 - 
        X11*X2^2*X8*X9))/
    ((-2 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC69*(-(X12*X3^2*X4) + 2*X11*X3^2*X5 - 
        X1^2*X11*X3^2*X5 + X12*X2*X4*X7 - 2*X11*X2*X5*X7 + 
        X1^2*X11*X2*X5*X7 + X4^2*X5*X7 - X1^2*X4^2*X5*X7 - 3*X3*X4*X5*X8 + 
        2*X1^2*X3*X4*X5*X8 + 2*X2*X5*X8^2 - X1^2*X2*X5*X8^2 + X3*X4^2*X9 - 
        X2*X4*X8*X9))/
    ((-2 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC57*(2*X12*X3^2*X4 - X1^2*X12*X3^2*X4 - X11*X3^2*X5 - 
        2*X12*X2*X4*X7 + X1^2*X12*X2*X4*X7 + X11*X2*X5*X7 + X4^2*X5*X7 - 
        X1^2*X4^2*X5*X7 + X1^2*X3*X4*X5*X8 - X2*X5*X8^2 - 2*X3*X4^2*X9 + 
        X1^2*X3*X4^2*X9 + 2*X2*X4*X8*X9 - X1^2*X2*X4*X8*X9))/
    ((-2 + X1^2)*X2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC56*(-1 + X1)*
      (-2*X11*X12*X2*X3^2 + X1*X11*X12*X2*X3^2 + X12*X3^2*X4^2 + 
        3*X11*X3^2*X4*X5 - X1^2*X11*X3^2*X4*X5 + 2*X11*X12*X2^2*X7 - 
        X1*X11*X12*X2^2*X7 - 2*X12*X2*X4^2*X7 + X1*X12*X2*X4^2*X7 - 
        4*X11*X2*X4*X5*X7 + X1^2*X11*X2*X4*X5*X7 + 4*X4^3*X5*X7 - 
        X1^2*X4^3*X5*X7 + 2*X12*X2*X3*X4*X8 - 2*X1*X12*X2*X3*X4*X8 + 
        X11*X2*X3*X5*X8 - 7*X3*X4^2*X5*X8 + 2*X1^2*X3*X4^2*X5*X8 - 
        X12*X2^2*X8^2 + X1*X12*X2^2*X8^2 + 3*X2*X4*X5*X8^2 - 
        X1^2*X2*X4*X5*X8^2 + X11*X2*X3*X4*X9 - X3*X4^3*X9 - X11*X2^2*X8*X9 + 
        X2*X4^2*X8*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC59*(2*X11*X12*X2*X3^2 - 3*X1*X11*X12*X2*X3^2 + X1^2*X11*X12*X2*X3^2 - 
        3*X12*X3^2*X4^2 + 3*X1*X12*X3^2*X4^2 + X1^2*X12*X3^2*X4^2 - 
        X1^3*X12*X3^2*X4^2 - X11*X3^2*X4*X5 + X1*X11*X3^2*X4*X5 - 
        2*X11*X12*X2^2*X7 + 3*X1*X11*X12*X2^2*X7 - X1^2*X11*X12*X2^2*X7 + 
        6*X12*X2*X4^2*X7 - 5*X1*X12*X2*X4^2*X7 - X1^2*X12*X2*X4^2*X7 + 
        X1^3*X12*X2*X4^2*X7 - 2*X1*X11*X2*X4*X5*X7 + X1^2*X11*X2*X4*X5*X7 - 
        4*X4^3*X5*X7 + 4*X1*X4^3*X5*X7 + X1^2*X4^3*X5*X7 - X1^3*X4^3*X5*X7 - 
        6*X12*X2*X3*X4*X8 + 4*X1*X12*X2*X3*X4*X8 + X11*X2*X3*X5*X8 + 
        X1*X11*X2*X3*X5*X8 - X1^2*X11*X2*X3*X5*X8 + 5*X3*X4^2*X5*X8 - 
        5*X1*X3*X4^2*X5*X8 - X1^2*X3*X4^2*X5*X8 + X1^3*X3*X4^2*X5*X8 + 
        3*X12*X2^2*X8^2 - 2*X1*X12*X2^2*X8^2 - X2*X4*X5*X8^2 + 
        X1*X2*X4*X5*X8^2 + X11*X2*X3*X4*X9 + X1*X11*X2*X3*X4*X9 - 
        X1^2*X11*X2*X3*X4*X9 + 3*X3*X4^3*X9 - 3*X1*X3*X4^3*X9 - 
        X1^2*X3*X4^3*X9 + X1^3*X3*X4^3*X9 - X11*X2^2*X8*X9 - 
        X1*X11*X2^2*X8*X9 + X1^2*X11*X2^2*X8*X9 - 3*X2*X4^2*X8*X9 + 
        3*X1*X2*X4^2*X8*X9 + X1^2*X2*X4^2*X8*X9 - X1^3*X2*X4^2*X8*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC72*(3*X12^2*X2*X3^2 - 2*X1*X12^2*X2*X3^2 - X11*X14*X2*X3^2 - 
        X1*X11*X14*X2*X3^2 + X1^2*X11*X14*X2*X3^2 - X12*X3^2*X4*X5 + 
        X1*X12*X3^2*X4*X5 - 3*X11*X3^2*X5^2 + 3*X1*X11*X3^2*X5^2 + 
        X1^2*X11*X3^2*X5^2 - X1^3*X11*X3^2*X5^2 - 3*X12^2*X2^2*X7 + 
        2*X1*X12^2*X2^2*X7 + X11*X14*X2^2*X7 + X1*X11*X14*X2^2*X7 - 
        X1^2*X11*X14*X2^2*X7 - X14*X2*X4^2*X7 - X1*X14*X2*X4^2*X7 + 
        X1^2*X14*X2*X4^2*X7 + 4*X12*X2*X4*X5*X7 - 3*X1*X12*X2*X4*X5*X7 + 
        3*X11*X2*X5^2*X7 - 3*X1*X11*X2*X5^2*X7 - X1^2*X11*X2*X5^2*X7 + 
        X1^3*X11*X2*X5^2*X7 - 4*X4^2*X5^2*X7 + 4*X1*X4^2*X5^2*X7 + 
        X1^2*X4^2*X5^2*X7 - X1^3*X4^2*X5^2*X7 + 2*X14*X2*X3*X4*X8 + 
        2*X1*X14*X2*X3*X4*X8 - 2*X1^2*X14*X2*X3*X4*X8 - 3*X12*X2*X3*X5*X8 + 
        2*X1*X12*X2*X3*X5*X8 + 7*X3*X4*X5^2*X8 - 7*X1*X3*X4*X5^2*X8 - 
        2*X1^2*X3*X4*X5^2*X8 + 2*X1^3*X3*X4*X5^2*X8 - X14*X2^2*X8^2 - 
        X1*X14*X2^2*X8^2 + X1^2*X14*X2^2*X8^2 - 3*X2*X5^2*X8^2 + 
        3*X1*X2*X5^2*X8^2 + X1^2*X2*X5^2*X8^2 - X1^3*X2*X5^2*X8^2 - 
        3*X12*X2*X3*X4*X9 + 2*X1*X12*X2*X3*X4*X9 + X3*X4^2*X5*X9 - 
        X1*X3*X4^2*X5*X9 + 3*X12*X2^2*X8*X9 - 2*X1*X12*X2^2*X8*X9 - 
        X2*X4*X5*X8*X9 + X1*X2*X4*X5*X8*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC75*(-1 + X1)*(-(X12^2*X2*X3^2) + X1*X12^2*X2*X3^2 - X11*X14*X2*X3^2 + 
        3*X12*X3^2*X4*X5 - X1^2*X12*X3^2*X4*X5 + X11*X3^2*X5^2 + 
        X12^2*X2^2*X7 - X1*X12^2*X2^2*X7 + X11*X14*X2^2*X7 - X14*X2*X4^2*X7 - 
        4*X12*X2*X4*X5*X7 + X1*X12*X2*X4*X5*X7 + X1^2*X12*X2*X4*X5*X7 - 
        X11*X2*X5^2*X7 + 4*X4^2*X5^2*X7 - X1^2*X4^2*X5^2*X7 + 
        2*X14*X2*X3*X4*X8 + X12*X2*X3*X5*X8 - X1*X12*X2*X3*X5*X8 - 
        5*X3*X4*X5^2*X8 + X1^2*X3*X4*X5^2*X8 - X14*X2^2*X8^2 + X2*X5^2*X8^2 + 
        X12*X2*X3*X4*X9 - X1*X12*X2*X3*X4*X9 - 3*X3*X4^2*X5*X9 + 
        X1^2*X3*X4^2*X5*X9 - X12*X2^2*X8*X9 + X1*X12*X2^2*X8*X9 + 
        3*X2*X4*X5*X8*X9 - X1^2*X2*X4*X5*X8*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC60*(X1*X12^2*X2*X3^2 - X11*X14*X2*X3^2 + 2*X12*X3^2*X4*X5 - 
        X1*X12*X3^2*X4*X5 - X1^2*X12*X3^2*X4*X5 - X1*X12^2*X2^2*X7 + 
        X11*X14*X2^2*X7 - X14*X2*X4^2*X7 - 2*X12*X2*X4*X5*X7 + 
        2*X1*X12*X2*X4*X5*X7 + X1^2*X12*X2*X4*X5*X7 + 2*X4^2*X5^2*X7 - 
        X1*X4^2*X5^2*X7 - X1^2*X4^2*X5^2*X7 + 2*X14*X2*X3*X4*X8 - 
        X1*X12*X2*X3*X5*X8 - 2*X3*X4*X5^2*X8 + X1*X3*X4*X5^2*X8 + 
        X1^2*X3*X4*X5^2*X8 - X14*X2^2*X8^2 - X1*X12*X2*X3*X4*X9 - 
        2*X3*X4^2*X5*X9 + X1*X3*X4^2*X5*X9 + X1^2*X3*X4^2*X5*X9 + 
        X1*X12*X2^2*X8*X9 + 2*X2*X4*X5*X8*X9 - X1*X2*X4*X5*X8*X9 - 
        X1^2*X2*X4*X5*X8*X9))/
    ((-2 + X1^2)*X2^2*(-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - 
        X2*X8^2)) - (cC67*(-(X11*X3^3*X5) + X1*X11*X3^3*X5 + 
        X11*X2*X3*X5*X7 - X1*X11*X2*X3*X5*X7 - X3*X4^2*X5*X7 + 
        X1*X3*X4^2*X5*X7 + 2*X12*X2*X3^2*X8 - X1*X12*X2*X3^2*X8 + 
        2*X3^2*X4*X5*X8 - 2*X1*X3^2*X4*X5*X8 - 2*X12*X2^2*X7*X8 + 
        X1*X12*X2^2*X7*X8 + 2*X2*X4*X5*X7*X8 - X1*X2*X4*X5*X7*X8 - 
        3*X2*X3*X5*X8^2 + 2*X1*X2*X3*X5*X8^2 + X11*X2*X3^2*X9 - 
        X1*X11*X2*X3^2*X9 - X11*X2^2*X7*X9 + X1*X11*X2^2*X7*X9 + 
        X2*X4^2*X7*X9 - X1*X2*X4^2*X7*X9 - 4*X2*X3*X4*X8*X9 + 
        3*X1*X2*X3*X4*X8*X9 + 3*X2^2*X8^2*X9 - 2*X1*X2^2*X8^2*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC52*(-(X12*X3^3*X4) + X1*X12*X3^3*X4 + X12*X2*X3*X4*X7 - 
        X1*X12*X2*X3*X4*X7 - X3*X4^2*X5*X7 + X1*X3*X4^2*X5*X7 + 
        X12*X2*X3^2*X8 - X1*X12*X2*X3^2*X8 + X3^2*X4*X5*X8 - 
        X1*X3^2*X4*X5*X8 - X12*X2^2*X7*X8 + X1*X12*X2^2*X7*X8 + 
        X2*X4*X5*X7*X8 - X1*X2*X4*X5*X7*X8 - X2*X3*X5*X8^2 + 
        X1*X2*X3*X5*X8^2 + 2*X11*X2*X3^2*X9 - X1*X11*X2*X3^2*X9 + 
        X3^2*X4^2*X9 - X1*X3^2*X4^2*X9 - 2*X11*X2^2*X7*X9 + 
        X1*X11*X2^2*X7*X9 + 2*X2*X4^2*X7*X9 - X1*X2*X4^2*X7*X9 - 
        6*X2*X3*X4*X8*X9 + 4*X1*X2*X3*X4*X8*X9 + 3*X2^2*X8^2*X9 - 
        2*X1*X2^2*X8^2*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC40*(-(X12*X3^3*X4) + X1*X12*X3^3*X4 - 3*X11*X3^3*X5 + 
        3*X1*X11*X3^3*X5 + X1^2*X11*X3^3*X5 - X1^3*X11*X3^3*X5 + 
        X12*X2*X3*X4*X7 - X1*X12*X2*X3*X4*X7 + 3*X11*X2*X3*X5*X7 - 
        3*X1*X11*X2*X3*X5*X7 - X1^2*X11*X2*X3*X5*X7 + X1^3*X11*X2*X3*X5*X7 - 
        4*X3*X4^2*X5*X7 + 4*X1*X3*X4^2*X5*X7 + X1^2*X3*X4^2*X5*X7 - 
        X1^3*X3*X4^2*X5*X7 + X12*X2*X3^2*X8 - X1*X12*X2*X3^2*X8 + 
        7*X3^2*X4*X5*X8 - 7*X1*X3^2*X4*X5*X8 - 2*X1^2*X3^2*X4*X5*X8 + 
        2*X1^3*X3^2*X4*X5*X8 - X12*X2^2*X7*X8 + X1*X12*X2^2*X7*X8 + 
        X2*X4*X5*X7*X8 - X1*X2*X4*X5*X7*X8 - 4*X2*X3*X5*X8^2 + 
        4*X1*X2*X3*X5*X8^2 + X1^2*X2*X3*X5*X8^2 - X1^3*X2*X3*X5*X8^2 - 
        X11*X2*X3^2*X9 - X1*X11*X2*X3^2*X9 + X1^2*X11*X2*X3^2*X9 + 
        X3^2*X4^2*X9 - X1*X3^2*X4^2*X9 + X11*X2^2*X7*X9 + X1*X11*X2^2*X7*X9 - 
        X1^2*X11*X2^2*X7*X9 - X2*X4^2*X7*X9 - X1*X2*X4^2*X7*X9 + 
        X1^2*X2*X4^2*X7*X9 + 4*X1*X2*X3*X4*X8*X9 - 2*X1^2*X2*X3*X4*X8*X9 - 
        2*X1*X2^2*X8^2*X9 + X1^2*X2^2*X8^2*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC43*(-3*X12*X3^3*X4 + 3*X1*X12*X3^3*X4 + X1^2*X12*X3^3*X4 - 
        X1^3*X12*X3^3*X4 - X11*X3^3*X5 + X1*X11*X3^3*X5 + 3*X12*X2*X3*X4*X7 - 
        3*X1*X12*X2*X3*X4*X7 - X1^2*X12*X2*X3*X4*X7 + X1^3*X12*X2*X3*X4*X7 + 
        X11*X2*X3*X5*X7 - X1*X11*X2*X3*X5*X7 - 4*X3*X4^2*X5*X7 + 
        4*X1*X3*X4^2*X5*X7 + X1^2*X3*X4^2*X5*X7 - X1^3*X3*X4^2*X5*X7 - 
        X12*X2*X3^2*X8 - X1*X12*X2*X3^2*X8 + X1^2*X12*X2*X3^2*X8 + 
        5*X3^2*X4*X5*X8 - 5*X1*X3^2*X4*X5*X8 - X1^2*X3^2*X4*X5*X8 + 
        X1^3*X3^2*X4*X5*X8 + X12*X2^2*X7*X8 + X1*X12*X2^2*X7*X8 - 
        X1^2*X12*X2^2*X7*X8 - X2*X4*X5*X7*X8 - X1*X2*X4*X5*X7*X8 + 
        X1^2*X2*X4*X5*X7*X8 + 2*X1*X2*X3*X5*X8^2 - X1^2*X2*X3*X5*X8^2 + 
        X11*X2*X3^2*X9 - X1*X11*X2*X3^2*X9 + 3*X3^2*X4^2*X9 - 
        3*X1*X3^2*X4^2*X9 - X1^2*X3^2*X4^2*X9 + X1^3*X3^2*X4^2*X9 - 
        X11*X2^2*X7*X9 + X1*X11*X2^2*X7*X9 + X2*X4^2*X7*X9 - 
        X1*X2*X4^2*X7*X9 - 4*X2*X3*X4*X8*X9 + 6*X1*X2*X3*X4*X8*X9 - 
        X1^3*X2*X3*X4*X8*X9 - 2*X1*X2^2*X8^2*X9 + X1^2*X2^2*X8^2*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC70*(-3*X11*X3^3*X5 + 3*X1*X11*X3^3*X5 + X1^2*X11*X3^3*X5 - 
        X1^3*X11*X3^3*X5 + 3*X11*X2*X3*X5*X7 - 3*X1*X11*X2*X3*X5*X7 - 
        X1^2*X11*X2*X3*X5*X7 + X1^3*X11*X2*X3*X5*X7 - 3*X3*X4^2*X5*X7 + 
        3*X1*X3*X4^2*X5*X7 + X1^2*X3*X4^2*X5*X7 - X1^3*X3*X4^2*X5*X7 + 
        2*X12*X2*X3^2*X8 - X1*X12*X2*X3^2*X8 + 6*X3^2*X4*X5*X8 - 
        6*X1*X3^2*X4*X5*X8 - 2*X1^2*X3^2*X4*X5*X8 + 2*X1^3*X3^2*X4*X5*X8 - 
        2*X12*X2^2*X7*X8 + X1*X12*X2^2*X7*X8 + 2*X2*X4*X5*X7*X8 - 
        X1*X2*X4*X5*X7*X8 - 5*X2*X3*X5*X8^2 + 4*X1*X2*X3*X5*X8^2 + 
        X1^2*X2*X3*X5*X8^2 - X1^3*X2*X3*X5*X8^2 - X11*X2*X3^2*X9 - 
        X1*X11*X2*X3^2*X9 + X1^2*X11*X2*X3^2*X9 + X11*X2^2*X7*X9 + 
        X1*X11*X2^2*X7*X9 - X1^2*X11*X2^2*X7*X9 - X2*X4^2*X7*X9 - 
        X1*X2*X4^2*X7*X9 + X1^2*X2*X4^2*X7*X9 + 3*X1*X2*X3*X4*X8*X9 - 
        2*X1^2*X2*X3*X4*X8*X9 + X2^2*X8^2*X9 - 2*X1*X2^2*X8^2*X9 + 
        X1^2*X2^2*X8^2*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2)) - 
   (cC58*(-3*X12*X3^3*X4 + 3*X1*X12*X3^3*X4 + X1^2*X12*X3^3*X4 - 
        X1^3*X12*X3^3*X4 + 3*X12*X2*X3*X4*X7 - 3*X1*X12*X2*X3*X4*X7 - 
        X1^2*X12*X2*X3*X4*X7 + X1^3*X12*X2*X3*X4*X7 - 3*X3*X4^2*X5*X7 + 
        3*X1*X3*X4^2*X5*X7 + X1^2*X3*X4^2*X5*X7 - X1^3*X3*X4^2*X5*X7 - 
        X12*X2*X3^2*X8 - X1*X12*X2*X3^2*X8 + X1^2*X12*X2*X3^2*X8 + 
        3*X3^2*X4*X5*X8 - 3*X1*X3^2*X4*X5*X8 - X1^2*X3^2*X4*X5*X8 + 
        X1^3*X3^2*X4*X5*X8 + X12*X2^2*X7*X8 + X1*X12*X2^2*X7*X8 - 
        X1^2*X12*X2^2*X7*X8 - X2*X4*X5*X7*X8 - X1*X2*X4*X5*X7*X8 + 
        X1^2*X2*X4*X5*X7*X8 + X2*X3*X5*X8^2 + X1*X2*X3*X5*X8^2 - 
        X1^2*X2*X3*X5*X8^2 + 2*X11*X2*X3^2*X9 - X1*X11*X2*X3^2*X9 + 
        3*X3^2*X4^2*X9 - 3*X1*X3^2*X4^2*X9 - X1^2*X3^2*X4^2*X9 + 
        X1^3*X3^2*X4^2*X9 - 2*X11*X2^2*X7*X9 + X1*X11*X2^2*X7*X9 + 
        2*X2*X4^2*X7*X9 - X1*X2*X4^2*X7*X9 - 6*X2*X3*X4*X8*X9 + 
        6*X1*X2*X3*X4*X8*X9 - X1^3*X2*X3*X4*X8*X9 + X2^2*X8^2*X9 - 
        2*X1*X2^2*X8^2*X9 + X1^2*X2^2*X8^2*X9))/
    ((-2 + X1)*(-2 + X1^2)*X2^2*
      (-(X11*X3^2) + X11*X2*X7 - X4^2*X7 + 2*X3*X4*X8 - X2*X8^2))
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
UPDATING 2774064
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
 Collect with Factor 
