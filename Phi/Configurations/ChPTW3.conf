(* ************************************************************** *)
(*                                                                *)
(*                      ChPTW3                                    *)
(*                                                                *)
(* ************************************************************** *)

(*
   Author:              F.Orellana 2000

   Mathematica Version: 3.0

   Requirements:        FeynCalc > 3, Phi

   Summary:             Configuration file for the family of
                        Lagrangians ChPTW3 for Phi

   Description:         Definitions for standard weak ChPT lagrangians

*)

(* ************************************************************** *)

(* Modified box definitions for FeynCalc *)

<<"FCBoxes.m"

(* ************************************************************** *)

(* SU(3) meson matrix PhiMeson instead of Pion *)

renselectseq[a___RenormalizationState, b___RenormalizationScheme,
      c___ExpansionState, (___List | ___Rule)] := Sequence[a, b, c];

MM[x_?(!NumberQ[#]&),opts___]:=
UFieldMatrix[fcqf[(Particle[PhiMeson,renselectseq[opts]])][x],##]&@@
    Union[OptionsSelect[UFieldMatrix,opts],OptionsSelect[UMatrix,opts]];

MM[ii_?NumberQ,x_,opts___]:=
UFieldMatrix[ii,fcqf[(Particle[PhiMeson,renselectseq[opts]])][x],##]&@@
    Union[OptionsSelect[UFieldMatrix,opts],OptionsSelect[UMatrix,opts]];

SMM[x_,opts___]:=MM[1/2,x,opts];

MMS[x_,opts___]:=
UFieldMatrixSeries[fcqf[(Particle[PhiMeson,renselectseq[opts]])][x],##]&@@
    Union[OptionsSelect[UFieldMatrix,opts],OptionsSelect[UMatrix,opts]];

$UMatrices=MM;

(* ************************************************************** *)

(* Usage definitions *)

HighEnergyPhysics`Phi`Objects`ChPTW3::"usage"=
"ULagrangian[ChPTW3[2]] is the weak pionic Chiral Perturbation Theory
lagrangian written in terms of a matrix representation
of the meson fields to second order in the energy.  ULagrangian[ChPTW3[4]]
is the weak pionic Chiral Perturbation Theory lagrangian
to four'th order in the energy.  To evaluate use ArgumentsSupply";

HighEnergyPhysics`Phi`Objects`ChPT3;

MM::"usage"="MM[x] :=
UFieldMatrix[QuantumField[Particle[PhiMeson]][x]].
MM takes two optional arguments with head RenormalizationState
and RenormalizationScheme respectively";

HighEnergyPhysics`Phi`Objects`USmall::"usage"=
"USmall[mu] is the u-field of WChPT
(Ecker, Kambor and Wyler (1992), CERN-TH.6610/92).
To evaluate use ArgumentsSupply.";

HighEnergyPhysics`Phi`Objects`UGamma::"usage"=
"UGamma[mu] is the gamma-field of BChPT
(Ecker, Kambor and Wyler (1992), CERN-TH.6610/92).
To evaluate use ArgumentsSupply.
UGamma[x,mu,opts] is the evaluated gamma-field";

HighEnergyPhysics`Phi`Objects`UChiPlus::"usage"=
"UChiPlus[opts] is the chi_plus-field of WChPT
(Ecker, Kambor and Wyler (1992), CERN-TH.6610/92).
To evaluate use ArgumentsSupply";

HighEnergyPhysics`Phi`Objects`UChiMinus::"usage"=
"UChiMinus[opts] is the chi_minus-field of WChPT
(Ecker, Kambor and Wyler (1992), CERN-TH.6610/92).
To evaluate use ArgumentsSupply";

HighEnergyPhysics`Phi`Objects`UFMinus::"usage"=
"UFMinus[mu,nu] is the f_minus-field of WChPT
(Ecker, Kambor and Wyler (1992), CERN-TH.6610/92).
To evaluate use ArgumentsSupply";

HighEnergyPhysics`Phi`Objects`UFPlus::"usage"=
"UFPlus[mu,nu] is the f_plus-field of WChPT
(Ecker, Kambor and Wyler (1992), CERN-TH.6610/92).
To evaluate use ArgumentsSupply";

HighEnergyPhysics`Phi`Objects`UDelta::"usage"=
"UDelta is the delta-field of WChPT
(Ecker, Kambor and Wyler (1992), CERN-TH.6610/92).
To evaluate use ArgumentsSupply";

HighEnergyPhysics`Phi`Objects`UNablaHatDelta::"usage"=
"UNablaHatDelta[mu] is the nabla hat of the
delta-field of WChPT
(Ecker, Kambor and Wyler (1992), CERN-TH.6610/92).
To evaluate use ArgumentsSupply";

HighEnergyPhysics`Phi`Objects`UOmega::"usage"=
"UOmega[mu,nu] is the omega-field of WChPT
(Ecker, Kambor and Wyler (1992), CERN-TH.6610/92).
To evaluate use ArgumentsSupply";

HighEnergyPhysics`Phi`Objects`CovariantNabla::"usage"=
"CovariantNabla[f[x],x,{li1,li2,...},opts] is
the covariant nabla of f[x] with respect to
space-time variables x and with Lorentz indices li0, li1, li2,...
in WChPT (Ecker, Kambor and Wyler (1992), CERN-TH.6610/92).
To evaluate use ArgumentsSupply";

(* ************************************************************** *)

(* Box definitions *)

UChiPlus/:MakeBoxes[UChiPlus, TraditionalForm] :=
SubscriptBox[MakeBoxes[
StyleForm["\[Chi]",FontSlant->"Italic",FontWeight->"Bold"]][[1]],
"+"];

UChiMinus/:MakeBoxes[UChiMinus, TraditionalForm] :=
SubscriptBox[MakeBoxes[
StyleForm["\[Chi]",FontSlant->"Italic",FontWeight->"Bold"]][[1]],
"-"];

(* ************************************************************** *)

(* Attributes and data types *)

SetAttributes[ChPT3, NumericFunction];
SetAttributes[ChPTW3, NumericFunction];

(* ************************************************************** *)

(* Source fields *)

(* Strip off options passed to Particle[PseudoScalar[0],___]*)
Particle[PseudoScalar[0],o___,__Rule]:=Particle[PseudoScalar[0],o];

(* The scalar source is set to the quark mass matrix *)

QuantumField[Particle[Scalar[0],st___RenormalizationState,
sc___RenormalizationScheme,qs___ExpansionState,
opts___Rule|opts___List],SUNIndex[0]][x_]:=
UQuarkMassMatrix[st,sc,qs,opts];

(* ************************************************************** *)

(* Adjoints and conjugates *)

(* Adjoints and conjugates *)

Adjoint[p:QuantumField[___,Particle[
(Vector|AxialVector|Scalar|PseudoScalar)[0|1|2],___],___][_]] = p;

Adjoint[p:QuantumField[___,Particle[
(Vector|AxialVector|Scalar|PseudoScalar)[0|1|2],___],___]] = p;

Unprotect[Conjugate];

Conjugate[p:QuantumField[___,Particle[
(Vector|AxialVector|Scalar|PseudoScalar)[0|1|2],___],___][_]] = p;

Conjugate[p:QuantumField[___,Particle[
(Vector|AxialVector|Scalar|PseudoScalar)[0|1|2],___],___]] = p;

Protect[Conjugate];

(* ************************************************************** *)

(* Antiparticles *)

ChargeConjugate[Pion] = Pion;
ChargeConjugate[Vector[0]] = Vector[0];
ChargeConjugate[AxialVector[0]] = AxialVector[0];
ChargeConjugate[Scalar[0]] = Scalar[0];
ChargeConjugate[Scalar[1]] = Scalar[1];
ChargeConjugate[PseudoScalar[0]] = PseudoScalar[0];
ChargeConjugate[PseudoScalar[1]] = PseudoScalar[1];
ChargeConjugate[PionPlus] = PionMinus;
ChargeConjugate[PionMinus] = PionPlus;
ChargeConjugate[PionZero] = PionZero;
ChargeConjugate[KaonMinus] = KaonPlus;
ChargeConjugate[KaonPlus] = KaonMinus;
ChargeConjugate[KaonZero] = KaonZeroBar;
ChargeConjugate[KaonZeroBar] = KaonZero;
ChargeConjugate[EtaMeson] = EtaMeson;

(* ************************************************************** *)

(* Constants *)

(* When calculating infrared divergences, the photon mass
   should not be set to zero *)

ParticleMass[Photon,___]:=0;
ParticleMass[Photon[0],___]:=0;

(*Strong part*)
(*UCouplingConstant[ChPT3[4],1,___]=0;
UCouplingConstant[ChPT3[4],2,___]=0;
UCouplingConstant[ChPT3[4],3,___]=0;
UCouplingConstant[ChPT3[4],4,___]=0;
UCouplingConstant[ChPT3[4],5,___]=0;
UCouplingConstant[ChPT3[4],6,___]=0;
UCouplingConstant[ChPT3[4],7,___]=0;
UCouplingConstant[ChPT3[4],8,___]=0;
UCouplingConstant[ChPT3[4],9,___]=0;
UCouplingConstant[ChPT3[4],10,___]=0;
UCouplingConstant[ChPT3[4],11,___]=0*)

(*Weak part*)
UCouplingConstant[ChPTW3[4],1,___]=0;
UCouplingConstant[ChPTW3[4],2,___]=0;
UCouplingConstant[ChPTW3[4],3,___]=0;
UCouplingConstant[ChPTW3[4],4,___]=0;
(*UCouplingConstant[ChPTW3[4],5,___]=0;
UCouplingConstant[ChPTW3[4],6,___]=0;
UCouplingConstant[ChPTW3[4],7,___]=0;
UCouplingConstant[ChPTW3[4],8,___]=0;
UCouplingConstant[ChPTW3[4],9,___]=0;
UCouplingConstant[ChPTW3[4],10,___]=0;
UCouplingConstant[ChPTW3[4],11,___]=0;
UCouplingConstant[ChPTW3[4],12,___]=0;
UCouplingConstant[ChPTW3[4],13,___]=0;*)
(*UCouplingConstant[ChPTW3[4],14,___]=0;
UCouplingConstant[ChPTW3[4],15,___]=0;
UCouplingConstant[ChPTW3[4],16,___]=0;
UCouplingConstant[ChPTW3[4],17,___]=0;*)
UCouplingConstant[ChPTW3[4],18,___]=0;
(*UCouplingConstant[ChPTW3[4],19,___]=0;
UCouplingConstant[ChPTW3[4],20,___]=0;
UCouplingConstant[ChPTW3[4],21,___]=0;
UCouplingConstant[ChPTW3[4],22,___]=0;
UCouplingConstant[ChPTW3[4],23,___]=0;
UCouplingConstant[ChPTW3[4],24,___]=0;*)
UCouplingConstant[ChPTW3[4],25,___]=0;
UCouplingConstant[ChPTW3[4],26,___]=0;
UCouplingConstant[ChPTW3[4],27,___]=0;
UCouplingConstant[ChPTW3[4],28,___]=0;
UCouplingConstant[ChPTW3[4],29,___]=0;
UCouplingConstant[ChPTW3[4],30,___]=0;
UCouplingConstant[ChPTW3[4],31,___]=0;
UCouplingConstant[ChPTW3[4],32,___]=0;
UCouplingConstant[ChPTW3[4],33,___]=0;
UCouplingConstant[ChPTW3[4],34,___]=0;
UCouplingConstant[ChPTW3[4],35,___]=0;
UCouplingConstant[ChPTW3[4],36,___]=0;
UCouplingConstant[ChPTW3[4],37,___]=0;

(* ************************************************************** *)

(* Redefinition of the left and right components.
   Ecker, Kambor and Wyler have them the other way round.
   Also its necessary in order to not have the AxialVector (Vector)
   part set to zero *)

IsoVector[QuantumField[aa___, Particle[LeftComponent[a_],i___],
bb___],opts___][x_]:=1/2*(
IsoVector[QuantumField[aa, Particle[Vector[a],i],bb],opts][x]-
IsoVector[QuantumField[aa, Particle[AxialVector[a],i],bb],opts][x]);

IsoVector[QuantumField[aa___, Particle[RightComponent[a_],i___],bb___],
opts___][x_]:=1/2*(
  IsoVector[QuantumField[aa, Particle[Vector[a],i],bb],opts][x]+
  IsoVector[QuantumField[aa, Particle[AxialVector[a],i],bb],opts][x]);

QuantumField[aa___, Particle[LeftComponent[a_],i___],bb___][x_]:=
  1/2*(QuantumField[aa, Particle[Vector[a],i],bb][x]-
        QuantumField[aa, Particle[AxialVector[a],i],bb][x]);

QuantumField[aa___, Particle[RightComponent[a_],i___],bb___][x_]:=
  1/2*(QuantumField[aa, Particle[Vector[a],i],bb][x]+
        QuantumField[aa, Particle[AxialVector[a],i],bb][x]);

(* ************************************************************** *)

(* The u_mu field *)

USmall[mu_]:=

I*NM[Adjoint[SMM],CDr[MM,{mu}],Adjoint[SMM]];

(* ************************************************************** *)

(* The Gamma_mu field *)

UGamma[mu_]:=

1/2*(

NM[Adjoint[SMM],FDr[SMM,{mu}]]-

I*NM[Adjoint[SMM],
QuantumField[Particle[RightComponent[0]],{mu}],SMM]+

NM[SMM,FDr[Adjoint[SMM],{mu}]]-

I*NM[SMM,
QuantumField[Particle[LeftComponent[0]],{mu}],Adjoint[SMM]]

);

UGamma[x_,mu_,ar___RenormalizationState,br___RenormalizationScheme,
cr___ExpansionState,(opts___Rule|opts___List)]:=

1/2*(

NM[Adjoint[SMM[x,ar,br,cr,opts]],
FDr[SMM[x,ar,br,cr,opts],x,{mu}]]-

I*NM[Adjoint[SMM[x,ar,br,cr,opts]],
QuantumField[Particle[RightComponent[0],
ar,br,cr],{mu}][x],
SMM[x,ar,br,cr,opts]]+

NM[SMM[x,ar,br,cr,opts],
FDr[Adjoint[SMM[x,ar,br,cr,opts]],x,{mu}]]-

I*NM[SMM[x,ar,br,cr,opts],
QuantumField[Particle[LeftComponent[0],
ar,br,cr],{mu}][x],
Adjoint[SMM[x,ar,br,cr,opts]]]

);


(* ************************************************************** *)

(* The Chi_plus/Chi_minus fields *)

UChiPlus:=

NM[Adjoint[SMM],UChiMatrix,Adjoint[SMM]]+NM[SMM,Adjoint[UChiMatrix],SMM];

UChiMinus:=

NM[Adjoint[SMM],UChiMatrix,Adjoint[SMM]]-NM[SMM,Adjoint[UChiMatrix],SMM];

(* ************************************************************** *)

(* Redefinition of the field strength tensor: -I instead of I *)

FST[p_,mu_HighEnergyPhysics`FeynCalc`LorentzIndex`LorentzIndex,
    nu_HighEnergyPhysics`FeynCalc`LorentzIndex`LorentzIndex,x_,
    a___RenormalizationState,
    b___RenormalizationScheme,(opts___Rule|opts___List)]:=
  FieldStrengthTensor[mu,
UGeneratorMatrixIsoDotFull[QuantumField[
Particle[p,a,b],nu][x],opts],x]-2*I*
      UGeneratorMatrixIsoDotFull[
        IsoCross[(
              IsoVector[QuantumField[Particle[p,a,b],mu],##]&@@
                OptionsSelect[IsoVector,opts])[
            x],(IsoVector[QuantumField[Particle[p,a,b],nu],##]&@@
                OptionsSelect[IsoVector,opts])[x]],opts];

(* ************************************************************** *)

(* The f_plus/f_minus fields.
   The fields Vector[0] and AxialVector[0] are used *)

UFPlus[mu_,nu_]:=

NM[SMM,FST[LeftComponent[0],{mu},{nu}],Adjoint[SMM]]+

NM[Adjoint[SMM],FST[RightComponent[0],{mu},{nu}],SMM];

UFMinus[mu_,nu_]:=

NM[SMM,FST[LeftComponent[0],{mu},{nu}],Adjoint[SMM]]-

NM[Adjoint[SMM],FST[RightComponent[0],{mu},{nu}],SMM];

(* ************************************************************** *)

(* The capital delta field *)

UDelta:=

NM[SMM,
UGeneratorMatrix[HighEnergyPhysics`FeynCalc`SUNIndex`SUNIndex[6]],
Adjoint[SMM]];

(* ************************************************************** *)

(* The nabla hat of the capital delta field *)

(* Uncomment one and comment the other of the definitions below;
   the first is without and the second with
   coupling to a scalar source *)

UNablaHatDelta[mu_]:=

(* The standard definition *)
-I*NM[SMM,
UGeneratorMatrixIsoDotFull[QuantumField[Particle[
LeftComponent[0]],{mu}]],
UGeneratorMatrix[HighEnergyPhysics`FeynCalc`SUNIndex`SUNIndex[6]],
Adjoint[SMM]]+
I*NM[SMM,
UGeneratorMatrix[HighEnergyPhysics`FeynCalc`SUNIndex`SUNIndex[6]],
UGeneratorMatrixIsoDotFull[QuantumField[Particle[
LeftComponent[0]],{mu}]],
Adjoint[SMM]];

(* Including a scalar 'source' with momentum *)
(*NM[SMM,NM[
FDr[QuantumField[Particle[Scalar[1]]],{mu}],
UGeneratorMatrix[HighEnergyPhysics`FeynCalc`SUNIndex`SUNIndex[6]],
Adjoint[SMM]]];*)

(* ************************************************************** *)

(* The omega field *)

UOmega[mu_,nu_]:=

CovariantNabla[USmall[mu],{nu}]+CovariantNabla[USmall[nu],{mu}];

(* ************************************************************** *)

(* The nabla of the u_mu field *)

CovariantNabla[aa_,x_,loris__fcli,lori1_fcli]:=
(newfuncc[1]=CovariantNabla[aa,x,lori1];
Do[newfuncc[rep+1]=CovariantNabla[
newfuncc[rep],x,##]&@@Take[{loris},{-rep}],
{rep,1,Length[{loris}]}];newfuncc[Length[{loris}]+1]);

CovariantNabla[aa_,x_,{loris__},rest___] :=
CovariantNabla[aa,x,##,rest]&@@
HighEnergyPhysics`FeynCalc`LorentzIndex`LorentzIndex/@{loris};

(* -------------------------------------------------------------- *)

CovariantNabla[aa_,{lori_},(opts___Rule|opts___List)] :=

FieldDerivative[aa,{lori}] +

NM[UGamma[lori],aa] -
NM[aa,UGamma[lori]];

CovariantNabla[aa_,x_,
lori_HighEnergyPhysics`FeynCalc`LorentzIndex`LorentzIndex,
ar___RenormalizationState,br___RenormalizationScheme,
cr___ExpansionState,(opts___Rule|opts___List)] :=

FieldDerivative[aa,x,lori] +

NM[UGamma[x,lori,ar,br,cr,opts],aa] -
NM[aa,UGamma[x,lori,ar,br,cr,opts]];


(* ************************************************************** *)

(* The nabla of the Chi_plus/Chi_minus fields *)

CovariantNablaUChiPlus[mu_]:=
NM[SMM,CDr[Adjoint[UChiMatrix],{mu}],SMM]+
NM[Adjoint[SMM],CDr[UChiMatrix,{mu}],Adjoint[SMM]]+
I/2*(NM[USmall[mu],UChiMinus]+NM[UChiMinus,USmall[mu]])

(* Not used *)
CovariantNablaUChiMinus[mu_]:=
NM[SMM,CDr[Adjoint[UChiMatrix],{mu}],SMM]-
NM[Adjoint[SMM],CDr[UChiMatrix,{mu}],Adjoint[SMM]]+
I/2*(NM[USmall[mu],UChiPlus]+NM[UChiPlus,USmall[mu]])

(* ************************************************************** *)

(* The covariant derivative *)

CovariantFieldDerivative[aa_,x_,{loris__},rest___] :=
CovariantFieldDerivative[aa,x,##,rest]&@@
HighEnergyPhysics`FeynCalc`LorentzIndex`LorentzIndex/@{loris};

(* -------------------------------------------------------------- *)

(* Standard ChPT - Donoghue, Golowich, Holstein *)
(* commuted 14/1-2001*)

CovariantFieldDerivative[aa_,x_,
lori_HighEnergyPhysics`FeynCalc`LorentzIndex`LorentzIndex,
ar___RenormalizationState,br___RenormalizationScheme,
cr___ExpansionState,(opts___Rule|opts___List)] :=

FieldDerivative[aa,x,lori] +

I*NM[aa,UGeneratorMatrixIsoDotFull[QuantumField[Particle[
LeftComponent[0],ar,br],lori][x],opts]] -

I*NM[UGeneratorMatrixIsoDotFull[QuantumField[Particle[
RightComponent[0],ar,br],lori][x],opts],aa];

(* ************************************************************** *)

(* Re-setting of options and $-variables *)

SetOptions[WriteOutUMatrices,GaugeGroup->3];
SetOptions[UQuarkMass,GaugeGroup->3,DiagonalToU->True];
SetOptions[UGenerator,GaugeGroup->3];
SetOptions[WriteOutIsoVectors,GaugeGroup->3];
SetOptions[UIdentity,GaugeGroup->3];
SetOptions[UMatrix,GaugeGroup->3];
SetOptions[IsoVector,GaugeGroup->3];
SetOptions[UTrace,GaugeGroup->3];
SetOptions[SUNReduce,GaugeGroup->3];
SetOptions[AmplitudeProjection,GaugeGroup->3];
SetOptions[ExpandU,GaugeGroup->3];
SetOptions[FAToFC,EqualMasses->False];
SetOptions[DiscardTerms,
Retain->{Particle[PhiMeson,RenormalizationState[0]]->2,
Particle[AxialVector[0],RenormalizationState[0]]->1}];
SetOptions[CovariantFieldDerivative,GaugeGroup->3];
SetOptions[DiscardTopologies,PerturbationOrder -> 1,
OrderingPatterns -> {(*Vertices with a scalar are always weak*)
FullVertex[___,Scalar1[0], ___],(*so are odd vertices without a scalar*)
FullVertex[v__] /; (OddQ[Length[{v}]] && FreeQ[{v}, Scalar1[0]])}];

$UMatrices=
MM|SMM|UChiMatrix|USmall|UFPlus|UFMinus;

$UParticlesInUse=
{PhiMeson,Pion,Kaon,KaonPlus,KaonMinus,
KaonZero,KaonZeroBar,(*EtaMeson,
Photon,Vector[0],*)AxialVector[0],Scalar[1],Scalar[2],
PseudoScalar[0]};

$ExpansionQuantities=
{Global`FAFourVector[__],ParticleMass[Pion,a___],
ParticleMass[PhiMeson,b___],ParticleMass[KaonZero,c___],
ParticleMass[KaonPlus,d___],ParticleMass[EtaMeson,d___](*,
UCouplingConstant[ChPTW3[2],h___]*)};

$PropagatorMassesStates={
    PhiMeson[0]->{RenormalizationState[0]},
    Pion[0]->{RenormalizationState[0]},
    Kaon[0]->{RenormalizationState[0]},
    KaonPlus[0]->{RenormalizationState[0]},
    KaonMinus[0]->{RenormalizationState[0]},
    KaonZero[0]->{RenormalizationState[0]},
    KaonZeroBar[0]->{RenormalizationState[0]},
    EtaMeson[0]->{RenormalizationState[0]},
    AxialVector[0][0]->{RenormalizationState[0]},
    PseudoScalar[0][0]->{RenormalizationState[0]},
    Vector[0]->{RenormalizationState[0]},
    Photon[0]->{RenormalizationState[0]}};

$CouplingIsoIndicesSpecifications =
   {PhiMeson[0]->{{IsoRange->{1,2,3,4,5,6,7,8},IsoIndicesString->"I"}},
    PseudoScalar[0][0]->{{IsoRange->{1,2,3,4,5,6,7,8},IsoIndicesString->"I"}},
    Scalar[2][0]->{{IsoRange->{0,1,2,3,4,5,6,7,8},IsoIndicesString->"I"}},
    AxialVector[0][0]->{{IsoRange->{1,2,3,4,5,6,7,8},IsoIndicesString->"I"}},
    Vector[0][0]->{{IsoRange->{1,2,3,4,5,6,7,8},IsoIndicesString->"I"}}};

$MixingFields=
   {};

$InsertOnly=
   {Scalar[1][0]->{
   HighEnergyPhysics`FeynArts`Incoming,
   HighEnergyPhysics`FeynArts`Outgoing,
   HighEnergyPhysics`FeynArts`External},
   Scalar[2][0]->{
   HighEnergyPhysics`FeynArts`Incoming,
   HighEnergyPhysics`FeynArts`Outgoing,
   HighEnergyPhysics`FeynArts`External},
   PseudoScalar[0][0]->{
   HighEnergyPhysics`FeynArts`Incoming,
   HighEnergyPhysics`FeynArts`Outgoing,
   HighEnergyPhysics`FeynArts`External},
   Vector[0][0]->{
   HighEnergyPhysics`FeynArts`Incoming,
   HighEnergyPhysics`FeynArts`Outgoing,
   HighEnergyPhysics`FeynArts`External},
   AxialVector[0][0]->{
   HighEnergyPhysics`FeynArts`Incoming,
   HighEnergyPhysics`FeynArts`Outgoing,
   HighEnergyPhysics`FeynArts`External},
   Photon[0]->{
   HighEnergyPhysics`FeynArts`Incoming,
   HighEnergyPhysics`FeynArts`Outgoing,
   HighEnergyPhysics`FeynArts`External}};

(* ************************************************************** *)
