

(* :Title: DiracSimplify.test                                               *)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 1990-2016 Rolf Mertig
	Copyright (C) 1997-2016 Frederik Orellana
	Copyright (C) 2014-2016 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for DiracSimplify  			*)

(* ------------------------------------------------------------------------ *)

Tests`Dirac`fcstDiracSimplify = {

{"fcstDiracSimplify-ID1","DiracSimplify[DiracMatrix[mu, mu, Dimension -> D]]","D"},
{"fcstDiracSimplify-ID2","DiracSimplify[DiracMatrix[mu, nu, rho, sigma, mu]]","-2*DiracGamma[LorentzIndex[sigma]] . DiracGamma[LorentzIndex[rho]] . DiracGamma[LorentzIndex[nu]]"},
{"fcstDiracSimplify-ID3","DiracSimplify[1/2 DiracMatrix[mu, a, b, c, d, mu]]","DiracGamma[LorentzIndex[c]] . DiracGamma[LorentzIndex[b]] . DiracGamma[LorentzIndex[a]] . DiracGamma[LorentzIndex[d]] +
DiracGamma[LorentzIndex[d]] . DiracGamma[LorentzIndex[a]] . DiracGamma[LorentzIndex[b]] . DiracGamma[LorentzIndex[c]]"},
{"fcstDiracSimplify-ID4","DiracSimplify[DiracSlash[p], DiracSlash[-q] + m, DiracSlash[p]]","m*Pair[Momentum[p], Momentum[p]] + DiracGamma[Momentum[q]]*Pair[Momentum[p], Momentum[p]] -
2*DiracGamma[Momentum[p]]*Pair[Momentum[p], Momentum[q]]"},
{"fcstDiracSimplify-ID5","DiracSimplify[DiracMatrix[5], DiracMatrix[mu]]","-DiracGamma[LorentzIndex[mu]] . DiracGamma[5]"},
{"fcstDiracSimplify-ID6","DiracSimplify[DiracMatrix[6, nu, 7, mu]]","DiracGamma[LorentzIndex[nu]] . DiracGamma[LorentzIndex[mu]] . DiracGamma[6]"},
{"fcstDiracSimplify-ID7","DiracSimplify[(DiracSlash[p] - m).SpinorU[p, m]]","0"},
{"fcstDiracSimplify-ID8","DiracSimplify[(DiracSlash[p] + m).SpinorV[p, m]]","0"},
{"fcstDiracSimplify-ID9","DiracSimplify[SpinorUBar[p, m].(DiracSlash[p] - m)]","0"},
{"fcstDiracSimplify-ID10","DiracSimplify[SpinorVBar[p, m].DiracSlash[q].(DiracSlash[p] - m)]","2*Pair[Momentum[p], Momentum[q]]*Spinor[-Momentum[p], m, 1]"},
{"fcstDiracSimplify-ID11","DiracSimplify[SpinorVBar[p, m1].DiracSlash[q, p].SpinorU[q, m2]]","m1*m2*Spinor[-Momentum[p], m1, 1] . Spinor[Momentum[q], m2, 1] + 2*Spinor[-Momentum[p], m1, 1] . Spinor[Momentum[q], m2, 1]*
	Pair[Momentum[p], Momentum[q]]"},
{"fcstDiracSimplify-ID11","$BreitMaison = True;\nDiracSimplify[DiracGamma[5] . DiracGamma[LorentzIndex[mu, D], D]]","2*DiracGamma[LorentzIndex[mu, -4 + D], -4 + D] . DiracGamma[5] - DiracGamma[LorentzIndex[mu, D], D] . DiracGamma[5]"},
{"fcstDiracSimplify-ID12","DiracSimplify[DiracMatrix[6] .DiracMatrix[mu, Dimension -> D]]","DiracGamma[LorentzIndex[mu, -4 + D], -4 + D] . DiracGamma[5] + DiracGamma[LorentzIndex[mu, D], D] . DiracGamma[7]"},
{"fcstDiracSimplify-ID13","$BreitMaison = False;\nDiracSimplify[DiracMatrix[6] .DiracMatrix[mu, Dimension -> D]]","DiracGamma[LorentzIndex[mu, D], D] . DiracGamma[7]"},
{"fcstDiracSimplify-ID14","DiracSimplify[Spinor[p1, m1].(DiracSlash[p2]).DiracMatrix[7].Spinor[p2,m2]] // FCE",
"1/2 m2 Spinor[Momentum[p1], m1, 1].Spinor[Momentum[p2], m2, 1] +
1/2 m2 Spinor[Momentum[p1], m1, 1].GA[5].Spinor[Momentum[p2], m2, 1]"},
{"fcstDiracSimplify-ID15",
"DiracSimplify[Spinor[-Momentum[p2],0,1].GS[Polarization[k1,-I]].GS[k1].GS[Polarization[k2,-I]].GA[7].Spinor[Momentum[p1],0,1],DiracSubstitute67->True]//FCE",
"1/2 Spinor[-Momentum[p2], 0, 1].GS[Polarization[k1, -I]].GS[k1].GS[
	Polarization[k2, -I]].Spinor[Momentum[p1], 0, 1] -
1/2 Spinor[-Momentum[p2], 0, 1].GS[Polarization[k1, -I]].GS[k1].GS[
	Polarization[k2, -I]].GA[5].Spinor[Momentum[p1], 0, 1]"},
{"fcstDiracSimplify-ID16",
"DiracSimplify[GA[i].(GS[p] + M).GA[j].GA[6].GA[k].GA[j], InsideDiracTrace -> True] // FCE",
"-M MT[i, k]"},
{"fcstDiracSimplify-ID17",
"DiracSimplify[(1/2 - GA[5]/2).(-((a + GS[p + q])/b)).(1/2 + GA[5]/2)] // FCE",
"-(GS[p].GA[5]/(2 b)) - GS[q].GA[5]/(2 b) - GS[p]/(2 b) - GS[q]/(2 b)"},
{"fcstDiracSimplify-ID22","DiracSimplify[-(1/SPD[p, p])
	8 (2 - D) Spinor[Momentum[p, D], M, 1].GSD[p].Spinor[
	Momentum[p, D], M, 1] FAD[{k1, M}] + (1/SPD[p, p])
8 (2 - D) Spinor[Momentum[p, D], M, 1].GSD[p].Spinor[Momentum[p, D],
	M, 1] FAD[{k1, ma}] +
1/SPD[p, p]
	8 FAD[{k1, M}, {k1 - p, ma}] (4 D M^2 SPD[p, p] +
	2 Spinor[Momentum[p, D], M, 1].GSD[p].Spinor[Momentum[p, D], M,
		1] (M^2 - ma^2 + SPD[p, p]) -
	D Spinor[Momentum[p, D], M, 1].GSD[p].Spinor[Momentum[p, D], M,
		1] (M^2 - ma^2 + SPD[p, p]))]//FCE",
		"32 D M^2 FAD[{k1, M}, {k1 - p, ma}] + (1/SPD[p, p]) 16 (-2 + D) M^2 (FAD[{k1, M}] - FAD[{k1, ma}] -
	M^2 FAD[{k1, M}, {k1 - p, ma}] + ma^2 FAD[{k1, M}, {k1 - p, ma}] -
	FAD[{k1, M}, {k1 - p, ma}] SPD[p, p])"}
}

Tests`Dirac`fcstDiracSimplifyDotWarnings = {
{"fcstDiracSimplifyDotWarnings-ID1","CheckAbort[DiracSimplify[GA[a] GA[b],FCCheckSyntax->True],True]",
	"True","{Message[DiracSimplify::noncom, GA[a]*GA[b]]}"},
{"fcstDiracSimplifyDotWarnings-ID2","CheckAbort[DiracSimplify[GA[a, b] GA[c],FCCheckSyntax->True],True]",
	"True","{Message[DiracSimplify::noncom, GA[a] . GA[b]*GA[c]]}"},
{"fcstDiracSimplifyDotWarnings-ID3","CheckAbort[DiracSimplify[GA[a, b] GA[c, d],FCCheckSyntax->True],True]",
	"True","{Message[DiracSimplify::noncom, GA[a] . GA[b]*GA[c] . GA[d]]}"},
{"fcstDiracSimplifyDotWarnings-ID4","CheckAbort[DiracSimplify[SUNT[a] SUNT[b],FCCheckSyntax->True],True]",
	"True","{Message[DiracSimplify::noncom, SUNT[a]*SUNT[b]]}"},
{"fcstDiracSimplifyDotWarnings-ID5","CheckAbort[DiracSimplify[SUNT[a, b] SUNT[c],FCCheckSyntax->True],True]",
	"True","{Message[DiracSimplify::noncom, SUNT[c]*SUNT[a, b]]}"},
{"fcstDiracSimplifyDotWarnings-ID6","CheckAbort[DiracSimplify[SUNT[a, b] SUNT[c, d],FCCheckSyntax->True],True]",
	"True","{Message[DiracSimplify::noncom, SUNT[a, b]*SUNT[c, d]]}"},
{"fcstDiracSimplifyDotWarnings-ID7","CheckAbort[DiracSimplify[(GA[a] + M) GA[b],FCCheckSyntax->True],True]",
	"True","{Message[DiracSimplify::noncom, (M + GA[a])*GA[b]]}"}
}

