Tests`LoopIntegrals`fcitTIDPTests =
({
{"fcitTIDPTests-ID1","
$Larin = True; \n $BreitMaison = False; \n exp =
Spinor[-Momentum[pv1, D], 0, 1].GAD[i1].GA[5].Spinor[
	Momentum[pv2, D], 0, 1] Spinor[Momentum[pv4, D], 0, 1].GAD[
	i2].GSD[q].GAD[i1].GA[5].GSD[q].GAD[i2].Spinor[-Momentum[pv3, D],
	0, 1] FAD[q, pv3 + q, -(pv1 + pv2 - pv3) + q] Spinor[Momentum[pv2, D], 0,
	1].GAD[n2].Spinor[-Momentum[pv1, D], 0, 1] Spinor[-Momentum[pv3, D], 0, 1].GAD[n2].Spinor[Momentum[pv4, D], 0, 1]; \n
Factor2[TID[(FermionSpinSum[exp] /. DiracTrace -> Tr /. pv4 -> pv1 + pv2 - pv3), q, ToPaVe -> True] //PropagatorDenominatorExplicit // Simplify] -
Factor2[(((FermionSpinSum[TID[exp, q, ToPaVe -> True]] /. DiracTrace -> Tr /. pv4 -> pv1 + pv2 - pv3) // Contract)) // Simplify]", "0"},
{"fcitTIDPTests-ID2","
$Larin = False; \n $BreitMaison = True; \n
exp = Spinor[-Momentum[pv1, D], 0, 1].GAD[i1].GA[5].Spinor[Momentum[pv2, D], 0, 1] Spinor[Momentum[pv4, D], 0,
1].GAD[i2].GSD[q].GAD[i1].GA[5].GSD[q].GAD[i2].Spinor[-Momentum[pv3, D],0, 1] FAD[q,pv3 + q,
-(pv1 + pv2 - pv3) + q] Spinor[Momentum[pv2, D], 0,1].GAD[n2].Spinor[-Momentum[pv1, D], 0,1] Spinor[-Momentum[pv3, D],
0, 1].GAD[n2].Spinor[Momentum[pv4, D], 0, 1]; Factor2[TID[(FermionSpinSum[exp] /. DiracTrace -> Tr /.
pv4 -> pv1 + pv2 - pv3), q, ToPaVe -> True] // PropagatorDenominatorExplicit // Simplify] - Factor2[(((FermionSpinSum[TID[exp, q, ToPaVe -> True]] /.
		  DiracTrace -> Tr /. pv4 -> pv1 + pv2 - pv3) // Contract) /. Momentum[(a : pv1 | pv2 | pv3 | pv4), D | D - 4] :> Momentum[a]) // Simplify]", "0"}
})
