Tests`LoopIntegrals`fcstTIDPaVeCRankTwo = {{"fcstTIDPaVeDRankTwo-ID1", "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k+p1,m1},{k+p\
2,m2},{k+p3,m3}],k]//FCE//Together", "(FAD[{k, m0}, {k + p1, m1}, {k + p2, \
m2}, {k + p3, m3}]*(-2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^4 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^4 + 4*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] - 2*D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] + 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p2]^3*SPD[p1, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 + 2*D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 - 4*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 + 2*D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 - 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + 2*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^4 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p3]^4 + 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p2] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2] - 4*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] \
- 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p2] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - \
MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p3]^4*SPD[p2, p2] - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p3]^4*SPD[p2, \
p2] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 \
- 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - 3*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 + MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^3*SPD[p2, p2]^2 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p3]^4*SPD[p2, \
p2]^2 - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] \
+ 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] + \
2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] - 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 8*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] - \
4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] \
+ D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, \
p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] \
- 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] \
+ D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p3] - 8*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 4*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, \
p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + \
6*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 \
+ 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 \
+ 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 8*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 4*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 \
- 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 4*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 \
- 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p3]^3 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p3]^4 - MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^4 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^4 - \
FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^4*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^4*SPD[p3, \
p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, \
p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3] - 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, \
p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]^2*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]^2*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] \
+ 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, \
p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, \
p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] \
+ FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] + \
MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - \
MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 + \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 \
- D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, \
p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p3, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p3, \
p3]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3]^2 + \
MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^4*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2))/((-3 + D)*(SPD[p1, \
p3]^2*SPD[p2, p2] - 2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + SPD[p1, \
p1]*SPD[p2, p3]^2 + SPD[p1, p2]^2*SPD[p3, p3] - SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3])^2)"}, {"fcstTIDPaVeDRankTwo-ID2", "TID[FVD[k,mu]FVD[k,nu]FAD\
[{k,m0},{k+p1,m0},{k+p2,m2},{k+p3,m3}],k]//FCE//Together", "(FAD[{k, m0}, {k \
+ p1, m0}, {k + p2, m2}, {k + p3, m3}]*(-2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^4 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^4 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] + \
2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + D*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 - 4*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 \
- 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 \
+ 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]^2 - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^4 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p3]^4 + 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p2] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2] - 4*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] \
- 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p2] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - \
MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p3]^4*SPD[p2, p2] - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p3]^4*SPD[p2, \
p2] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 \
- 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - 3*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 + MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^3*SPD[p2, p2]^2 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p3]^4*SPD[p2, \
p2]^2 - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] \
+ 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] + \
2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] - 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 8*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] - \
4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] \
+ D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, \
p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] \
- 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] \
+ D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p3] - 8*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 4*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, \
p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + \
6*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 \
+ 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 \
+ 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 8*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 4*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 \
- 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 4*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 \
- 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p3]^3 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p3]^4 - MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^4 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^4 - \
FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^4*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^4*SPD[p3, \
p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, \
p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3] - 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, \
p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]^2*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]^2*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] \
+ 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, \
p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, \
p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] \
+ FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] + \
MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - \
MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 + \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 \
- D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, \
p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p3, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p3, \
p3]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3]^2 + \
MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^4*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2))/((-3 + D)*(SPD[p1, \
p3]^2*SPD[p2, p2] - 2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + SPD[p1, \
p1]*SPD[p2, p3]^2 + SPD[p1, p2]^2*SPD[p3, p3] - SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3])^2)"}, {"fcstTIDPaVeDRankTwo-ID3", "TID[FVD[k,mu]FVD[k,nu]FAD\
[{k,m0},{k+p1,m0},{k+p2,m0},{k+p3,m3}],k]//FCE//Together", "(FAD[{k, m0}, {k \
+ p1, m0}, {k + p2, m0}, {k + p3, m3}]*(-2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^4 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^4 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] + \
2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + D*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 - 4*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 \
- 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 \
+ 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]^2 - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^4 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p3]^4 + 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p2] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2] - 4*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] \
- 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p2] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - \
MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p3]^4*SPD[p2, p2] - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p3]^4*SPD[p2, \
p2] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 \
- 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - 3*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 + MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^3*SPD[p2, p2]^2 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p3]^4*SPD[p2, \
p2]^2 - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] \
+ 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] + \
2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] - 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 8*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] - \
4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] \
+ D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, \
p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] \
- 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] \
+ D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p3] - 8*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 4*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, \
p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + \
6*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 \
+ 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 \
+ 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 8*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 4*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 \
- 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 4*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 \
- 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p3]^3 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p3]^4 - MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^4 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^4 - \
FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^4*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^4*SPD[p3, \
p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, \
p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3] - 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, \
p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]^2*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]^2*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] \
+ 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, \
p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, \
p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] \
+ FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] + \
MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - \
MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 + \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 \
- D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, \
p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p3, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p3, \
p3]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3]^2 + \
MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^4*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2))/((-3 + D)*(SPD[p1, \
p3]^2*SPD[p2, p2] - 2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + SPD[p1, \
p1]*SPD[p2, p3]^2 + SPD[p1, p2]^2*SPD[p3, p3] - SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3])^2)"}, {"fcstTIDPaVeDRankTwo-ID4", "TID[FVD[k,mu]FVD[k,nu]FAD\
[{k,m0},{k+p1,m1},{k+p2,m1},{k+p3,m1}],k]//FCE//Together", "(FAD[{k, m0}, {k \
+ p1, m1}, {k + p2, m1}, {k + p3, m1}]*(-2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^4 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^4 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] + \
2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + D*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 - 4*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 \
- 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 \
+ 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]^2 - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^4 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p3]^4 + 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p2] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2] - 4*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] \
- 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p2] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - \
MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p3]^4*SPD[p2, p2] - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p3]^4*SPD[p2, \
p2] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 \
- 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - 3*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 + MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^3*SPD[p2, p2]^2 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p3]^4*SPD[p2, \
p2]^2 - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] \
+ 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] + \
2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] - 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 8*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] - \
4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] \
+ D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, \
p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] \
- 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] \
+ D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p3] - 8*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 4*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, \
p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + \
6*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 \
+ 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 \
+ 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 8*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 4*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 \
- 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 4*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 \
- 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p3]^3 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p3]^4 - MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^4 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^4 - \
FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^4*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^4*SPD[p3, \
p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, \
p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3] - 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, \
p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]^2*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]^2*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] \
+ 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, \
p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, \
p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] \
+ FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] + \
MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - \
MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 + \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 \
- D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, \
p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p3, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p3, \
p3]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3]^2 + \
MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^4*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2))/((-3 + D)*(SPD[p1, \
p3]^2*SPD[p2, p2] - 2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + SPD[p1, \
p1]*SPD[p2, p3]^2 + SPD[p1, p2]^2*SPD[p3, p3] - SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3])^2)"}, {"fcstTIDPaVeDRankTwo-ID5", "TID[FVD[k,mu]FVD[k,nu]FAD\
[{k,0},{k+p1,m1},{k+p2,m2},{k+p3,m3}],k]//FCE//Together", "(FAD[k, {k + p1, \
m1}, {k + p2, m2}, {k + p3, m3}]*(-2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^4 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^4 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] + \
2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + D*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 - 4*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 \
- 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 \
+ 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]^2 - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^4 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p3]^4 + 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p2] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2] - 4*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] \
- 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p2] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - \
MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p3]^4*SPD[p2, p2] - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p3]^4*SPD[p2, \
p2] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 \
- 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - 3*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 + MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^3*SPD[p2, p2]^2 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p3]^4*SPD[p2, \
p2]^2 - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] \
+ 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] + \
2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] - 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 8*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] - \
4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] \
+ D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, \
p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] \
- 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] \
+ D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p3] - 8*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 4*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, \
p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + \
6*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 \
+ 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 \
+ 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 8*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 4*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 \
- 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 4*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 \
- 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p3]^3 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p3]^4 - MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^4 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^4 - \
FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^4*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^4*SPD[p3, \
p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, \
p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3] - 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, \
p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]^2*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]^2*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] \
+ 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, \
p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, \
p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] \
+ FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] + \
MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - \
MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 + \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 \
- D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, \
p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p3, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p3, \
p3]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3]^2 + \
MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^4*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2))/((-3 + D)*(SPD[p1, \
p3]^2*SPD[p2, p2] - 2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + SPD[p1, \
p1]*SPD[p2, p3]^2 + SPD[p1, p2]^2*SPD[p3, p3] - SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3])^2)"}, {"fcstTIDPaVeDRankTwo-ID6", "TID[FVD[k,mu]FVD[k,nu]FAD\
[{k,m0},{k+p1,0},{k+p2,m2},{k+p3,m3}],k]//FCE//Together", "(FAD[{k, m0}, k + \
p1, {k + p2, m2}, {k + p3, m3}]*(-2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^4 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^4 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] + \
2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + D*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 - 4*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 \
- 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 \
+ 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]^2 - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^4 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p3]^4 + 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p2] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2] - 4*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] \
- 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p2] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - \
MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p3]^4*SPD[p2, p2] - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p3]^4*SPD[p2, \
p2] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 \
- 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - 3*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 + MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^3*SPD[p2, p2]^2 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p3]^4*SPD[p2, \
p2]^2 - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] \
+ 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] + \
2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] - 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 8*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] - \
4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] \
+ D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, \
p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] \
- 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] \
+ D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p3] - 8*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 4*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, \
p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + \
6*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 \
+ 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 \
+ 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 8*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 4*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 \
- 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 4*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 \
- 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p3]^3 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p3]^4 - MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^4 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^4 - \
FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^4*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^4*SPD[p3, \
p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, \
p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3] - 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, \
p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]^2*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]^2*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] \
+ 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, \
p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, \
p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] \
+ FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] + \
MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - \
MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 + \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 \
- D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, \
p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p3, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p3, \
p3]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3]^2 + \
MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^4*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2))/((-3 + D)*(SPD[p1, \
p3]^2*SPD[p2, p2] - 2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + SPD[p1, \
p1]*SPD[p2, p3]^2 + SPD[p1, p2]^2*SPD[p3, p3] - SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3])^2)"}, {"fcstTIDPaVeDRankTwo-ID7", "TID[FVD[k,mu]FVD[k,nu]FAD\
[{k,0},{k+p1,0},{k+p2,m2},{k+p3,m3}],k]//FCE//Together", "(FAD[k, k + p1, {k \
+ p2, m2}, {k + p3, m3}]*(-2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^4 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^4 + 4*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] - 2*D*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] + 2*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + D*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 - 4*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 \
- 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 \
+ 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]^2 - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + \
2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^4 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p3]^4 + 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p2] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2] - 4*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] \
- 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p2] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - \
MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p3]^4*SPD[p2, p2] - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p3]^4*SPD[p2, \
p2] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 \
- 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - 3*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 + MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^3*SPD[p2, p2]^2 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p3]^4*SPD[p2, \
p2]^2 - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] \
+ 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] + \
2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] - 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 8*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] - \
4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] \
+ D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, \
p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] \
- 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] \
+ D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p3] - 8*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 4*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, \
p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + \
6*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 \
+ 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 \
+ 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 8*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 4*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 \
- 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 4*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 \
- 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p3]^3 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p3]^4 - MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^4 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^4 - \
FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^4*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^4*SPD[p3, \
p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, \
p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3] - 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, \
p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]^2*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]^2*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] \
+ 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, \
p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, \
p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] \
+ FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] + \
MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - \
MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 + \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 \
- D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, \
p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p3, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p3, \
p3]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3]^2 + \
MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^4*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2))/((-3 + D)*(SPD[p1, \
p3]^2*SPD[p2, p2] - 2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + SPD[p1, \
p1]*SPD[p2, p3]^2 + SPD[p1, p2]^2*SPD[p3, p3] - SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3])^2)"}, {"fcstTIDPaVeDRankTwo-ID8", "TID[FVD[k,mu]FVD[k,nu]FAD\
[{k,0},{k+p1,0},{k+p2,0},{k+p3,m3}],k]//FCE//Together", "(FAD[k, k + p2, k + \
p1, {k + p3, m3}]*(-2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^4 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^4 + 4*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] - 2*D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] + 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p2]^3*SPD[p1, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 + 2*D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 - 4*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 + 2*D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 - 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + 2*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^4 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p3]^4 + 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p2] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2] - 4*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] \
- 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p2] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - \
MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p3]^4*SPD[p2, p2] - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p3]^4*SPD[p2, \
p2] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 \
- 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - 3*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 + MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^3*SPD[p2, p2]^2 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p3]^4*SPD[p2, \
p2]^2 - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] \
+ 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] + \
2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] - 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 8*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] - \
4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] \
+ D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, \
p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] \
- 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] \
+ D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p3] - 8*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 4*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, \
p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + \
6*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 \
+ 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 \
+ 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 8*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 4*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 \
- 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 4*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 \
- 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p3]^3 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p3]^4 - MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^4 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^4 - \
FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^4*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^4*SPD[p3, \
p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, \
p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3] - 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, \
p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]^2*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]^2*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] \
+ 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, \
p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, \
p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] \
+ FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] + \
MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - \
MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 + \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 \
- D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, \
p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p3, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p3, \
p3]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3]^2 + \
MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^4*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2))/((-3 + D)*(SPD[p1, \
p3]^2*SPD[p2, p2] - 2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + SPD[p1, \
p1]*SPD[p2, p3]^2 + SPD[p1, p2]^2*SPD[p3, p3] - SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3])^2)"}, {"fcstTIDPaVeDRankTwo-ID9", "TID[FVD[k,mu]FVD[k,nu]FAD\
[{k,0},{k+p1,0},{k+p2,0},{k+p3,0}],k]//FCE//Together", "(FAD[k, k + p3, k + \
p2, k + p1]*(-2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^4 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^4 + 4*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] - 2*D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p1, p3] + 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p2]^3*SPD[p1, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^3*SPD[p1, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 + 2*D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 - 4*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 + 2*D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2 - 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2 + 2*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3 + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^3 - 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^4 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p3]^4 + 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p2] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2] - 4*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2] \
- 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p2] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] + 3*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2] \
- FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - \
MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p2] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p2] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p2] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p3]^4*SPD[p2, p2] - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p3]^4*SPD[p2, \
p2] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]^2 + \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2 \
- 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]^2 - 3*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p3]^2*SPD[p2, p2]^2 + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 + MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2 - FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, p2]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^3*SPD[p2, p2]^2 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p3]^4*SPD[p2, \
p2]^2 - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3] \
+ 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p2, p3] + \
2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p2, p3] + 6*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3] - 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] \
- 8*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] - \
4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3] \
+ D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, \
p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p2, p3] + 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p2]^3*SPD[p1, p3]*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3] \
- 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] \
+ D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p3] - 8*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p3] + 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3] + 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p3]^3*SPD[p2, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 2*MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, p3] + 4*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3] + 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] + \
6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3] \
+ 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, \
p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 6*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3] + \
6*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^3*SPD[p2, \
p2]*SPD[p2, p3] - 3*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p3]^2 + 6*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2 \
+ 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^2 - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p2]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p2, p3]^2 + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 4*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 \
+ 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 8*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^2 + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]^2 + 6*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 4*MTD[mu, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 2*D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 \
- 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 - 4*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, p3]^2 + 4*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p2, p3]^2 - FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - \
D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p2, p3]^2 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p3]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 + \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 \
- 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]^2 + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p3]^3 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p3]^3 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]^3 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p3]^3 + 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]^3 - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 + \
D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p3]^4 - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p3]^4 - MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^4 + MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^4 - \
FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3] + 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p3, p3] + 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] - 3*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p2]^3*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^4*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p2]^4*SPD[p3, \
p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] \
- D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, \
p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, \
p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p1, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p3, p3] - 4*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] + D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p3, p3] - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] - MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p1, p2]^2*SPD[p1, p3]^2*SPD[p3, p3] + FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - \
3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3] - 3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + \
2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] \
- FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]*SPD[p1, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, \
p2]^2*SPD[p1, p3]^2*SPD[p2, p2]*SPD[p3, p3] + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - 3*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] + D*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3] - \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]^2*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p1, nu]*SPD[k, p3]^2*SPD[p1, \
p1]*SPD[p2, p2]^2*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p1, \
p1]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] - \
D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p3]*SPD[p2, \
p2]^2*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + 2*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] \
+ 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, \
p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, \
p3]*SPD[p3, p3] + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p1]^2*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 4*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] \
+ FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p1, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + FVD[p1, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, \
p2]^3*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p3]*SPD[p3, p3] - 2*D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] \
- 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] + 6*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^2*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p1, p3]*SPD[p2, p3]*SPD[p3, p3] - \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p3, \
mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
3*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ D*FVD[p1, nu]*FVD[p3, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p3, nu]*SPD[k, p1]^2*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p3]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + D*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, \
p3]*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, \
p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
k]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] \
+ 4*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, \
p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + 3*FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - D*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p2, p3]^2*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] + \
MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, p1]^2*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] \
- 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] - 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] + 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p1, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, \
nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - \
MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 4*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - \
2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, \
p3] + 2*FVD[p1, mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, k]*SPD[p1, p1]^2*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p1, p1]^2*SPD[p3, p3]^2 + 4*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 2*D*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 + \
2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, p3]^2 \
- D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, p2]*SPD[p3, \
p3]^2 + 2*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, p1]*SPD[p1, \
p2]*SPD[p3, p3]^2 - D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p3, p3]^2 - 3*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p1]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p2]^2*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p2]^2*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]*SPD[p1, p2]^2*SPD[p3, p3]^2 - FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p2]^3*SPD[p3, p3]^2 - FVD[p1, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p1, p2]^3*SPD[p3, \
p3]^2 - 2*MTD[mu, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]^3*SPD[p3, p3]^2 + \
MTD[mu, nu]*SPD[k, k]*SPD[p1, p2]^4*SPD[p3, p3]^2 + FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - 3*FVD[p1, \
nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + \
D*FVD[p1, nu]*FVD[p2, mu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 3*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p1]*SPD[p2, p2]*SPD[p3, p3]^2 + D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]*SPD[k, \
p2]*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p1, nu]*SPD[k, \
p2]^2*SPD[p1, p1]*SPD[p2, p2]*SPD[p3, p3]^2 - FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 - MTD[mu, nu]*SPD[k, p2]^2*SPD[p1, \
p1]^2*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, nu]*FVD[p2, mu]*SPD[k, \
p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - D*FVD[p1, nu]*FVD[p2, \
mu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*FVD[p1, \
mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 - \
D*FVD[p1, mu]*FVD[p2, nu]*SPD[k, p1]^2*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 \
+ 4*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, p2]*SPD[p2, \
p2]*SPD[p3, p3]^2 - 2*D*FVD[p1, mu]*FVD[p1, nu]*SPD[k, p1]*SPD[k, p2]*SPD[p1, \
p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, nu]*FVD[p2, mu]*SPD[k, k]*SPD[p1, \
p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + 2*MTD[mu, nu]*SPD[k, \
p1]*SPD[k, p2]*SPD[p1, p1]*SPD[p1, p2]*SPD[p2, p2]*SPD[p3, p3]^2 + FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*MTD[mu, \
nu]*SPD[k, k]*SPD[p1, p1]*SPD[p1, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - 2*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 + D*FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2 - FVD[p1, \
mu]*FVD[p1, nu]*SPD[k, k]*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 - MTD[mu, \
nu]*SPD[k, p1]^2*SPD[p1, p1]*SPD[p2, p2]^2*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, \
k]*SPD[p1, p1]^2*SPD[p2, p2]^2*SPD[p3, p3]^2))/((-3 + D)*(SPD[p1, \
p3]^2*SPD[p2, p2] - 2*SPD[p1, p2]*SPD[p1, p3]*SPD[p2, p3] + SPD[p1, \
p1]*SPD[p2, p3]^2 + SPD[p1, p2]^2*SPD[p3, p3] - SPD[p1, p1]*SPD[p2, \
p2]*SPD[p3, p3])^2)"}, {"fcstTIDPaVeDRankTwo-ID10", "TID[FVD[k,mu]FVD[k,nu]FA\
D[{k,m0},{k,m1},{k+p2,m2},{k+p3,m3}],k]//FCE//Together", "(-(FAD[{k, m0}, {k \
+ p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2) \
+ D*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p2, p2]^2 + FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 - D*FAD[{k, m1}, {k + p2, m2}, {k \
+ p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 + 2*FAD[{k, \
m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] - \
2*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*D*FAD[{k, m1}, {k + p2, m2}, {k + \
p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, \
p3] + FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] - FAD[{k, \
m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] + D*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FAD[{k, m0}, {k + p2, \
m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, \
p3] - D*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] - FAD[{k, m1}, {k + p2, m2}, {k + \
p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + \
D*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - 2*FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + D*FAD[{k, m0}, {k + \
p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + \
2*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p2, p3]^2 - D*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + D*FAD[{k, m0}, {k + p2, m2}, {k \
+ p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 - \
D*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p3]^2 + D*FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 - D*FAD[{k, \
m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]^2 - 2*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + D*FAD[{k, m0}, {k + p2, m2}, {k \
+ p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + 2*FAD[{k, \
m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, \
p3]^2 - D*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]^2 - FAD[{k, \
m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]^2 + FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - FAD[{k, m1}, {k + p2, m2}, {k + \
p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - FAD[{k, m0}, {k \
+ p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p3]^3 + \
FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p2, p3]^3 - FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p3]^3 + FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p3]^3 - 2*FAD[{k, m0}, {k + \
p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^3 + \
2*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]^3 + FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, k]*SPD[p2, p3]^4 - FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p3]^4 + FAD[{k, m0}, {k + p2, m2}, {k + \
p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p2]*SPD[p3, p3] - \
FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + \
D*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*FAD[{k, m1}, {k + p2, m2}, {k + \
p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, \
p3] - D*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FAD[{k, m0}, {k + p2, \
m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p2]*SPD[p3, p3] + D*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*FAD[{k, \
m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + \
FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] - FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p3, p3] - FAD[{k, \
m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, \
p2]^2*SPD[p3, p3] + FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, p3] - FAD[{k, m0}, {k + p2, \
m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + \
FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, \
p2]^2*SPD[p3, p3] + FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FAD[{k, m0}, {k + \
p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] + D*FAD[{k, m1}, {k + \
p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] + FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FAD[{k, m0}, {k + \
p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] + D*FAD[{k, m1}, {k + \
p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] + 2*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FAD[{k, \
m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] + \
2*D*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] + FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*FAD[{k, m0}, {k + p2, m2}, {k + \
p3, m3}]*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, \
p3] - 2*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FAD[{k, m0}, {k + p2, \
m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p3]^2*SPD[p3, \
p3] - FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p2, p3]^2*SPD[p3, p3] + FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - FAD[{k, m1}, {k + \
p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - \
2*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] + 2*FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FAD[{k, \
m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, \
p3]^2 + D*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p3, p3]^2 + FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, p3]^2 - D*FAD[{k, m1}, {k + \
p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, p3]^2 - \
FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p2, p2]*SPD[p3, p3]^2 + FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p3, p3]^2 - FAD[{k, \
m0}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2]*SPD[p3, \
p3]^2 + FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, \
p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, p3]^2 - FAD[{k, m1}, {k + \
p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, \
p3]^2)/((-2 + D)*(m0 - m1)*(m0 + m1)*(SPD[p2, p3]^2 - SPD[p2, p2]*SPD[p3, \
p3])^2)"}, {"fcstTIDPaVeDRankTwo-ID11", "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,\
m0},{k+p2,m2},{k+p3,m3}],k]//FCE//Together", "(FAD[{k, m0}, {k, m0}, {k + p2, \
m2}, {k + p3, m3}]*(-(FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2) + \
D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 + 2*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] + FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, \
p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + D*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + \
D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p2, p3]^2 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p3]^3 - FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]^3 + MTD[mu, nu]*SPD[k, k]*SPD[p2, p3]^4 + FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, \
p2]^2*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, \
p3]^2*SPD[p3, p3] + MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - \
2*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p3, p3]^2 - FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p3, \
p3]^2 - MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, \
nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, p3]^2))/((-2 + D)*(SPD[p2, p3]^2 - \
SPD[p2, p2]*SPD[p3, p3])^2)"}, {"fcstTIDPaVeDRankTwo-ID12", "TID[FVD[k,mu]FVD\
[k,nu]FAD[{k,m0},{k,m0},{k+p2,m0},{k+p3,m3}],k]//FCE//Together", "(FAD[{k, \
m0}, {k, m0}, {k + p2, m0}, {k + p3, m3}]*(-(FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p2, p2]^2) + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 + \
2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] + \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + \
D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, \
p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p3]^3 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^3 + \
MTD[mu, nu]*SPD[k, k]*SPD[p2, p3]^4 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, p3] \
- MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, \
p3] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] \
- 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p3]^2*SPD[p3, p3] + MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, \
p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, p3]^2 - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p3, p3]^2 - MTD[mu, nu]*SPD[k, \
p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, \
p3]^2))/((-2 + D)*(SPD[p2, p3]^2 - SPD[p2, p2]*SPD[p3, p3])^2)"}, 
 {"fcstTIDPaVeDRankTwo-ID13", "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,m1},{k+p2,\
m1},{k+p3,m1}],k]//FCE//Together", "(-(FAD[{k, m0}, {k + p2, m1}, {k + p3, \
m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2) + D*FAD[{k, m0}, {k \
+ p2, m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 + \
FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p2, p2]^2 - D*FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 + 2*FAD[{k, m0}, {k + p2, m1}, {k \
+ p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, \
p3] - 2*D*FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*FAD[{k, m1}, {k + p2, \
m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p2]*SPD[p2, p3] + 2*D*FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] + FAD[{k, m0}, \
{k + p2, m1}, {k + p3, m1}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - D*FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] - FAD[{k, m1}, {k + p2, \
m1}, {k + p3, m1}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, \
p3] + D*FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FAD[{k, m0}, {k + p2, m1}, {k + \
p3, m1}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] - \
D*FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - FAD[{k, m1}, {k + p2, m1}, {k + p3, \
m1}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + D*FAD[{k, \
m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - 2*FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + D*FAD[{k, m0}, {k + p2, m1}, {k \
+ p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + 2*FAD[{k, \
m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]^2 - D*FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + D*FAD[{k, m0}, {k + p2, m1}, {k + p3, \
m1}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 - D*FAD[{k, \
m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]^2 + D*FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 - D*FAD[{k, m1}, {k + p2, \
m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p3]^2 - 2*FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + D*FAD[{k, m0}, {k + p2, m1}, {k + p3, \
m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + 2*FAD[{k, m1}, {k + \
p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p3]^2 - \
D*FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p2, p3]^2 + FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]^2 - FAD[{k, m1}, {k + p2, \
m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, \
p3]^2 + FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*MTD[mu, nu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - FAD[{k, m1}, {k + p2, m1}, {k + p3, \
m1}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - FAD[{k, m0}, {k + \
p2, m1}, {k + p3, m1}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p3]^3 + \
FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p2, p3]^3 - FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p3]^3 + FAD[{k, m1}, {k + p2, m1}, {k + p3, \
m1}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p3]^3 - 2*FAD[{k, m0}, {k + \
p2, m1}, {k + p3, m1}]*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^3 + \
2*FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]^3 + FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*MTD[mu, \
nu]*SPD[k, k]*SPD[p2, p3]^4 - FAD[{k, m1}, {k + p2, m1}, {k + p3, \
m1}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p3]^4 + FAD[{k, m0}, {k + p2, m1}, {k + \
p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p2]*SPD[p3, p3] - \
FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FAD[{k, m0}, {k + p2, m1}, {k + p3, \
m1}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + \
D*FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*FAD[{k, m1}, {k + p2, m1}, {k + \
p3, m1}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, \
p3] - D*FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FAD[{k, m0}, {k + p2, \
m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p2]*SPD[p3, p3] + D*FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + 2*FAD[{k, \
m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] - D*FAD[{k, m1}, {k + p2, m1}, {k + p3, \
m1}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + \
FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] - FAD[{k, m1}, {k + p2, m1}, {k + p3, \
m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p3, p3] - FAD[{k, \
m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, \
p2]^2*SPD[p3, p3] + FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, p3] - FAD[{k, m0}, {k + p2, \
m1}, {k + p3, m1}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + \
FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, \
p2]^2*SPD[p3, p3] + FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FAD[{k, m0}, {k + \
p2, m1}, {k + p3, m1}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] + D*FAD[{k, m1}, {k + \
p2, m1}, {k + p3, m1}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] + FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FAD[{k, m0}, {k + \
p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] + D*FAD[{k, m1}, {k + \
p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] + 2*FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FAD[{k, \
m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*FAD[{k, m1}, {k + p2, m1}, {k + p3, \
m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] + \
2*D*FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] + FAD[{k, m0}, {k + p2, m1}, {k + p3, \
m1}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FAD[{k, m0}, {k + p2, m1}, {k + p3, \
m1}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] - \
FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*FAD[{k, m0}, {k + p2, m1}, {k + \
p3, m1}]*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, \
p3] - 2*FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*MTD[mu, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FAD[{k, m0}, {k + p2, \
m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p3]^2*SPD[p3, \
p3] - FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p2, p3]^2*SPD[p3, p3] + FAD[{k, m0}, {k + p2, m1}, {k + p3, \
m1}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - FAD[{k, m1}, {k + \
p2, m1}, {k + p3, m1}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - \
2*FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] + 2*FAD[{k, m1}, {k + p2, m1}, {k + p3, \
m1}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FAD[{k, \
m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, \
p3]^2 + D*FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p3, p3]^2 + FAD[{k, m1}, {k + p2, m1}, {k + p3, \
m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, p3]^2 - D*FAD[{k, m1}, {k + \
p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, p3]^2 - \
FAD[{k, m0}, {k + p2, m1}, {k + p3, m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p2, p2]*SPD[p3, p3]^2 + FAD[{k, m1}, {k + p2, m1}, {k + p3, \
m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p3, p3]^2 - FAD[{k, \
m0}, {k + p2, m1}, {k + p3, m1}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2]*SPD[p3, \
p3]^2 + FAD[{k, m1}, {k + p2, m1}, {k + p3, m1}]*MTD[mu, nu]*SPD[k, \
p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + FAD[{k, m0}, {k + p2, m1}, {k + p3, \
m1}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, p3]^2 - FAD[{k, m1}, {k + \
p2, m1}, {k + p3, m1}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, \
p3]^2)/((-2 + D)*(m0 - m1)*(m0 + m1)*(SPD[p2, p3]^2 - SPD[p2, p2]*SPD[p3, \
p3])^2)"}, {"fcstTIDPaVeDRankTwo-ID14", "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,m\
1},{k+p2,m2},{k+p3,m3}],k]//FCE//Together", "(FAD[k, {k + p2, m2}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 - D*FAD[k, {k + p2, \
m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 - \
FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p2, p2]^2 + D*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 - 2*FAD[k, {k + p2, m2}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] + \
2*D*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FAD[{k, m1}, {k + p2, m2}, {k + \
p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, \
p3] - 2*D*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] - FAD[k, {k + p2, m2}, {k + \
p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + \
D*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] + FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FAD[{k, \
m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + D*FAD[k, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FAD[{k, \
m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - D*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 2*FAD[k, {k + p2, m2}, \
{k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 - D*FAD[k, \
{k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]^2 - 2*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + D*FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 - D*FAD[k, {k + p2, \
m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p3]^2 + D*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 - D*FAD[k, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 + D*FAD[{k, \
m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]^2 + 2*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p2, p3]^2 - D*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p3]^2 - 2*FAD[{k, m1}, {k + p2, m2}, {k \
+ p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + D*FAD[{k, \
m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, \
p3]^2 - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p2, p2]*SPD[p2, p3]^2 + FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]^2 - FAD[k, {k \
+ p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + \
FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p2, p3]^2 + FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p2, p3]^3 - FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p3]^3 + FAD[k, {k + p2, m2}, \
{k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p3]^3 - FAD[{k, m1}, \
{k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p3]^3 + \
2*FAD[k, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]^3 - 2*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^3 - FAD[k, {k + p2, m2}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p3]^4 + FAD[{k, m1}, {k + p2, m2}, {k + \
p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p3]^4 - FAD[k, {k + p2, m2}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p2]*SPD[p3, p3] + FAD[{k, \
m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 2*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FAD[k, {k + p2, m2}, {k \
+ p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, \
p3] - 2*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FAD[{k, m1}, {k + p2, \
m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p2]*SPD[p3, p3] + 2*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FAD[k, {k + p2, m2}, {k \
+ p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, \
p3] - 2*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FAD[{k, m1}, {k + p2, \
m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p2]*SPD[p3, p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p3, p3] + FAD[{k, m1}, {k + p2, m2}, {k + \
p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, \
p2]^2*SPD[p3, p3] - FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, p3] + FAD[k, {k + p2, m2}, {k \
+ p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] - FAD[{k, m1}, \
{k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]^2*SPD[p3, \
p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + D*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] + FAD[{k, m1}, {k + p2, \
m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, \
p3] - D*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - FAD[k, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] + D*FAD[k, \
{k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] + FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FAD[{k, m1}, {k + \
p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - 2*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FAD[k, {k + p2, m2}, \
{k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p3]*SPD[p3, p3] + 2*FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FAD[{k, \
m1}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]*SPD[p3, p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FAD[{k, m1}, \
{k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FAD[{k, m1}, \
{k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FAD[k, {k + p2, m2}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*FAD[{k, \
m1}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p3]^2*SPD[p3, p3] + FAD[{k, m1}, {k + p2, \
m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p3]^2*SPD[p3, \
p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, \
p3]^2*SPD[p3, p3] + FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 2*FAD[k, {k + p2, m2}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*FAD[{k, \
m1}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] + FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p3, p3]^2 - D*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, p3]^2 - FAD[{k, m1}, {k + p2, m2}, {k + \
p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, p3]^2 + D*FAD[{k, m1}, \
{k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, \
p3]^2 + FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p2, p2]*SPD[p3, p3]^2 - FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p3, p3]^2 + FAD[k, {k \
+ p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - \
FAD[{k, m1}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, \
p2]*SPD[p3, p3]^2 - FAD[k, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, \
k]*SPD[p2, p2]^2*SPD[p3, p3]^2 + FAD[{k, m1}, {k + p2, m2}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, p3]^2)/((-2 + \
D)*m1^2*(SPD[p2, p3]^2 - SPD[p2, p2]*SPD[p3, p3])^2)"}, 
 {"fcstTIDPaVeDRankTwo-ID15", "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,0},{k+p2,m\
2},{k+p3,m3}],k]//FCE//Together", "(FAD[k, {k + p2, m2}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 - D*FAD[k, {k + p2, \
m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 - \
FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p2, p2]^2 + D*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 - 2*FAD[k, {k + p2, m2}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] + \
2*D*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] + 2*FAD[{k, m0}, {k + p2, m2}, {k + \
p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, \
p3] - 2*D*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] - FAD[k, {k + p2, m2}, {k + \
p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + \
D*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] + FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FAD[{k, \
m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + D*FAD[k, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FAD[{k, \
m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - D*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + 2*FAD[k, {k + p2, m2}, \
{k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 - D*FAD[k, \
{k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]^2 - 2*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + D*FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 - D*FAD[k, {k + p2, \
m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p3]^2 + D*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 - D*FAD[k, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 + D*FAD[{k, \
m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]^2 + 2*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p2, p3]^2 - D*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p3]^2 - 2*FAD[{k, m0}, {k + p2, m2}, {k \
+ p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + D*FAD[{k, \
m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, \
p3]^2 - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p2, p2]*SPD[p2, p3]^2 + FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]^2 - FAD[k, {k \
+ p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 + \
FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p2, p3]^2 + FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, k]*SPD[p2, p3]^3 - FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p3]^3 + FAD[k, {k + p2, m2}, \
{k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p3]^3 - FAD[{k, m0}, \
{k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p3]^3 + \
2*FAD[k, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]^3 - 2*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^3 - FAD[k, {k + p2, m2}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p3]^4 + FAD[{k, m0}, {k + p2, m2}, {k + \
p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p3]^4 - FAD[k, {k + p2, m2}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p2]*SPD[p3, p3] + FAD[{k, \
m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p2]*SPD[p3, p3] + 2*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FAD[k, {k + p2, m2}, {k \
+ p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, \
p3] - 2*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FAD[{k, m0}, {k + p2, \
m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p2]*SPD[p3, p3] + 2*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] - D*FAD[k, {k + p2, m2}, {k \
+ p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, \
p3] - 2*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FAD[{k, m0}, {k + p2, \
m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p2]*SPD[p3, p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p3, p3] + FAD[{k, m0}, {k + p2, m2}, {k + \
p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p3, p3] + \
FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, \
p2]^2*SPD[p3, p3] - FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, p3] + FAD[k, {k + p2, m2}, {k \
+ p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] - FAD[{k, m0}, \
{k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]^2*SPD[p3, \
p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + D*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] + FAD[{k, m0}, {k + p2, \
m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, \
p3] - D*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - FAD[k, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] + D*FAD[k, \
{k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] + FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FAD[{k, m0}, {k + \
p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - 2*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] + 2*D*FAD[k, {k + p2, m2}, \
{k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p3]*SPD[p3, p3] + 2*FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FAD[{k, \
m0}, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]*SPD[p3, p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FAD[{k, m0}, \
{k + p2, m2}, {k + p3, m3}]*FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + FAD[{k, m0}, \
{k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - 2*FAD[k, {k + p2, m2}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + 2*FAD[{k, \
m0}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p3]^2*SPD[p3, p3] + FAD[{k, m0}, {k + p2, \
m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p3]^2*SPD[p3, \
p3] - FAD[k, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, \
p3]^2*SPD[p3, p3] + FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] + 2*FAD[k, {k + p2, m2}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - 2*FAD[{k, \
m0}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, \
p3]^2*SPD[p3, p3] + FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2*SPD[p3, p3]^2 - D*FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, p3]^2 - FAD[{k, m0}, {k + p2, m2}, {k + \
p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, p3]^2 + D*FAD[{k, m0}, \
{k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, \
p3]^2 + FAD[k, {k + p2, m2}, {k + p3, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p2, p2]*SPD[p3, p3]^2 - FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p3, p3]^2 + FAD[k, {k \
+ p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 - \
FAD[{k, m0}, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, \
p2]*SPD[p3, p3]^2 - FAD[k, {k + p2, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, \
k]*SPD[p2, p2]^2*SPD[p3, p3]^2 + FAD[{k, m0}, {k + p2, m2}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, p3]^2)/((-2 + \
D)*m0^2*(SPD[p2, p3]^2 - SPD[p2, p2]*SPD[p3, p3])^2)"}, 
 {"fcstTIDPaVeDRankTwo-ID16", "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,0},{k+p2,m2\
},{k+p3,m3}],k]//FCE//Together", "(FAD[k, k, {k + p2, m2}, {k + p3, \
m3}]*(-(FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2) + D*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 + 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] - 2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, \
p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + D*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + \
D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p2, p3]^2 - FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p3]^3 - FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]^3 + MTD[mu, nu]*SPD[k, k]*SPD[p2, p3]^4 + FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, \
p2]^2*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]*SPD[p3, p3] - 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, \
p2]*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, \
p3]^2*SPD[p3, p3] + MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - \
2*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2*SPD[p3, p3]^2 - FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p3, \
p3]^2 - MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, \
nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, p3]^2))/((-2 + D)*(SPD[p2, p3]^2 - \
SPD[p2, p2]*SPD[p3, p3])^2)"}, {"fcstTIDPaVeDRankTwo-ID17", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,0},{k+p2,0},{k+p3,m3}],k]//FCE//Togethe\
r", "(FAD[k, k, k + p2, {k + p3, m3}]*(-(FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p2, p2]^2) + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 + \
2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] + \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + \
D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, \
p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p3]^3 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^3 + \
MTD[mu, nu]*SPD[k, k]*SPD[p2, p3]^4 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, p3] \
- MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, \
p3] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] \
- 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p3]^2*SPD[p3, p3] + MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, \
p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, p3]^2 - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p3, p3]^2 - MTD[mu, nu]*SPD[k, \
p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, \
p3]^2))/((-2 + D)*(SPD[p2, p3]^2 - SPD[p2, p2]*SPD[p3, p3])^2)"}, 
 {"fcstTIDPaVeDRankTwo-ID18", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,0},{k+p2,0},{k+p3,0}],k]//FCE//Together\
", "(FAD[k, k, k + p3, k + p2]*(-(FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p2, p2]^2) + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2*SPD[p2, p2]^2 + \
2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] - \
2*D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3] + \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] + FVD[p2, mu]*FVD[p3, \
nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
p3]^2*SPD[p2, p2]*SPD[p2, p3] - 2*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p2, p3]^2 + D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]^2 + \
D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 + D*FVD[p2, \
mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^2 - 2*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p3]^2*SPD[p2, p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p3]^2*SPD[p2, p3]^2 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, \
p3]^2 + MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]*SPD[p2, p3]^2 - FVD[p2, \
nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p3]^3 - FVD[p2, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p2, p3]^3 - 2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]^3 + \
MTD[mu, nu]*SPD[k, k]*SPD[p2, p3]^4 + FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p2]^2*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] - 2*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] + D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]*SPD[k, \
p3]*SPD[p2, p2]*SPD[p3, p3] + FVD[p2, mu]*FVD[p2, nu]*SPD[k, p3]^2*SPD[p2, \
p2]*SPD[p3, p3] - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, p3] \
- MTD[mu, nu]*SPD[k, p3]^2*SPD[p2, p2]^2*SPD[p3, p3] + FVD[p2, nu]*FVD[p3, \
mu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, p3] - D*FVD[p2, nu]*FVD[p3, mu]*SPD[k, \
p2]^2*SPD[p2, p3]*SPD[p3, p3] + FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, \
p3]*SPD[p3, p3] - D*FVD[p2, mu]*FVD[p3, nu]*SPD[k, p2]^2*SPD[p2, p3]*SPD[p3, \
p3] + 2*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] \
- 2*D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p2, nu]*FVD[p3, mu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
2*MTD[mu, nu]*SPD[k, p2]*SPD[k, p3]*SPD[p2, p2]*SPD[p2, p3]*SPD[p3, p3] + \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p3]^2*SPD[p3, p3] + MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p2, p3]^2*SPD[p3, p3] - 2*MTD[mu, nu]*SPD[k, k]*SPD[p2, \
p2]*SPD[p2, p3]^2*SPD[p3, p3] - FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, \
p3]^2 + D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2*SPD[p3, p3]^2 - FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2]*SPD[p3, p3]^2 - MTD[mu, nu]*SPD[k, \
p2]^2*SPD[p2, p2]*SPD[p3, p3]^2 + MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2*SPD[p3, \
p3]^2))/((-2 + D)*(SPD[p2, p3]^2 - SPD[p2, p2]*SPD[p3, p3])^2)"}, 
 {"fcstTIDPaVeDRankTwo-ID19", "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,m1},{k,m2}\
,{k+p3,m3}],k]//FCE//Together", "(D*m1^2*FAD[{k, m0}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p3]^2 - D*m2^2*FAD[{k, m0}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p3]^2 - D*m0^2*FAD[{k, m1}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p3]^2 + D*m2^2*FAD[{k, m1}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p3]^2 + D*m0^2*FAD[{k, m2}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p3]^2 - D*m1^2*FAD[{k, m2}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, p3]^2 - m1^2*FAD[{k, m0}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] + m2^2*FAD[{k, m0}, {k + p3, \
m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] + m0^2*FAD[{k, m1}, {k + \
p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] - m2^2*FAD[{k, m1}, {k \
+ p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] - m0^2*FAD[{k, m2}, \
{k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] + m1^2*FAD[{k, \
m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] - \
m1^2*FAD[{k, m0}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] + \
m2^2*FAD[{k, m0}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] + \
m0^2*FAD[{k, m1}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] - \
m2^2*FAD[{k, m1}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] - \
m0^2*FAD[{k, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] + \
m1^2*FAD[{k, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] + \
m1^2*FAD[{k, m0}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2 - \
m2^2*FAD[{k, m0}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2 - \
m0^2*FAD[{k, m1}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2 + \
m2^2*FAD[{k, m1}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2 + \
m0^2*FAD[{k, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2 - \
m1^2*FAD[{k, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2)/((-1 + \
D)*(m0 - m1)*(m0 + m1)*(m0 - m2)*(m1 - m2)*(m0 + m2)*(m1 + m2)*SPD[p3, \
p3]^2)"}, {"fcstTIDPaVeDRankTwo-ID20", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,m0},{k,m2},{k+p3,m3}],k]//FCE//Togethe\
r", "(-(D*FAD[{k, m0}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2) + \
D*FAD[{k, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 + \
D*m0^2*FAD[{k, m0}, {k, m0}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2 - D*m2^2*FAD[{k, m0}, {k, m0}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p3]^2 + FAD[{k, m0}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p3, p3] - FAD[{k, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p3, p3] - m0^2*FAD[{k, m0}, {k, m0}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p3, p3] + m2^2*FAD[{k, m0}, {k, m0}, {k + p3, m3}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] + FAD[{k, m0}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p3, p3] - FAD[{k, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, \
p3]^2*SPD[p3, p3] - m0^2*FAD[{k, m0}, {k, m0}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p3, p3] + m2^2*FAD[{k, m0}, {k, m0}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] - FAD[{k, m0}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2 + FAD[{k, m2}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, k]*SPD[p3, p3]^2 + m0^2*FAD[{k, m0}, {k, m0}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2 - m2^2*FAD[{k, m0}, {k, m0}, {k + \
p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2)/((-1 + D)*(m0 - m2)^2*(m0 + \
m2)^2*SPD[p3, p3]^2)"}, {"fcstTIDPaVeDRankTwo-ID21", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,m0},{k,m0},{k+p3,m3}],k]//FCE//Togethe\
r", "(FAD[{k, m0}, {k, m0}, {k, m0}, {k + p3, m3}]*(D*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p3]^2 - FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] - MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p3, p3] + MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2))/((-1 + \
D)*SPD[p3, p3]^2)"}, {"fcstTIDPaVeDRankTwo-ID22", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,m1},{k,m1},{k+p3,m1}],k]//FCE//Togethe\
r", "(D*FAD[{k, m0}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 - \
D*FAD[{k, m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 - \
D*m0^2*FAD[{k, m1}, {k, m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
p3]^2 + D*m1^2*FAD[{k, m1}, {k, m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, p3]^2 - FAD[{k, m0}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p3, p3] + FAD[{k, m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, \
k]*SPD[p3, p3] + m0^2*FAD[{k, m1}, {k, m1}, {k + p3, m1}]*FVD[p3, mu]*FVD[p3, \
nu]*SPD[k, k]*SPD[p3, p3] - m1^2*FAD[{k, m1}, {k, m1}, {k + p3, m1}]*FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] - FAD[{k, m0}, {k + p3, m1}]*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p3, p3] + FAD[{k, m1}, {k + p3, m1}]*MTD[mu, nu]*SPD[k, \
p3]^2*SPD[p3, p3] + m0^2*FAD[{k, m1}, {k, m1}, {k + p3, m1}]*MTD[mu, \
nu]*SPD[k, p3]^2*SPD[p3, p3] - m1^2*FAD[{k, m1}, {k, m1}, {k + p3, \
m1}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] + FAD[{k, m0}, {k + p3, \
m1}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2 - FAD[{k, m1}, {k + p3, m1}]*MTD[mu, \
nu]*SPD[k, k]*SPD[p3, p3]^2 - m0^2*FAD[{k, m1}, {k, m1}, {k + p3, \
m1}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2 + m1^2*FAD[{k, m1}, {k, m1}, {k + \
p3, m1}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2)/((-1 + D)*(m0 - m1)^2*(m0 + \
m1)^2*SPD[p3, p3]^2)"}, {"fcstTIDPaVeDRankTwo-ID23", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,m1},{k,m2},{k+p3,m3}],k]//FCE//Together\
", "(D*m1^2*FAD[k, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 - \
D*m2^2*FAD[k, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 + \
D*m2^2*FAD[{k, m1}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 - \
D*m1^2*FAD[{k, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 - \
m1^2*FAD[k, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] + \
m2^2*FAD[k, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] - \
m2^2*FAD[{k, m1}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] \
+ m1^2*FAD[{k, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, \
p3] - m1^2*FAD[k, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] + \
m2^2*FAD[k, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] - m2^2*FAD[{k, \
m1}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] + m1^2*FAD[{k, m2}, \
{k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] + m1^2*FAD[k, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2 - m2^2*FAD[k, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, k]*SPD[p3, p3]^2 + m2^2*FAD[{k, m1}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, k]*SPD[p3, p3]^2 - m1^2*FAD[{k, m2}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, k]*SPD[p3, p3]^2)/((-1 + D)*m1^2*(m1 - m2)*m2^2*(m1 + m2)*SPD[p3, \
p3]^2)"}, {"fcstTIDPaVeDRankTwo-ID24", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,0},{k,m2},{k+p3,m3}],k]//FCE//Together\
", "(D*m0^2*FAD[k, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 - \
D*m2^2*FAD[k, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 + \
D*m2^2*FAD[{k, m0}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 - \
D*m0^2*FAD[{k, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 - \
m0^2*FAD[k, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] + \
m2^2*FAD[k, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] - \
m2^2*FAD[{k, m0}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] \
+ m0^2*FAD[{k, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, \
p3] - m0^2*FAD[k, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] + \
m2^2*FAD[k, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] - m2^2*FAD[{k, \
m0}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] + m0^2*FAD[{k, m2}, \
{k + p3, m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] + m0^2*FAD[k, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2 - m2^2*FAD[k, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, k]*SPD[p3, p3]^2 + m2^2*FAD[{k, m0}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, k]*SPD[p3, p3]^2 - m0^2*FAD[{k, m2}, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, k]*SPD[p3, p3]^2)/((-1 + D)*m0^2*(m0 - m2)*m2^2*(m0 + m2)*SPD[p3, \
p3]^2)"}, {"fcstTIDPaVeDRankTwo-ID25", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,0},{k,m2},{k+p3,m3}],k]//FCE//Together"\
, "(-(D*FAD[k, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2) + \
D*FAD[{k, m2}, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 - \
D*m2^2*FAD[k, k, {k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 + FAD[k, \
{k + p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] - FAD[{k, m2}, {k \
+ p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] + m2^2*FAD[k, k, {k \
+ p3, m3}]*FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] + FAD[k, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] - FAD[{k, m2}, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] + m2^2*FAD[k, k, {k + p3, \
m3}]*MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] - FAD[k, {k + p3, m3}]*MTD[mu, \
nu]*SPD[k, k]*SPD[p3, p3]^2 + FAD[{k, m2}, {k + p3, m3}]*MTD[mu, nu]*SPD[k, \
k]*SPD[p3, p3]^2 - m2^2*FAD[k, k, {k + p3, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p3, \
p3]^2)/((-1 + D)*m2^4*SPD[p3, p3]^2)"}, {"fcstTIDPaVeDRankTwo-ID26", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,0},{k,0},{k+p3,m3}],k]//FCE//Together", 
  "(FAD[k, k, k, {k + p3, m3}]*(D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 - \
FVD[p3, mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] - MTD[mu, nu]*SPD[k, \
p3]^2*SPD[p3, p3] + MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2))/((-1 + D)*SPD[p3, \
p3]^2)"}, {"fcstTIDPaVeDRankTwo-ID27", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,0},{k,0},{k+p3,0}],k]//FCE//Together", 
  "(FAD[k, k, k, k + p3]*(D*FVD[p3, mu]*FVD[p3, nu]*SPD[k, p3]^2 - FVD[p3, \
mu]*FVD[p3, nu]*SPD[k, k]*SPD[p3, p3] - MTD[mu, nu]*SPD[k, p3]^2*SPD[p3, p3] \
+ MTD[mu, nu]*SPD[k, k]*SPD[p3, p3]^2))/((-1 + D)*SPD[p3, p3]^2)"}, 
 {"fcstTIDPaVeDRankTwo-ID28", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,m1},{k,m2},{k,m3}],k]//FCE//Together", 
  "(m1^4*m2^2*FAD[{k, m0}]*MTD[mu, nu]*SPD[k, k] - m1^2*m2^4*FAD[{k, \
m0}]*MTD[mu, nu]*SPD[k, k] - m1^4*m3^2*FAD[{k, m0}]*MTD[mu, nu]*SPD[k, k] + \
m2^4*m3^2*FAD[{k, m0}]*MTD[mu, nu]*SPD[k, k] + m1^2*m3^4*FAD[{k, m0}]*MTD[mu, \
nu]*SPD[k, k] - m2^2*m3^4*FAD[{k, m0}]*MTD[mu, nu]*SPD[k, k] - \
m0^4*m2^2*FAD[{k, m1}]*MTD[mu, nu]*SPD[k, k] + m0^2*m2^4*FAD[{k, m1}]*MTD[mu, \
nu]*SPD[k, k] + m0^4*m3^2*FAD[{k, m1}]*MTD[mu, nu]*SPD[k, k] - \
m2^4*m3^2*FAD[{k, m1}]*MTD[mu, nu]*SPD[k, k] - m0^2*m3^4*FAD[{k, m1}]*MTD[mu, \
nu]*SPD[k, k] + m2^2*m3^4*FAD[{k, m1}]*MTD[mu, nu]*SPD[k, k] + \
m0^4*m1^2*FAD[{k, m2}]*MTD[mu, nu]*SPD[k, k] - m0^2*m1^4*FAD[{k, m2}]*MTD[mu, \
nu]*SPD[k, k] - m0^4*m3^2*FAD[{k, m2}]*MTD[mu, nu]*SPD[k, k] + \
m1^4*m3^2*FAD[{k, m2}]*MTD[mu, nu]*SPD[k, k] + m0^2*m3^4*FAD[{k, m2}]*MTD[mu, \
nu]*SPD[k, k] - m1^2*m3^4*FAD[{k, m2}]*MTD[mu, nu]*SPD[k, k] - \
m0^4*m1^2*FAD[{k, m3}]*MTD[mu, nu]*SPD[k, k] + m0^2*m1^4*FAD[{k, m3}]*MTD[mu, \
nu]*SPD[k, k] + m0^4*m2^2*FAD[{k, m3}]*MTD[mu, nu]*SPD[k, k] - \
m1^4*m2^2*FAD[{k, m3}]*MTD[mu, nu]*SPD[k, k] - m0^2*m2^4*FAD[{k, m3}]*MTD[mu, \
nu]*SPD[k, k] + m1^2*m2^4*FAD[{k, m3}]*MTD[mu, nu]*SPD[k, k])/(D*(m0 - \
m1)*(m0 + m1)*(m0 - m2)*(m1 - m2)*(m0 + m2)*(m1 + m2)*(m0 - m3)*(m1 - m3)*(m2 \
- m3)*(m0 + m3)*(m1 + m3)*(m2 + m3))"}, {"fcstTIDPaVeDRankTwo-ID29", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,m0},{k,m2},{k,m3}],k]//FCE//Together", 
  "(-2*m0^2*m2^2*FAD[{k, m0}]*MTD[mu, nu]*SPD[k, k] + m2^4*FAD[{k, \
m0}]*MTD[mu, nu]*SPD[k, k] + 2*m0^2*m3^2*FAD[{k, m0}]*MTD[mu, nu]*SPD[k, k] - \
m3^4*FAD[{k, m0}]*MTD[mu, nu]*SPD[k, k] + m0^4*FAD[{k, m2}]*MTD[mu, \
nu]*SPD[k, k] - 2*m0^2*m3^2*FAD[{k, m2}]*MTD[mu, nu]*SPD[k, k] + m3^4*FAD[{k, \
m2}]*MTD[mu, nu]*SPD[k, k] - m0^4*FAD[{k, m3}]*MTD[mu, nu]*SPD[k, k] + \
2*m0^2*m2^2*FAD[{k, m3}]*MTD[mu, nu]*SPD[k, k] - m2^4*FAD[{k, m3}]*MTD[mu, \
nu]*SPD[k, k] + m0^4*m2^2*FAD[{k, m0}, {k, m0}]*MTD[mu, nu]*SPD[k, k] - \
m0^2*m2^4*FAD[{k, m0}, {k, m0}]*MTD[mu, nu]*SPD[k, k] - m0^4*m3^2*FAD[{k, \
m0}, {k, m0}]*MTD[mu, nu]*SPD[k, k] + m2^4*m3^2*FAD[{k, m0}, {k, m0}]*MTD[mu, \
nu]*SPD[k, k] + m0^2*m3^4*FAD[{k, m0}, {k, m0}]*MTD[mu, nu]*SPD[k, k] - \
m2^2*m3^4*FAD[{k, m0}, {k, m0}]*MTD[mu, nu]*SPD[k, k])/(D*(m0 - m2)^2*(m0 + \
m2)^2*(m0 - m3)^2*(m2 - m3)*(m0 + m3)^2*(m2 + m3))"}, 
 {"fcstTIDPaVeDRankTwo-ID30", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,m0},{k,m0},{k,m3}],k]//FCE//Together", 
  "(FAD[{k, m0}]*MTD[mu, nu]*SPD[k, k] - FAD[{k, m3}]*MTD[mu, nu]*SPD[k, k] - \
m0^2*FAD[{k, m0}, {k, m0}]*MTD[mu, nu]*SPD[k, k] + m3^2*FAD[{k, m0}, {k, \
m0}]*MTD[mu, nu]*SPD[k, k] + m0^4*FAD[{k, m0}, {k, m0}, {k, m0}]*MTD[mu, \
nu]*SPD[k, k] - 2*m0^2*m3^2*FAD[{k, m0}, {k, m0}, {k, m0}]*MTD[mu, nu]*SPD[k, \
k] + m3^4*FAD[{k, m0}, {k, m0}, {k, m0}]*MTD[mu, nu]*SPD[k, k])/(D*(m0 - \
m3)^3*(m0 + m3)^3)"}, {"fcstTIDPaVeDRankTwo-ID31", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,m1},{k,m1},{k,m1}],k]//FCE//Together", 
  "(FAD[{k, m0}]*MTD[mu, nu]*SPD[k, k] - FAD[{k, m1}]*MTD[mu, nu]*SPD[k, k] - \
m0^2*FAD[{k, m1}, {k, m1}]*MTD[mu, nu]*SPD[k, k] + m1^2*FAD[{k, m1}, {k, \
m1}]*MTD[mu, nu]*SPD[k, k] - m0^4*FAD[{k, m1}, {k, m1}, {k, m1}]*MTD[mu, \
nu]*SPD[k, k] + 2*m0^2*m1^2*FAD[{k, m1}, {k, m1}, {k, m1}]*MTD[mu, nu]*SPD[k, \
k] - m1^4*FAD[{k, m1}, {k, m1}, {k, m1}]*MTD[mu, nu]*SPD[k, k])/(D*(m0 - \
m1)^3*(m0 + m1)^3)"}, {"fcstTIDPaVeDRankTwo-ID32", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,m1},{k,m2},{k,m3}],k]//FCE//Together", 
  "(-(m1^4*m2^2*FAD[k]*MTD[mu, nu]*SPD[k, k]) + m1^2*m2^4*FAD[k]*MTD[mu, \
nu]*SPD[k, k] + m1^4*m3^2*FAD[k]*MTD[mu, nu]*SPD[k, k] - \
m2^4*m3^2*FAD[k]*MTD[mu, nu]*SPD[k, k] - m1^2*m3^4*FAD[k]*MTD[mu, nu]*SPD[k, \
k] + m2^2*m3^4*FAD[k]*MTD[mu, nu]*SPD[k, k] + m2^4*m3^2*FAD[{k, m1}]*MTD[mu, \
nu]*SPD[k, k] - m2^2*m3^4*FAD[{k, m1}]*MTD[mu, nu]*SPD[k, k] - \
m1^4*m3^2*FAD[{k, m2}]*MTD[mu, nu]*SPD[k, k] + m1^2*m3^4*FAD[{k, m2}]*MTD[mu, \
nu]*SPD[k, k] + m1^4*m2^2*FAD[{k, m3}]*MTD[mu, nu]*SPD[k, k] - \
m1^2*m2^4*FAD[{k, m3}]*MTD[mu, nu]*SPD[k, k])/(D*m1^2*(m1 - m2)*m2^2*(m1 + \
m2)*(m1 - m3)*(m2 - m3)*m3^2*(m1 + m3)*(m2 + m3))"}, 
 {"fcstTIDPaVeDRankTwo-ID33", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,0},{k,m2},{k,m3}],k]//FCE//Together", 
  "(-(m0^4*m2^2*FAD[k]*MTD[mu, nu]*SPD[k, k]) + m0^2*m2^4*FAD[k]*MTD[mu, \
nu]*SPD[k, k] + m0^4*m3^2*FAD[k]*MTD[mu, nu]*SPD[k, k] - \
m2^4*m3^2*FAD[k]*MTD[mu, nu]*SPD[k, k] - m0^2*m3^4*FAD[k]*MTD[mu, nu]*SPD[k, \
k] + m2^2*m3^4*FAD[k]*MTD[mu, nu]*SPD[k, k] + m2^4*m3^2*FAD[{k, m0}]*MTD[mu, \
nu]*SPD[k, k] - m2^2*m3^4*FAD[{k, m0}]*MTD[mu, nu]*SPD[k, k] - \
m0^4*m3^2*FAD[{k, m2}]*MTD[mu, nu]*SPD[k, k] + m0^2*m3^4*FAD[{k, m2}]*MTD[mu, \
nu]*SPD[k, k] + m0^4*m2^2*FAD[{k, m3}]*MTD[mu, nu]*SPD[k, k] - \
m0^2*m2^4*FAD[{k, m3}]*MTD[mu, nu]*SPD[k, k])/(D*m0^2*(m0 - m2)*m2^2*(m0 + \
m2)*(m0 - m3)*(m2 - m3)*m3^2*(m0 + m3)*(m2 + m3))"}, 
 {"fcstTIDPaVeDRankTwo-ID34", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,0},{k,m2},{k,m3}],k]//FCE//Together", "\
(m2^4*FAD[k]*MTD[mu, nu]*SPD[k, k] - m3^4*FAD[k]*MTD[mu, nu]*SPD[k, k] + \
m3^4*FAD[{k, m2}]*MTD[mu, nu]*SPD[k, k] - m2^4*FAD[{k, m3}]*MTD[mu, \
nu]*SPD[k, k] + m2^4*m3^2*FAD[k, k]*MTD[mu, nu]*SPD[k, k] - m2^2*m3^4*FAD[k, \
k]*MTD[mu, nu]*SPD[k, k])/(D*m2^4*(m2 - m3)*m3^4*(m2 + m3))"}, 
 {"fcstTIDPaVeDRankTwo-ID35", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,0},{k,0},{k,m3}],k]//FCE//Together", "(\
-(FAD[k]*MTD[mu, nu]*SPD[k, k]) + FAD[{k, m3}]*MTD[mu, nu]*SPD[k, k] - \
m3^2*FAD[k, k]*MTD[mu, nu]*SPD[k, k] - m3^4*FAD[k, k, k]*MTD[mu, nu]*SPD[k, \
k])/(D*m3^6)"}, {"fcstTIDPaVeDRankTwo-ID36", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,0},{k,0},{k,0}],k]//FCE//Together", 
  "(FAD[k, k, k, k]*MTD[mu, nu]*SPD[k, k])/D"}, 
 {"fcstTIDPaVeDRankTwo-ID37", "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,m1},{k+p2,\
m2},{k+p2,m3}],k]//FCE//Together", "(D*FAD[{k, m0}, {k + p2, m2}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2 - D*FAD[{k, m0}, {k + p2, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2 - D*FAD[{k, m1}, {k + p2, m2}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2 + D*FAD[{k, m1}, {k + p2, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2 - FAD[{k, m0}, {k + p2, m2}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p2, p2] + FAD[{k, m0}, {k + p2, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p2, p2] + FAD[{k, m1}, {k + p2, m2}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p2, p2] - FAD[{k, m1}, {k + p2, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p2, p2] - FAD[{k, m0}, {k + p2, m2}]*MTD[mu, nu]*SPD[k, \
p2]^2*SPD[p2, p2] + FAD[{k, m0}, {k + p2, m3}]*MTD[mu, nu]*SPD[k, \
p2]^2*SPD[p2, p2] + FAD[{k, m1}, {k + p2, m2}]*MTD[mu, nu]*SPD[k, \
p2]^2*SPD[p2, p2] - FAD[{k, m1}, {k + p2, m3}]*MTD[mu, nu]*SPD[k, \
p2]^2*SPD[p2, p2] + FAD[{k, m0}, {k + p2, m2}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, \
p2]^2 - FAD[{k, m0}, {k + p2, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2 - \
FAD[{k, m1}, {k + p2, m2}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2 + FAD[{k, m1}, \
{k + p2, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2)/((-1 + D)*(m0 - m1)*(m0 + \
m1)*(m2 - m3)*(m2 + m3)*SPD[p2, p2]^2)"}, {"fcstTIDPaVeDRankTwo-ID38", "TID[F\
VD[k,mu]FVD[k,nu]FAD[{k,m0},{k,m0},{k+p2,m2},{k+p2,m3}],k]//FCE//Together", "\
(D*FAD[{k, m0}, {k, m0}, {k + p2, m2}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2 - \
D*FAD[{k, m0}, {k, m0}, {k + p2, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2 - \
FAD[{k, m0}, {k, m0}, {k + p2, m2}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, \
p2] + FAD[{k, m0}, {k, m0}, {k + p2, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p2, p2] - FAD[{k, m0}, {k, m0}, {k + p2, m2}]*MTD[mu, nu]*SPD[k, \
p2]^2*SPD[p2, p2] + FAD[{k, m0}, {k, m0}, {k + p2, m3}]*MTD[mu, nu]*SPD[k, \
p2]^2*SPD[p2, p2] + FAD[{k, m0}, {k, m0}, {k + p2, m2}]*MTD[mu, nu]*SPD[k, \
k]*SPD[p2, p2]^2 - FAD[{k, m0}, {k, m0}, {k + p2, m3}]*MTD[mu, nu]*SPD[k, \
k]*SPD[p2, p2]^2)/((-1 + D)*(m2 - m3)*(m2 + m3)*SPD[p2, p2]^2)"}, 
 {"fcstTIDPaVeDRankTwo-ID39", "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,m0},{k+p2,\
m0},{k+p2,m3}],k]//FCE//Together", "(D*FAD[{k, m0}, {k, m0}, {k + p2, \
m0}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2 - D*FAD[{k, m0}, {k, m0}, {k + p2, \
m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2 - FAD[{k, m0}, {k, m0}, {k + p2, \
m0}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2] + FAD[{k, m0}, {k, m0}, {k \
+ p2, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2] - FAD[{k, m0}, {k, \
m0}, {k + p2, m0}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] + FAD[{k, m0}, {k, \
m0}, {k + p2, m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] + FAD[{k, m0}, {k, \
m0}, {k + p2, m0}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2 - FAD[{k, m0}, {k, \
m0}, {k + p2, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2)/((-1 + D)*(m0 - \
m3)*(m0 + m3)*SPD[p2, p2]^2)"}, {"fcstTIDPaVeDRankTwo-ID40", "TID[FVD[k,mu]FV\
D[k,nu]FAD[{k,m0},{k,m1},{k+p2,m1},{k+p2,m1}],k]//FCE//Together", "(D*FAD[{k, \
m0}, {k + p2, m1}, {k + p2, m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2 - \
D*FAD[{k, m1}, {k + p2, m1}, {k + p2, m1}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
p2]^2 - FAD[{k, m0}, {k + p2, m1}, {k + p2, m1}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p2, p2] + FAD[{k, m1}, {k + p2, m1}, {k + p2, m1}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2] - FAD[{k, m0}, {k + p2, m1}, {k + p2, \
m1}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] + FAD[{k, m1}, {k + p2, m1}, {k + \
p2, m1}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] + FAD[{k, m0}, {k + p2, m1}, {k \
+ p2, m1}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2 - FAD[{k, m1}, {k + p2, m1}, \
{k + p2, m1}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2)/((-1 + D)*(m0 - m1)*(m0 + \
m1)*SPD[p2, p2]^2)"}, {"fcstTIDPaVeDRankTwo-ID41", "TID[FVD[k,mu]FVD[k,nu]FAD\
[{k,0},{k,m1},{k+p2,m2},{k+p2,m3}],k]//FCE//Together", "(-(D*FAD[k, {k + p2, \
m2}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2) + D*FAD[k, {k + p2, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2 + D*FAD[{k, m1}, {k + p2, m2}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2 - D*FAD[{k, m1}, {k + p2, m3}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2 + FAD[k, {k + p2, m2}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p2, p2] - FAD[k, {k + p2, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p2, p2] - FAD[{k, m1}, {k + p2, m2}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p2, p2] + FAD[{k, m1}, {k + p2, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, k]*SPD[p2, p2] + FAD[k, {k + p2, m2}]*MTD[mu, nu]*SPD[k, \
p2]^2*SPD[p2, p2] - FAD[k, {k + p2, m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] \
- FAD[{k, m1}, {k + p2, m2}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] + FAD[{k, \
m1}, {k + p2, m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] - FAD[k, {k + p2, \
m2}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2 + FAD[k, {k + p2, m3}]*MTD[mu, \
nu]*SPD[k, k]*SPD[p2, p2]^2 + FAD[{k, m1}, {k + p2, m2}]*MTD[mu, nu]*SPD[k, \
k]*SPD[p2, p2]^2 - FAD[{k, m1}, {k + p2, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, \
p2]^2)/((-1 + D)*m1^2*(m2 - m3)*(m2 + m3)*SPD[p2, p2]^2)"}, 
 {"fcstTIDPaVeDRankTwo-ID42", "TID[FVD[k,mu]FVD[k,nu]FAD[{k,m0},{k,0},{k+p2,m\
2},{k+p2,m3}],k]//FCE//Together", "(-(D*FAD[k, {k + p2, m2}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2) + D*FAD[k, {k + p2, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2 + D*FAD[{k, m0}, {k + p2, m2}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2 - D*FAD[{k, m0}, {k + p2, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2 + FAD[k, {k + p2, m2}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p2, p2] - FAD[k, {k + p2, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p2, p2] - FAD[{k, m0}, {k + p2, m2}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p2, p2] + FAD[{k, m0}, {k + p2, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p2, p2] + FAD[k, {k + p2, m2}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] - \
FAD[k, {k + p2, m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] - FAD[{k, m0}, {k + \
p2, m2}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] + FAD[{k, m0}, {k + p2, \
m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] - FAD[k, {k + p2, m2}]*MTD[mu, \
nu]*SPD[k, k]*SPD[p2, p2]^2 + FAD[k, {k + p2, m3}]*MTD[mu, nu]*SPD[k, \
k]*SPD[p2, p2]^2 + FAD[{k, m0}, {k + p2, m2}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, \
p2]^2 - FAD[{k, m0}, {k + p2, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2)/((-1 \
+ D)*m0^2*(m2 - m3)*(m2 + m3)*SPD[p2, p2]^2)"}, 
 {"fcstTIDPaVeDRankTwo-ID43", "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,0},{k+p2,m2\
},{k+p2,m3}],k]//FCE//Together", "(D*FAD[k, k, {k + p2, m2}]*FVD[p2, \
mu]*FVD[p2, nu]*SPD[k, p2]^2 - D*FAD[k, k, {k + p2, m3}]*FVD[p2, mu]*FVD[p2, \
nu]*SPD[k, p2]^2 - FAD[k, k, {k + p2, m2}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p2, p2] + FAD[k, k, {k + p2, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, \
k]*SPD[p2, p2] - FAD[k, k, {k + p2, m2}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] \
+ FAD[k, k, {k + p2, m3}]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] + FAD[k, k, {k \
+ p2, m2}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2 - FAD[k, k, {k + p2, \
m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2)/((-1 + D)*(m2 - m3)*(m2 + \
m3)*SPD[p2, p2]^2)"}, {"fcstTIDPaVeDRankTwo-ID44", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,0},{k+p2,0},{k+p2,m3}],k]//FCE//Togethe\
r", "(-(D*FAD[k, k, k + p2]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2) + D*FAD[k, \
k, {k + p2, m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2 + FAD[k, k, k + \
p2]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2] - FAD[k, k, {k + p2, \
m3}]*FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2] + FAD[k, k, k + \
p2]*MTD[mu, nu]*SPD[k, p2]^2*SPD[p2, p2] - FAD[k, k, {k + p2, m3}]*MTD[mu, \
nu]*SPD[k, p2]^2*SPD[p2, p2] - FAD[k, k, k + p2]*MTD[mu, nu]*SPD[k, \
k]*SPD[p2, p2]^2 + FAD[k, k, {k + p2, m3}]*MTD[mu, nu]*SPD[k, k]*SPD[p2, \
p2]^2)/((-1 + D)*m3^2*SPD[p2, p2]^2)"}, {"fcstTIDPaVeDRankTwo-ID45", 
  "TID[FVD[k,mu]FVD[k,nu]FAD[{k,0},{k,0},{k+p2,0},{k+p2,0}],k]//FCE//Together\
", "(FAD[k, k, k + p2, k + p2]*(D*FVD[p2, mu]*FVD[p2, nu]*SPD[k, p2]^2 - \
FVD[p2, mu]*FVD[p2, nu]*SPD[k, k]*SPD[p2, p2] - MTD[mu, nu]*SPD[k, \
p2]^2*SPD[p2, p2] + MTD[mu, nu]*SPD[k, k]*SPD[p2, p2]^2))/((-1 + D)*SPD[p2, \
p2]^2)"}}
