

(* :Title: FCLoopBasis.test                                              	    *)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 1990-2018 Rolf Mertig
	Copyright (C) 1997-2018 Frederik Orellana
	Copyright (C) 2014-2018 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for FCLoopBasis	  		*)

(* ------------------------------------------------------------------------ *)

Tests`LoopIntegrals`fcstFCLoopBasisIncompleteQ =
({
{"fcstFCLoopBasisIncompleteQ-ID1",
"FCLoopBasisIncompleteQ[FAD[{q1,m1}],{q1}]", "False"},
{"fcstFCLoopBasisIncompleteQ-ID2",
"FCLoopBasisIncompleteQ[FAD[q1,{q1,m1}],{q1}]", "False"},
{"fcstFCLoopBasisIncompleteQ-ID3",
"FCLoopBasisIncompleteQ[FAD[{q1,m1},{q1-l+p,m}],{q1}]",
"True"},
{"fcstFCLoopBasisIncompleteQ-ID4",
"FCLoopBasisIncompleteQ[SPD[q1,l]FAD[{q1,m1},{q1-l+p,m}],{q1}]", "False"},
{"fcstFCLoopBasisIncompleteQ-ID5",
"FCLoopBasisIncompleteQ[FAD[{q1,m1},{q2,m2}],{q1,q2}]",
"True"},
{"fcstFCLoopBasisIncompleteQ-ID6",
"FCLoopBasisIncompleteQ[SPD[q1,q2]FAD[{q1,m1},{q2,m2}],{q1,q2}]\
", "False"},
{"fcstFCLoopBasisIncompleteQ-ID7",
"FCLoopBasisIncompleteQ[FAD[{q1,m1},{q2,m2},q1-q2],{q1,q2}]",
"False"},
{"fcstFCLoopBasisIncompleteQ-ID8",
"FCLoopBasisIncompleteQ[FAD[q1,q2,{q1-l1,m1},{q2-l2,m2}],{q1,q2}]", "True"},
{"fcstFCLoopBasisIncompleteQ-ID9",
"FCLoopBasisIncompleteQ[SPD[q1,q2]SPD[q1,l2]SPD[q2,l1]FAD[q1,q2,{\
q1-l1,m1},{q2-l2,m2}],{q1,q2}]", "False"},
{"fcstFCLoopBasisIncompleteQ-ID10",
"FCLoopBasisIncompleteQ[CFAD[{q1,m1}],{q1}]", "False"},
{"fcstFCLoopBasisIncompleteQ-ID11",
"FCLoopBasisIncompleteQ[CFAD[q1,{q1,m1}],{q1}]", "False"},
{"fcstFCLoopBasisIncompleteQ-ID12",
"FCLoopBasisIncompleteQ[CFAD[{q1,m1},{q1-l+p,m}],{q1}]", "True"},
{"fcstFCLoopBasisIncompleteQ-ID13",
"FCLoopBasisIncompleteQ[CSPD[q1,l]CFAD[{q1,m1},{q1-l+p,m}],{q1}]",
"False"},
{"fcstFCLoopBasisIncompleteQ-ID14",
"FCLoopBasisIncompleteQ[CFAD[{q1,m1},{q2,m2}],{q1,q2}]", "True"},
{"fcstFCLoopBasisIncompleteQ-ID15",
"FCLoopBasisIncompleteQ[CSPD[q1,q2]CFAD[{q1,m1},{q2,m2}],{q1,q2}]",
	"False"},
{"fcstFCLoopBasisIncompleteQ-ID16",
"FCLoopBasisIncompleteQ[CFAD[{q1,m1},{q2,m2},q1-q2],{q1,q2}]",
"False"},
{"fcstFCLoopBasisIncompleteQ-ID17",
"FCLoopBasisIncompleteQ[CFAD[q1,q2,{q1-l1,m1},{q2-l2,m2}],{q1,q2}]\
", "True"},
{"fcstFCLoopBasisIncompleteQ-ID18",
"FCLoopBasisIncompleteQ[CSPD[q1,q2]CSPD[q1,l2]CSPD[q2,l1]CFAD[q1,\
q2,{q1-l1,m1},{q2-l2,m2}],{q1,q2}]", "False"},
{"FCLoopBasisIncompleteQ-ID19",
"FCLoopBasisIncompleteQ[SFAD[{q1,m1}],{q1}]", "False"},
{"FCLoopBasisIncompleteQ-ID20",
"FCLoopBasisIncompleteQ[SFAD[q1,{q1,m1}],{q1}]", "False"},
{"FCLoopBasisIncompleteQ-ID21",
"FCLoopBasisIncompleteQ[SFAD[{q1,m1},{q1-l+p,m}],{q1}]", "True"},
{"FCLoopBasisIncompleteQ-ID22",
"FCLoopBasisIncompleteQ[SPD[q1,l]SFAD[{q1,m1},{q1-l+p,m}],{q1}]",
"False"},
{"FCLoopBasisIncompleteQ-ID23",
"FCLoopBasisIncompleteQ[SFAD[{q1,m1},{q2,m2}],{q1,q2}]", "True"},
{"FCLoopBasisIncompleteQ-ID24",
"FCLoopBasisIncompleteQ[SPD[q1,q2]SFAD[{q1,m1},{q2,m2}] ,{q1,q2}]",
	"False"},
{"FCLoopBasisIncompleteQ-ID25",
"FCLoopBasisIncompleteQ[SFAD[{q1,m1},{q2,m2},q1-q2],{q1,q2} ]",
"False"},
{"FCLoopBasisIncompleteQ-ID26",
"FCLoopBasisIncompleteQ[SFAD[q1,q2,{q1-l1,m1},{q2-l2,m2}] \
,{q1,q2}]", "True"},
{"FCLoopBasisIncompleteQ-ID27",
"FCLoopBasisIncompleteQ[SPD[q1,q2]SPD[q1,l2]SPD[q2,l1]SFAD[q1,q2,{\
q1-l1,m1},{q2-l2,m2}],{q1,q2}]", "False"}

});

Tests`LoopIntegrals`fcstFCLoopBasisOverdeterminedQ =
({
{"fcstFCLoopBasisOverdeterminedQ-ID1",
"FCLoopBasisOverdeterminedQ[FAD[{q1,m1}],{q1},{}]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID2",
"FCLoopBasisOverdeterminedQ[FAD[{q1,m1},{q1-l+p,m}],{q1}]",
"False"},
{"fcstFCLoopBasisOverdeterminedQ-ID3",
"FCLoopBasisOverdeterminedQ[SPD[q1,l]FAD[{q1,m1},{q1-l+p,m}],{q1}]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID4",
"FCLoopBasisOverdeterminedQ[FAD[{q1,m1},{q2,m2}],{q1,q2}]",
"False"},
{"fcstFCLoopBasisOverdeterminedQ-ID5",
"FCLoopBasisOverdeterminedQ[SPD[q1,q2]FAD[{q1,m1},{q2,m2}],{q1,q2}]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID6",
"FCLoopBasisOverdeterminedQ[FAD[{q1,m1},{q2,m2},q1-q2],{q1,q2}]\
", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID7",
"FCLoopBasisOverdeterminedQ[FAD[q1,q2,{q1-l1,m1},{q2-l2,m2}],{q1,\
q2}]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID8",
"FCLoopBasisOverdeterminedQ[SPD[q1,q2]SPD[q1,l2]SPD[q2,l1]FAD[q1,\
q2,{q1-l1,m1},{q2-l2,m2}],{q1,q2}]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID9",
"FCLoopBasisOverdeterminedQ[FAD[q1,{q1,m1}],{q1}]", "True"},
{"fcstFCLoopBasisOverdeterminedQ-ID10",
"FCLoopBasisOverdeterminedQ[FAD[q1,{q1+l,m1},{q1-l,m2}],{q1}]",
	"True"},
{"fcstFCLoopBasisOverdeterminedQ-ID11",
"FCLoopBasisOverdeterminedQ[SPD[q1,l]FAD[q1,{q1+l,m1}],{q1}]",
"True"},
{"fcstFCLoopBasisOverdeterminedQ-ID12",
"FCLoopBasisOverdeterminedQ[FAD[q1,q2,{q1+l,m1},{q1-l,m1},{q2+l,m1}\
,{q2-l,m1}],{q1,q2}]", "True"},
{"fcstFCLoopBasisOverdeterminedQ-ID13",
"FCLoopBasisOverdeterminedQ[CFAD[{q1,m1}],{q1},{}]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID14",
"FCLoopBasisOverdeterminedQ[CFAD[{q1,m1},{q1-l+p,m}],{q1}]",
"False"},
{"fcstFCLoopBasisOverdeterminedQ-ID15",
"FCLoopBasisOverdeterminedQ[CSPD[q1,l]CFAD[{q1,m1},{q1-l+p,m}],{q1}\
]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID16",
"FCLoopBasisOverdeterminedQ[CFAD[{q1,m1},{q2,m2}],{q1,q2}]",
"False"},
{"fcstFCLoopBasisOverdeterminedQ-ID17",
"FCLoopBasisOverdeterminedQ[CSPD[q1,q2]CFAD[{q1,m1},{q2,m2}],{q1,\
q2}]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID18",
"FCLoopBasisOverdeterminedQ[CFAD[{q1,m1},{q2,m2},q1-q2],{q1,q2}]",
"False"},
{"fcstFCLoopBasisOverdeterminedQ-ID19",
"FCLoopBasisOverdeterminedQ[CFAD[q1,q2,{q1-l1,m1},{q2-l2,m2}],{q1,\
q2}]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID20",
"FCLoopBasisOverdeterminedQ[CSPD[q1,q2]CSPD[q1,l2]CSPD[q2,l1]CFAD[\
q1,q2,{q1-l1,m1},{q2-l2,m2}],{q1,q2}]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID21",
"FCLoopBasisOverdeterminedQ[CFAD[q1,{q1,m1}],{q1}]", "True"},
{"fcstFCLoopBasisOverdeterminedQ-ID22",
"FCLoopBasisOverdeterminedQ[CFAD[q1,{q1+l,m1},{q1-l,m2}],{q1}]",
"True"},
{"fcstFCLoopBasisOverdeterminedQ-ID23",
"FCLoopBasisOverdeterminedQ[CSPD[q1,l]CFAD[q1,{q1+l,m1}],{q1}]",
"True"},
{"fcstFCLoopBasisOverdeterminedQ-ID24",
"FCLoopBasisOverdeterminedQ[CFAD[q1,q2,{q1+l,m1},{q1-l,m1},{q2+l,\
m1},{q2-l,m1}],{q1,q2}]", "True"},
{"fcstFCLoopBasisOverdeterminedQ-ID25",
"FCLoopBasisOverdeterminedQ[SFAD[{q1,m1}],{q1},{}]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID26",
"FCLoopBasisOverdeterminedQ[SFAD[{q1,m1},{q1-l+p,m}],{q1}]",
"False"},
{"fcstFCLoopBasisOverdeterminedQ-ID27",
"FCLoopBasisOverdeterminedQ[SPD[q1,l]SFAD[{q1,m1},{q1-l+p,m}],{q1}]\
", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID28",
"FCLoopBasisOverdeterminedQ[SFAD[{q1,m1},{q2,m2}],{q1,q2}]",
"False"},
{"fcstFCLoopBasisOverdeterminedQ-ID29",
"FCLoopBasisOverdeterminedQ[SPD[q1,q2]SFAD[{q1,m1},{q2,m2}],{q1,q2}\
]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID30",
"FCLoopBasisOverdeterminedQ[SFAD[{q1,m1},{q2,m2},q1-q2],{q1,q2}]",
"False"},
{"fcstFCLoopBasisOverdeterminedQ-ID31",
"FCLoopBasisOverdeterminedQ[SFAD[q1,q2,{q1-l1,m1},{q2-l2,m2}],{q1,\
q2}]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID32",
"FCLoopBasisOverdeterminedQ[SPD[q1,q2]SPD[q1,l2]SPD[q2,l1]SFAD[q1,\
q2,{q1-l1,m1},{q2-l2,m2}],{q1,q2}]", "False"},
{"fcstFCLoopBasisOverdeterminedQ-ID33",
"FCLoopBasisOverdeterminedQ[SFAD[q1,{q1,m1}],{q1}]", "True"},
{"fcstFCLoopBasisOverdeterminedQ-ID34",
"FCLoopBasisOverdeterminedQ[SFAD[q1,{q1+l,m1},{q1-l,m2}],{q1}]",
"True"},
{"fcstFCLoopBasisOverdeterminedQ-ID35",
"FCLoopBasisOverdeterminedQ[SPD[q1,l]SFAD[q1,{q1+l,m1}],{q1}]",
"True"},
{"fcstFCLoopBasisOverdeterminedQ-ID36",
"FCLoopBasisOverdeterminedQ[SFAD[q1,q2,{q1+l,m1},{q1-l,m1},{q2+l,\
m1},{q2-l,m1}],{q1,q2}]", "True"}

});

Tests`LoopIntegrals`fcstFCLoopBasisFindCompletion =
({
{"fcstFCLoopBasisFindCompletion-ID1",
"FCLoopBasisFindCompletion[FAD[{q1,m1},{q1-l+p,m}],{q1},Method->NullSpace]",
"{FeynAmpDenominator[PropagatorDenominator[Momentum[q1, D], m1], \
PropagatorDenominator[-Momentum[l, D] + Momentum[p, D] + Momentum[q1, \
D], m]], {Pair[Momentum[l, D], Momentum[q1, D]] + Pair[Momentum[p, \
D], Momentum[q1, D]]}}"},
{"fcstFCLoopBasisFindCompletion-ID2",
"FCLoopBasisFindCompletion[FAD[{q1,m1},{q2,m2}],{q1,q2},Method->NullSpace]",
"{FeynAmpDenominator[PropagatorDenominator[Momentum[q1, D], m1], \
PropagatorDenominator[Momentum[q2, D], m2]], {Pair[Momentum[q1, D], \
Momentum[q2, D]]}}"},
{"fcstFCLoopBasisFindCompletion-ID3",
"FCLoopBasisFindCompletion[FAD[q1,q2,{q1-l1,m1},{q2-l2,m2}],{q1,q2},Method->NullSpace]",
"{FeynAmpDenominator[PropagatorDenominator[Momentum[q1, D], 0], \
PropagatorDenominator[Momentum[q2, D], 0], \
PropagatorDenominator[-Momentum[l1, D] + Momentum[q1, D], m1], \
PropagatorDenominator[-Momentum[l2, D] + Momentum[q2, D], m2]], \
{Pair[Momentum[q1, D], Momentum[q2, D]], Pair[Momentum[l2, D], \
Momentum[q1, D]], Pair[Momentum[l1, D], Momentum[q2, D]]}}"},
{"fcstFCLoopBasisFindCompletion-ID4","FCLoopBasisFindCompletion[FAD[q, {q - p + l, m}], {q}] // FCE",
"{FAD[q, {l - p + q, m}], {SPD[l, q]}}"},
{"fcstFCLoopBasisFindCompletion-ID5","FCLoopBasisFindCompletion[FAD[{q1, m1}, {q1 - l + p, m}], {q1}] // FCE",
"{FAD[{q1, m1}, {-l + p + q1, m}], {SPD[l, q1]}}"},
{"fcstFCLoopBasisFindCompletion-ID6","FCLoopBasisFindCompletion[FAD[{q1, m1}, {q2, m2}], {q1, q2}] // FCE",
"{FAD[{q1, m1}, {q2, m2}], {SPD[q1, q2]}}"},
{"fcstFCLoopBasisFindCompletion-ID7","FCLoopBasisFindCompletion[
FAD[q1, q2, {q1 - l1, m1}, {q2 - l2, m2}], {q1, q2}] // FCE",
"{FAD[q1, q2, {-l1 + q1, m1}, {-l2 + q2, m2}], {SPD[l1, q2],
SPD[l2, q1], SPD[q1, q2]}}"},
{"fcstFCLoopBasisFindCompletion-ID8","FCLoopBasisFindCompletion[FAD[q1 + p,
q2 - k] SPD[q1, q2], {q1, q2}, Method -> { FAD[{q2 + k, m}], FAD[{q1 - p, m}],
SPD[p, q2], SPD[k, q1]}]//FCE",
"{FAD[p + q1, -k + q2] SPD[q1, q2], {FAD[{k + q2, m}],
FAD[{-p + q1, m}], SPD[p, q2], SPD[k, q1]}}"},
{"fcstFCLoopBasisFindCompletion-ID9","FCLoopBasisFindCompletion[CFAD[q1 + p, q2 - k] CSPD[q1, q2], {q1, q2},
Method -> {CFAD[{q2 + k, m}], CFAD[{q1 - p, m}], CSPD[p, q2],
CSPD[k, q1]}, FCE -> True]","{CFAD[{{p + q1, 0}, {0, -1}, 1}, {{-k + q2, 0}, {0, -1}, 1}] CSPD[q1,
q2], {CFAD[{{k + q2, 0}, {m, -1}, 1}],
CFAD[{{-p + q1, 0}, {m, -1}, 1}], CSPD[p, q2], CSPD[k, q1]}}"},
{"fcstFCLoopBasisFindCompletion-ID10","FCLoopBasisFindCompletion[
CFAD[q1, q2, {q1 - l1, m1}, {q2 - l2, m2}], {q1, q2}, FCE -> True]","{CFAD[{{q1, 0}, {0, -1}, 1}, {{q2, 0}, {0, -1},
1}, {{-l1 + q1, 0}, {m1, -1}, 1}, {{-l2 + q2, 0}, {m2, -1},
1}], {CSPD[l1, q2], CSPD[l2, q1], CSPD[q1, q2]}}"},
{"fcstFCLoopBasisFindCompletion-ID11","FCLoopBasisFindCompletion[CFAD[{q1, m1}, {q2, m2}], {q1, q2},
FCE -> True]","{CFAD[{{q1, 0}, {m1, -1}, 1}, {{q2, 0}, {m2, -1}, 1}], {CSPD[q1, q2]}}"},
{"fcstFCLoopBasisFindCompletion-ID12","FCLoopBasisFindCompletion[CFAD[{q1, m1}, {q1 - l + p, m}], {q1},
FCE -> True]","{CFAD[{{q1, 0}, {m1, -1}, 1}, {{-l + p + q1, 0}, {m, -1}, 1}], {CSPD[l, q1]}}"},
{"fcstFCLoopBasisFindCompletion-ID13",
"FCLoopBasisFindCompletion[SFAD[q1+p,q2-k] \
SPD[q1,q2],{q1,q2},Method\[Rule]{SFAD[{q2+k,m}],SFAD[{q1-p,m}],SPD[p,\
q2],SPD[k,q1]},FCE\[Rule]True]",
"{SFAD[{{p + q1, 0}, {0, 1}, 1}, {{-k + q2, 0}, {0, 1}, \
1}]*SPD[q1, q2], {SFAD[{{k + q2, 0}, {m, 1}, 1}], SFAD[{{-p + q1, 0}, \
{m, 1}, 1}], SPD[p, q2], SPD[k, q1]}}"},
{"fcstFCLoopBasisFindCompletion-ID14",
"FCLoopBasisFindCompletion[SFAD[q1,q2,{q1-l1,m1},{q2-l2,m2}],{q1,\
q2},FCE\[Rule]True]",
"{SFAD[{{q1, 0}, {0, 1}, 1}, {{q2, 0}, {0, 1}, 1}, {{-l1 + q1, 0}, \
{m1, 1}, 1}, {{-l2 + q2, 0}, {m2, 1}, 1}], {SPD[l1, q2], SPD[l2, q1], \
SPD[q1, q2]}}"},
{"fcstFCLoopBasisFindCompletion-ID15",
"FCLoopBasisFindCompletion[SFAD[{q1,m1},{q2,m2}],{q1,q2},FCE\[Rule]\
True]", "{SFAD[{{q1, 0}, {m1, 1}, 1}, {{q2, 0}, {m2, 1}, 1}], \
{SPD[q1, q2]}}"},
{"fcstFCLoopBasisFindCompletion-ID16",
"FCLoopBasisFindCompletion[SFAD[{q1,m1},{q1-l+p,m}],{q1},FCE\[Rule]\
True]", "{SFAD[{{q1, 0}, {m1, 1}, 1}, {{-l + p + q1, 0}, {m, 1}, 1}], \
{SPD[l, q1]}}"},


{"fcstFCLoopBasisFindCompletion-ID17",
"FCLoopBasisFindCompletion[
FCI@SFAD[{{k2, 0}, {0, 1}, 1}, {{-k1 + k2, 0}, {0, 1},
	1}, {{k3, 0}, {0, 1}, 1}, {{k2 + k3, 0}, {0, 1},
	1}, {{k1 + k3 - q, 0}, {0, 1}, 1}, {{-k1 + q, 0}, {0, 1},
	1}, {{0, (k1 - k2).r1}, {0, 1}, 1}, {{0, (k2 + k3).r2}, {0, 1},
	1}, {{0, (-k1 + k2 + q).r2}, {0, 1}, 1}, {{k1, 0}, {0, 1},
	1}], {k1, k2, k3}, Method -> {SPD[k1, k3], SPD[k1, r1]},
Check -> False, FCE -> True]", "{SFAD[{{k2, 0}, {0, 1}, 1}, {{-k1 + k2, 0}, {0, 1},
1}, {{k3, 0}, {0, 1}, 1}, {{k2 + k3, 0}, {0, 1},
1}, {{k1 + k3 - q, 0}, {0, 1}, 1}, {{-k1 + q, 0}, {0, 1},
1}, {{0, (k1 - k2).r1}, {0, 1}, 1}, {{0, (k2 + k3).r2}, {0, 1},
1}, {{0, (-k1 + k2 + q).r2}, {0, 1}, 1}, {{k1, 0}, {0, 1},
1}], {SPD[k1, k3], SPD[k1, r1]}}"},
{"fcstFCLoopBasisFindCompletion-ID18",
"FCLoopBasisFindCompletion[
FCI@SFAD[{{k2, 0}, {0, 1}, 1}, {{-k1 + k2, 0}, {0, 1},
	1}, {{k3, 0}, {0, 1}, 1}, {{k2 + k3, 0}, {0, 1},
	1}, {{k1 + k3 - q, 0}, {0, 1}, 1}, {{-k1 + q, 0}, {0, 1},
	1}, {{0, (k1 - k2).r1}, {0, 1}, 1}, {{0, (k2 + k3).r2}, {0, 1},
	1}, {{0, (-k1 + k2 + q).r2}, {0, 1}, 1}, {{k1, 0}, {0, 1},
	1}], {k1, k2, k3}, Method -> {SPD[k1, k3]}, Check -> False,
FCE -> True]", "{SFAD[{{k2, 0}, {0, 1}, 1}, {{-k1 + k2, 0}, {0, 1},
1}, {{k3, 0}, {0, 1}, 1}, {{k2 + k3, 0}, {0, 1},
1}, {{k1 + k3 - q, 0}, {0, 1}, 1}, {{-k1 + q, 0}, {0, 1},
1}, {{0, (k1 - k2).r1}, {0, 1}, 1}, {{0, (k2 + k3).r2}, {0, 1},
1}, {{0, (-k1 + k2 + q).r2}, {0, 1}, 1}, {{k1, 0}, {0, 1},
1}], {SPD[k1, k3]}}"}
});

Tests`LoopIntegrals`fcstFCLoopBasisSplit =
({
{"fcstFCLoopBasisSplit-ID1",
"FCLoopBasisSplit[FCI@FAD[{q,m}],{q1,q2},Head\[Rule]loopInt,FCE\
\[Rule]True]",
"loopInt[FeynAmpDenominator[PropagatorDenominator[Momentum[q, D], \
m]], 0]"},
{"fcstFCLoopBasisSplit-ID2",
"FCLoopBasisSplit[FCI@FAD[{q1,m}],{q1,q2},Head\[Rule]loopInt,FCE\
\[Rule]True]", "{loopInt[FAD[{q1, m}], {q1}]}"},
{"fcstFCLoopBasisSplit-ID3",
"FCLoopBasisSplit[FCI@FAD[{q1,m},{q2,m},{p1-p2,0}],{q1,q2},Head\
\[Rule]loopInt,FCE\[Rule]True]",
"{loopInt[FAD[{q1, m}], {q1}], loopInt[FAD[{q2, m}], {q2}], \
loopInt[FAD[p1 - p2], 0]}"},
{"fcstFCLoopBasisSplit-ID4",
"FCLoopBasisSplit[FCI@FAD[{q1,m},{q2,m}],{q1,q2},Head\[Rule]\
loopInt,FCE\[Rule]True]",
"{loopInt[FAD[{q1, m}], {q1}], loopInt[FAD[{q2, m}], {q2}]}"},
{"fcstFCLoopBasisSplit-ID5",
"FCLoopBasisSplit[FCI@FAD[{q1,m},{q2-q3,m}],{q1,q2},Head\[Rule]\
loopInt,FCE\[Rule]True]",
"{loopInt[FAD[{q1, m}], {q1}], loopInt[FAD[{q2 - q3, m}], \
{q2}]}"},
{"fcstFCLoopBasisSplit-ID6",
"FCLoopBasisSplit[FCI@FAD[{q1,m},{q2,m},{q3-q4,0},{q3-p,m},{q5}],{\
q1,q2,q3,q4,q5},Head\[Rule]loopInt,FCE\[Rule]True]",
"{loopInt[FAD[{q1, m}], {q1}], loopInt[FAD[{q2, m}], {q2}], \
loopInt[FAD[q5], {q5}], loopInt[FAD[{-p + q3, m}, q3 - q4], {q3, \
q4}]}"},
{"fcstFCLoopBasisSplit-ID7",
"FCLoopBasisSplit[FCI@FAD[{q1,m},{q2,m},{q3-q4,0},{q3-p,m},{q5}],{\
q1,q2,q3,q4,q5},Head\[Rule]loopInt,List\[Rule]False,FCE\[Rule]True]",
"loopInt[FAD[q5], {q5}]*loopInt[FAD[{q1, m}], \
{q1}]*loopInt[FAD[{q2, m}], {q2}]*loopInt[FAD[{-p + q3, m}, q3 - q4], \
{q3, q4}]"},
{"fcstFCLoopBasisSplit-ID8",
"FCLoopBasisSplit[FCI[CFAD[q1, q1 - q2, q2, {q3, m^2}]], {q1, q2, q3},
Head -> loop, FCE -> True]",
"{loop[CFAD[{{q3, 0}, {m^2, -1}, 1}], {q3}],
loop[CFAD[{{q2, 0}, {0, -1}, 1}, {{q1, 0}, {0, -1},
	1}, {{q1 - q2, 0}, {0, -1}, 1}], {q1, q2}]}"},
{"fcstFCLoopBasisSplit-ID9",
"FCLoopBasisSplit[FCI[SFAD[q1, q1 - q2, q2, {q3, m^2}]], {q1, q2, q3},
Head -> loop, FCE -> True]",
"{loop[SFAD[{{q3, 0}, {m^2, 1}, 1}], {q3}],
loop[SFAD[{{q2, 0}, {0, 1}, 1}, {{q1, 0}, {0, 1},
	1}, {{q1 - q2, 0}, {0, 1}, 1}], {q1, q2}]}"}
});

Tests`LoopIntegrals`fcstFCLoopBasisExtract =
{{"fcstFCLoopBasisExtract-ID1",
"FCLoopBasisExtract[FCI[CFAD[q,q-p,q-p]],{q},{D-1}]",
"{{CartesianPair[CartesianMomentum[q, -1 + D], CartesianMomentum[q, \
-1 + D]], CartesianPair[CartesianMomentum[p, -1 + D], \
CartesianMomentum[p, -1 + D]] - 2*CartesianPair[CartesianMomentum[p, \
-1 + D], CartesianMomentum[q, -1 + D]] + \
CartesianPair[CartesianMomentum[q, -1 + D], CartesianMomentum[q, -1 + \
D]]}, {CartesianPair[CartesianMomentum[p, -1 + D], \
CartesianMomentum[q, -1 + D]], CartesianPair[CartesianMomentum[q, -1 \
+ D], CartesianMomentum[q, -1 + D]]}, {1, 2}, \
{FeynAmpDenominator[CartesianPropagatorDenominator[CartesianMomentum[\
q, -1 + D], 0, 0, {1, -1}]], \
FeynAmpDenominator[CartesianPropagatorDenominator[-CartesianMomentum[\
p, -1 + D] + CartesianMomentum[q, -1 + D], 0, 0, {1, -1}]]}}"}, \
{"fcstFCLoopBasisExtract-ID2",
"FCLoopBasisExtract[FCI[CSP[q,p]CFAD[q,q-p,q-p]],{q},{3,D-1}]",
"{{CartesianPair[CartesianMomentum[p], CartesianMomentum[q]], \
CartesianPair[CartesianMomentum[q, -1 + D], CartesianMomentum[q, -1 + \
D]], CartesianPair[CartesianMomentum[p, -1 + D], CartesianMomentum[p, \
-1 + D]] - 2*CartesianPair[CartesianMomentum[p, -1 + D], \
CartesianMomentum[q, -1 + D]] + CartesianPair[CartesianMomentum[q, -1 \
+ D], CartesianMomentum[q, -1 + D]]}, \
{CartesianPair[CartesianMomentum[p], CartesianMomentum[q]], \
CartesianPair[CartesianMomentum[q], CartesianMomentum[q]], \
CartesianPair[CartesianMomentum[p, -1 + D], CartesianMomentum[q, -1 + \
D]], CartesianPair[CartesianMomentum[q, -1 + D], CartesianMomentum[q, \
-1 + D]]}, {-1, 1, 2}, {CartesianPair[CartesianMomentum[p], \
CartesianMomentum[q]], \
FeynAmpDenominator[CartesianPropagatorDenominator[CartesianMomentum[q,\
-1 + D], 0, 0, {1, -1}]], \
FeynAmpDenominator[CartesianPropagatorDenominator[-CartesianMomentum[\
p, -1 + D] + CartesianMomentum[q, -1 + D], 0, 0, {1, -1}]]}}"}, \
{"fcstFCLoopBasisExtract-ID3",
"FCLoopBasisExtract[FCI[CSPD[q,p]CFAD[q,q-p,q-p]],{q},{3,D-1}]",
"{{CartesianPair[CartesianMomentum[p, -1 + D], CartesianMomentum[q, \
-1 + D]], CartesianPair[CartesianMomentum[q, -1 + D], \
CartesianMomentum[q, -1 + D]], CartesianPair[CartesianMomentum[p, -1 \
+ D], CartesianMomentum[p, -1 + D]] - \
2*CartesianPair[CartesianMomentum[p, -1 + D], CartesianMomentum[q, -1 \
+ D]] + CartesianPair[CartesianMomentum[q, -1 + D], \
CartesianMomentum[q, -1 + D]]}, {CartesianPair[CartesianMomentum[p, \
-1 + D], CartesianMomentum[q, -1 + D]], \
CartesianPair[CartesianMomentum[q, -1 + D], CartesianMomentum[q, -1 + \
D]]}, {-1, 1, 2}, {CartesianPair[CartesianMomentum[p, -1 + D], \
CartesianMomentum[q, -1 + D]], \
FeynAmpDenominator[CartesianPropagatorDenominator[CartesianMomentum[q,\
-1 + D], 0, 0, {1, -1}]], \
FeynAmpDenominator[CartesianPropagatorDenominator[-CartesianMomentum[\
p, -1 + D] + CartesianMomentum[q, -1 + D], 0, 0, {1, -1}]]}}"},
{"fcstFCLoopBasisExtract-ID4","FCLoopBasisExtract[FCI[SFAD[q, q - p, q - p]], {q}, {D}]",
"{{Pair[Momentum[q, D], Momentum[q, D]],
Pair[Momentum[p, D], Momentum[p, D]] -
2 Pair[Momentum[p, D], Momentum[q, D]] +
Pair[Momentum[q, D], Momentum[q, D]]}, {Pair[Momentum[p, D],
Momentum[q, D]], Pair[Momentum[q, D], Momentum[q, D]]}, {1,
2}, {FeynAmpDenominator[
StandardPropagatorDenominator[Momentum[q, D], 0, 0, {1, 1}]],
FeynAmpDenominator[
StandardPropagatorDenominator[-Momentum[p, D] + Momentum[q, D], 0,
	0, {1, 1}]]}}"},
{"fcstFCLoopBasisExtract-ID5","FCLoopBasisExtract[FCI[SPD[q, p] SFAD[q, q - p, q - p]], {q}, {4, D}]",
"{{Pair[Momentum[p, D], Momentum[q, D]],
Pair[Momentum[q, D], Momentum[q, D]],
Pair[Momentum[p, D], Momentum[p, D]] -
2 Pair[Momentum[p, D], Momentum[q, D]] +
Pair[Momentum[q, D], Momentum[q, D]]}, {Pair[Momentum[p, D],
Momentum[q, D]], Pair[Momentum[q, D], Momentum[q, D]]}, {-1, 1,
2}, {Pair[Momentum[p, D], Momentum[q, D]],
FeynAmpDenominator[
StandardPropagatorDenominator[Momentum[q, D], 0, 0, {1, 1}]],
FeynAmpDenominator[
StandardPropagatorDenominator[-Momentum[p, D] + Momentum[q, D], 0,
	0, {1, 1}]]}}"},
{"fcstFCLoopBasisExtract-ID6","FCLoopBasisExtract[FCI[SPD[q, p] SFAD[q, q - p, q - p]], {q}, {4, D}]",
"{{Pair[Momentum[p, D], Momentum[q, D]],
Pair[Momentum[q, D], Momentum[q, D]],
Pair[Momentum[p, D], Momentum[p, D]] -
2 Pair[Momentum[p, D], Momentum[q, D]] +
Pair[Momentum[q, D], Momentum[q, D]]}, {Pair[Momentum[p, D],
Momentum[q, D]], Pair[Momentum[q, D], Momentum[q, D]]}, {-1, 1,
2}, {Pair[Momentum[p, D], Momentum[q, D]],
FeynAmpDenominator[
StandardPropagatorDenominator[Momentum[q, D], 0, 0, {1, 1}]],
FeynAmpDenominator[
StandardPropagatorDenominator[-Momentum[p, D] + Momentum[q, D], 0,
	0, {1, 1}]]}}"},
{"fcstFCLoopBasisExtract-ID7","FCLoopBasisExtract[FCI@CFAD[{k, 0, 4}, l - k], {k}, {D - 1}]",
"{{CartesianPair[CartesianMomentum[k, -1 + D],
CartesianMomentum[k, -1 + D]],
CartesianPair[CartesianMomentum[k, -1 + D],
	CartesianMomentum[k, -1 + D]] -
2 CartesianPair[CartesianMomentum[k, -1 + D],
	CartesianMomentum[l, -1 + D]] +
CartesianPair[CartesianMomentum[l, -1 + D],
	CartesianMomentum[l, -1 + D]]}, {CartesianPair[
CartesianMomentum[k, -1 + D], CartesianMomentum[k, -1 + D]],
CartesianPair[CartesianMomentum[k, -1 + D],
CartesianMomentum[l, -1 + D]]}, {4,
1}, {FeynAmpDenominator[
CartesianPropagatorDenominator[CartesianMomentum[k, -1 + D], 0,
	0, {1, -1}]],
FeynAmpDenominator[
CartesianPropagatorDenominator[-CartesianMomentum[k, -1 + D] +
	CartesianMomentum[l, -1 + D], 0, 0, {1, -1}]]}}"},
{"fcstFCLoopBasisExtract-ID8","FCLoopBasisExtract[FCI@SFAD[{k, 0, 4}, l - k], {k}, {D}]",
"{{Pair[Momentum[k, D], Momentum[k, D]],
Pair[Momentum[k, D], Momentum[k, D]] -
2 Pair[Momentum[k, D], Momentum[l, D]] +
Pair[Momentum[l, D], Momentum[l, D]]}, {Pair[Momentum[k, D],
Momentum[k, D]], Pair[Momentum[k, D], Momentum[l, D]]}, {4,
1}, {FeynAmpDenominator[
StandardPropagatorDenominator[Momentum[k, D], 0, 0, {1, 1}]],
FeynAmpDenominator[
StandardPropagatorDenominator[-Momentum[k, D] + Momentum[l, D], 0,
	0, {1, 1}]]}}"}
};

