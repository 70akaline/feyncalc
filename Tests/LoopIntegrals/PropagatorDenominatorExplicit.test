

(* :Title: PropagatorDenominatorExplicit.test								*)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 1990-2018 Rolf Mertig
	Copyright (C) 1997-2018 Frederik Orellana
	Copyright (C) 2014-2018 Vladyslav Shtabovenko
*)

(* :Summary:  	Framework independent unit tests for
				PropagatorDenominatorExplicit								*)

(* ------------------------------------------------------------------------ *)

Tests`LoopIntegrals`fcstPropagatorDenominatorExplicit = {

{"fcstPropagatorDenominatorExplicit-ID1",
	"PropagatorDenominatorExplicit[FAD[{q, m}, {q - p, 0}] // FCI] // FCE",
	"1/((-m^2 + SPD[q, q]) (SPD[p, p] - 2 SPD[p, q] + SPD[q, q]))"},
{"fcstPropagatorDenominatorExplicit-ID2","PropagatorDenominatorExplicit[FAD[{q, m}, {q - p, 0}] // FCI,
	Head -> dummy] // FCE","dummy[1/((-m^2 + SPD[q, q]) (SPD[p, p] - 2 SPD[p, q] + SPD[q, q]))]"},
{"fcstPropagatorDenominatorExplicit-ID3","PropagatorDenominatorExplicit[
	FAD[{q, m}, {q - p, 0}] // FCI // FeynAmpDenominatorSplit,
	Head -> dummy] // FCE","dummy[1/(-m^2 + SPD[q, q])] dummy[1/(
	SPD[p, p] - 2 SPD[p, q] + SPD[q, q])]"},
{"fcstPropagatorDenominatorExplicit-ID4",
	"PropagatorDenominatorExplicit[FAD[{q, m}, {q + p}]] // FCE",
	"1/((-m^2 + SPD[q, q]) (SPD[p, p] + 2 SPD[p, q] + SPD[q, q]))"
},
{"fcstPropagatorDenominatorExplicit-ID5",
	"PropagatorDenominatorExplicit[FAD[{q, m}, {q + p}], Dimension -> 4]//FCE",
	"1/((-m^2 + SP[q, q]) (SP[p, p] + 2 SP[p, q] + SP[q, q]))"
},
{"fcstPropagatorDenominatorExplicit-ID6",
	"FCClearScalarProducts[]; \n SPD[p, p] = s; PropagatorDenominatorExplicit[FAD[{p + q, m}], Mandelstam -> {s, t, u, m^2}, FCE->True]",
	"1/(-t - u + 2 SPD[p, q] + SPD[q, q])"},
{"fcstPropagatorDenominatorExplicit-ID7",
	"tmp = PropagatorDenominatorExplicit[FAD[{p + q, m}], FCE -> True]; \n FCClearScalarProducts[]; \n tmp",
	"1/(-m^2 + s + 2 SPD[p, q] + SPD[q, q])"},
{"fcstPropagatorDenominatorExplicit-ID8",
	"PropagatorDenominatorExplicit[FAD[{p, SmallVariable[m]}], FCE -> True]",
	"1/(-SmallVariable[m]^2 + SPD[p, p])"},
{"fcstPropagatorDenominatorExplicit-ID9",
	"PropagatorDenominatorExplicit[FAD[{p, SmallVariable[m]}], FCE -> True, SmallVariable->True]",
	"1/(SPD[p, p])"},
{"fcstPropagatorDenominatorExplicit-ID10",
	"PropagatorDenominatorExplicit[aa FAD[{q, m}], Denominator -> True, Head -> hd, FCE -> True]",
	"aa/hd[-m^2 + SPD[q, q]]"},
{"fcstPropagatorDenominatorExplicit-ID11",
	"PropagatorDenominatorExplicit[GFAD[{SPD[q1, p] SPD[q2, p], 2, 1}], FCE -> True]",
	"1/(SPD[p, q1]^2 SPD[p, q2]^2)"},
{"fcstPropagatorDenominatorExplicit-ID12",
	"PropagatorDenominatorExplicit[FAD[{p1 + p2, 0}], ExpandScalarProduct -> False]",
	"1/Pair[Momentum[p1, D] + Momentum[p2, D], Momentum[p1, D] + Momentum[p2, D]]"},
{"fcstPropagatorDenominatorExplicit-ID13",
	"PropagatorDenominatorExplicit[FAD[{p1 + p2, 0}], ExpandScalarProduct -> False, MomentumCombine -> True]",
	"1/Pair[Momentum[p1 + p2, D], Momentum[p1 + p2, D]]"}
}
